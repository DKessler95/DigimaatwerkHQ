{"file_contents":{"ProjectCalculator_Prijzen.md":{"content":"# Digimaatwerk Project Calculator Prijsstructuur\n\n## Basisprijs per Project Type en Schaal\n\n### Website / App\n| Schaal     | Prijs    | Beschrijving                            |\n|------------|----------|----------------------------------------|\n| Klein      | €650     | Basis website (tot 5 pagina's)          |\n| Middel     | €1.250   | Geavanceerde website (tot 10 pagina's)  |\n| Groot      | €2.500   | Maatwerk applicatie                     |\n\n### AI & Chatbot\nDe prijs wordt berekend als `website prijs × 1.2`\n| Schaal     | Berekening       | Prijs      |\n|------------|------------------|------------|\n| Klein      | €650 × 1.2       | €780       |\n| Middel     | €1.250 × 1.2     | €1.500     |\n| Groot      | €2.500 × 1.2     | €3.000     |\n\n### Automatisering\nDe prijs wordt berekend als `website prijs × 1.3`\n| Schaal     | Berekening       | Prijs      |\n|------------|------------------|------------|\n| Klein      | €650 × 1.3       | €845       |\n| Middel     | €1.250 × 1.3     | €1.625     |\n| Groot      | €2.500 × 1.3     | €3.250     |\n\n### Gecombineerd Project\nDe prijs wordt berekend als `website prijs × 2.5`\n| Schaal     | Berekening       | Prijs      |\n|------------|------------------|------------|\n| Klein      | €650 × 2.5       | €1.625     |\n| Middel     | €1.250 × 2.5     | €3.125     |\n| Groot      | €2.500 × 2.5     | €6.250     |\n\n## Aanvullende Features per Project Type\n\n### Website / App Features\n| Feature                                  | Prijs    |\n|------------------------------------------|----------|\n| Contactformulier met email service       | €100     |\n| Extra pagina's (per 5)                   | €150     |\n| Blog functionaliteit                     | €350     |\n| Gebruikersauthenticatie                  | €450     |\n| E-commerce functionaliteit               | €850     |\n| CMS systeem                              | €550     |\n| Meertalige website                       | €100     |\n| 3D visualisaties (Start van)             | €100     |\n\n### AI & Chatbot Features\n| Feature                                  | Prijs    |\n|------------------------------------------|----------|\n| Basis chatbot (FAQ)                      | €500     |\n| Meertalige chatbot                       | €200     |\n| CRM-integratie                           | €300     |\n| Geavanceerde AI-functionaliteit (NLU/NLP)| €750     |\n| Chatbot met betalingsverwerking          | €600     |\n| Analytics dashboard                      | €350     |\n\n### Automatisering Features\n| Feature                                  | Prijs    |\n|------------------------------------------|----------|\n| Workflow automatisering                  | €400     |\n| Integratie met bestaande tools           | €300     |\n| Automatische e-mailflows                 | €250     |\n| Data-analyse en rapportage               | €500     |\n| Realtime meldingen                       | €200     |\n\n### Gecombineerd Project Features\n| Feature                                  | Prijs    |\n|------------------------------------------|----------|\n| Website met chatbot integratie           | €1.000   |\n| Automatisering gekoppeld aan website     | €750     |\n| E-commerce met AI-aanbevelingen          | €1.200   |\n| Dynamische content op basis van AI       | €900     |\n| Contactformulier met email service       | €100     |\n| Meertalige website                       | €100     |\n\n## Tijdlijn Prioriteit Multipliers\n| Prioriteit | Tijdsreductie | Prijsmultiplier |\n|------------|---------------|----------------|\n| Standaard  | 0%            | 1.0            |\n| Versneld   | 25%           | 1.25           |\n| Spoed      | 40%           | 1.5            |\n\n## Support Pakketten (Maandelijkse kosten)\n| Support Package | Prijs/maand |\n|----------------|-------------|\n| Geen           | €0          |\n| Basic          | €29         |\n| Standaard      | €69         |\n| Premium        | €129        |\n\n## Prijsberekening Formule\n\nDe totale projectprijs wordt berekend met de volgende formule:\n\n```\nTotaalPrijs = (BasisPrijs + FeaturesKosten) × TijdlijnMultiplier\n```\n\nHet resultaat wordt met een marge van ±5% weergegeven om flexibiliteit te bieden:\n- Minimum prijs = TotaalPrijs × 0.95\n- Maximum prijs = TotaalPrijs × 1.05\n\nDe maandelijkse support kosten worden apart weergegeven.\n\n## Tijdlijn Berekening (in weken)\n\nDe tijdlijn wordt berekend op basis van de volgende formule:\n\n```\nBasisTijd = \n  - Klein project: 2 weken\n  - Middel project: 4 weken\n  - Groot project: 6 weken\n\nFeaturesTijd = Aantal geselecteerde features ÷ 2 (afgerond naar boven)\n\nTotaleTijd = (BasisTijd + FeaturesTijd) × TijdlijnMultiplier\n```\n\nHet resultaat wordt met een marge van ±10% weergegeven:\n- Minimum tijd = TotaleTijd × 0.9 (minimaal 1 week)\n- Maximum tijd = TotaleTijd × 1.1\n\n## Code Implementatie\nDe relevante JavaScript code voor de prijsstructuur in het project calculator component is als volgt:\n\n```javascript\n// Prijzen per schaal en type\nconst getBasePrice = (): number => {\n  // Website type prijzen\n  if (projectType === 'web') {\n    if (projectScale === 'basic') {\n      return 650; // Basis website: €650\n    } else if (projectScale === 'advanced') {\n      return 1250; // Geavanceerde website: €1250\n    } else if (projectScale === 'custom') {\n      return 2500; // Maatwerk website: €2500\n    }\n  }\n  \n  // Voor andere project types\n  const typeMultiplier = {\n    chatbot: 1.2,\n    automation: 1.3,\n    web: 1,\n    combined: 2.5\n  };\n  \n  const scaleBase = {\n    basic: 650,\n    advanced: 1250,\n    custom: 2500\n  };\n  \n  return scaleBase[projectScale] * typeMultiplier[projectType];\n};\n\n// Tijdlijn multipliers\nconst getRushMultiplier = (): number => {\n  const multipliers = {\n    1: 1,    // Standaard\n    2: 1.25, // Versneld\n    3: 1.5   // Spoed\n  };\n  \n  return multipliers[timelinePriority];\n};\n```\n\n## Aanpassen van de Prijsstructuur\n\nOm de prijsstructuur aan te passen, kunt u de volgende wijzigingen aanbrengen in het `ProjectCalculator.tsx` bestand:\n\n1. **Aanpassen basisprijs per type en schaal**:\n   - Wijzig de waarden in `scaleBase` object\n   - Wijzig de typeMultiplier-waarden om de verhouding tussen verschillende projecttypes aan te passen\n\n2. **Aanpassen feature prijzen**:\n   - Zoek de betreffende feature in de arrays `webFeatures`, `chatbotFeatures`, `automationFeatures` of `combinedFeatures`\n   - Wijzig de `priceImpact` waarde voor die feature\n\n3. **Aanpassen tijdlijn multipliers**:\n   - Wijzig de waarden in de `multipliers` object in de `getRushMultiplier` functie\n\n4. **Aanpassen support pakket prijzen**:\n   - Wijzig de `price` waarde in het `supportPackages` array\n\n5. **Aanpassen van de marge**:\n   - Wijzig de waarden 0.95 en 1.05 in de `calculatePrice` functie voor de prijsmarge\n   - Wijzig de waarden 0.9 en 1.1 in de `calculateTimeline` functie voor de tijdlijnmarge","size_bytes":6924},"SEO_Teksten_Digimaatwerk.md":{"content":"# SEO Teksten Digimaatwerk Website\n\n## Algemene Meta Informatie\n\n**Titel**: Digimaatwerk - Digital Transformation Experts\n**Meta beschrijving**: Digimaatwerk - Digital transformation experts specializing in AI chatbots, workflow automation, and web development.\n\n## Hoofdpagina\n\n### Hero Sectie\n- **Titel**: Uw partner voor digitale transformatie\n- **Ondertitel**: AI, Automatisering & Web Development\n- **CTA 1**: Ontdek onze diensten\n- **CTA 2**: Neem contact op\n\n### Services Intro\n- **Titel**: Maatwerk websites\n- **Beschrijving**: Op maat gemaakte websites die perfect aansluiten bij uw merkidentiteit en zakelijke doelen\n- **Titel**: Workflow automatisering\n- **Beschrijving**: Stroomlijn uw bedrijfsprocessen en verhoog de efficiëntie met intelligente automatisering\n- **Titel**: AI Chatbots\n- **Beschrijving**: Verbeter uw klantenservice met 24/7 intelligente ondersteuning via AI-chatbots\n\n## Diensten Sectie\n\n### Hoofdsectie\n- **Titel**: Onze digitale diensten\n- **Ondertitel**: Op maat gemaakte oplossingen om uw bedrijfsprocessen en klantervaringen te transformeren\n\n### AI Chatbots\n- **Titel**: AI Chatbots\n- **Beschrijving**: Intelligente gespreksagenten met GPT-4 en RAG-technologie voor verbeterd contextbegrip\n- **Tech**: NLP · GPT-4 · RAG\n\n### Workflow Automatisering\n- **Titel**: Workflow Automatisering\n- **Beschrijving**: Gestroomlijnde procesautomatiseringsoplossingen die handmatige taken verminderen en operaties optimaliseren\n- **Tech**: AWS · Azure · GCP\n\n### Webontwikkeling\n- **Titel**: Webontwikkeling\n- **Beschrijving**: Moderne, hoogwaardige webapplicaties gebouwd met de nieuwste technologieën en frameworks\n- **Tech**: React · Next.js · Three.js\n\n## Diensten Pagina's\n\n### AI Chatbots\n- **Titel**: AI Chatbots: De toekomst van klantcommunicatie\n- **Beschrijving**: Intelligente virtuele assistenten die uw klantcommunicatie naar een hoger niveau tillen met behulp van geavanceerde AI-technologie.\n- **Voordelen**:\n  - Natuurlijke conversaties voeren die nauwelijks te onderscheiden zijn van menselijke interacties\n  - Leren van elke interactie om continu te verbeteren\n  - Naadloos overdragen aan menselijke medewerkers wanneer nodig\n  - Waardevolle inzichten genereren uit klantgesprekken\n  - Tijd en kosten besparen door routinevragen automatisch af te handelen\n- **Features**:\n  - Natuurlijke taalverwerking\n  - Integratie met bestaande systemen\n  - Gepersonaliseerde gesprekken\n  - 24/7 beschikbaarheid\n- **Tech Stack**:\n  - OpenAI GPT-4\n  - Microsoft Azure Bot Service\n  - Custom NLP-modellen\n  - Node.js & Python\n\n### Business Automation\n- **Titel**: Workflow Automatisering\n- **Beschrijving**: Stroomlijn processen, automatiseer handmatige taken en verbeter operationele efficiëntie met onze op maat gemaakte workflow automatiseringsoplossingen.\n- **Features**:\n  - Procesanalyse en optimalisatie\n  - Aangepaste workflow-oplossingen\n  - Integratie met bestaande systemen\n  - Realtime monitoring en rapportage\n- **Tech Stack**:\n  - n8n / Make (Integromat)\n  - Power Automate\n  - Zapier\n  - Custom API Integrations\n\n### Web Development\n- **Titel**: Webontwikkeling\n- **Beschrijving**: Modern, schaalbare en veilige websites en webapplicaties die uw digitale aanwezigheid versterken en resultaten opleveren.\n- **Features**:\n  - Responsief ontwerp\n  - Gebruiksvriendelijke interfaces\n  - Prestatie-optimalisatie\n  - CMS integratie\n- **Tech Stack**:\n  - React / Next.js\n  - Node.js\n  - WordPress / WooCommerce\n  - Moderne frontend frameworks\n\n## Prijzen\n\n### Transparante Prijzen\n- **Titel**: Transparante Prijzen\n- **Ondertitel**: Bij Digimaatwerk geloven we in transparantie en kwaliteit. Wij bieden betaalbare maatwerkoplossingen die perfect aansluiten bij de behoeften van jouw bedrijf.\n\n### Diensten Prijzen\n- **Basis Website**: €650\n  - Tot 5 pagina's, responsive design, basis SEO\n- **Geavanceerde Website**: €1.250\n  - Tot 10 pagina's, CMS-integratie, custom design\n- **Maatwerk Applicatie**: €2.500+\n  - Volledig op maat gemaakt, geavanceerde functionaliteit\n\n### Support Pakketten\n- **Basis Support**: €29/maand\n  - 24/7 ticket support\n  - Kleine updates en fixes\n  - Maandelijkse backup\n  - Response binnen 48 uur\n- **Standaard Support**: €69/maand\n  - Snelle respons (24 uur)\n  - Maandelijkse beveiligingscheck\n  - Content updates\n  - Technische ondersteuning\n  - Toegang tot klantenportaal\n- **Premium Support**: €129/maand\n  - Prioriteit respons (12 uur)\n  - Uitgebreide SEO-monitoring\n  - Wekelijkse beveiligingscheck\n  - Doorlopende optimalisatie\n  - Performance monitoring\n  - Persoonlijke accountmanager\n\n### Extra Informatie\n- Alle maandelijkse pakketten omvatten toegang tot ons klantenportaal waar je eenvoudig hulp kunt krijgen en updates kunt volgen. Voor specifieke wensen of aangepaste oplossingen, neem contact met ons op voor een persoonlijk voorstel.\n\n## Project Calculator\n\n### Hoofdsectie\n- **Titel**: Project Calculator\n- **Ondertitel**: Schat de kosten en tijdlijn van uw project\n\n### Project Types\n- **AI & Chatbot**\n- **Automatisering**\n- **Website / App**\n- **Gecombineerd**\n\n### Schaal\n- **Klein**\n- **Middel**\n- **Groot**\n\n### Kenmerken Website / App\n- Contactformulier met email service (€100)\n- Extra pagina's (per 5) (€150)\n- Blog functionaliteit (€350)\n- Gebruikersauthenticatie (€450)\n- E-commerce functionaliteit (€850)\n- CMS systeem (€550)\n- Meertalige website (€100)\n- 3D visualisaties (Start van €100)\n\n### Kenmerken AI & Chatbot\n- Basis chatbot (FAQ) (€500)\n- Meertalige chatbot (€200)\n- CRM-integratie (€300)\n- Geavanceerde AI-functionaliteit (NLU/NLP) (€750)\n- Chatbot met betalingsverwerking (€600)\n- Analytics dashboard (€350)\n\n### Kenmerken Automatisering\n- Workflow automatisering (€400)\n- Integratie met bestaande tools (bijv. Trello, Zapier) (€300)\n- Automatische e-mailflows (€250)\n- Data-analyse en rapportage (€500)\n- Realtime meldingen (€200)\n\n### Kenmerken Gecombineerd Project\n- Website met chatbot integratie (€1000)\n- Automatisering gekoppeld aan website (bijv. leads naar CRM) (€750)\n- E-commerce met AI-aanbevelingen (€1200)\n- Dynamische content op basis van AI (€900)\n- Contactformulier met email service (€100)\n- Meertalige website (€100)\n\n### Tijdlijn Prioriteit\n- **Standaard**\n- **Versneld** (25% sneller, 25% meerprijs)\n- **Spoed** (40% sneller, 50% meerprijs)\n\n### Support Pakketten (Maandelijks)\n- **Geen maandelijks pakket** (€0)\n- **Basic** (€29/maand)\n- **Standaard** (€69/maand)\n- **Premium** (€129/maand)\n\n## Case Studies\n\n### RetailTech Chatbot\n- **Titel**: E-commerce Klantenservice Chatbot\n- **Klant**: RetailTech BV\n- **Industrie**: E-commerce\n- **Categorie**: AI & Chatbots\n- **Beschrijving**: Implementeerde een intelligente chatbot die de klantenservicekosten met 45% verminderde en tegelijkertijd de tevredenheidscijfers verbeterde.\n- **Uitdaging**: RetailTech had moeite om de groeiende hoeveelheid klantenserviceverzoeken bij te houden, wat leidde tot langere wachttijden en ontevredenheid bij klanten.\n- **Oplossing**: We ontwikkelden een op GPT-4 gebaseerde chatbot die 80% van de veelvoorkomende vragen kon beantwoorden en naadloos kon doorverwijzen naar menselijke agenten wanneer nodig.\n- **Resultaat**: Binnen drie maanden handelde de chatbot 65% van alle klantenserviceverzoeken af, met een klanttevredenheidsscore van 4.8/5.\n\n### Financial Automation\n- **Titel**: Financiële Procesautomatisering\n- **Klant**: FinanceBoost NV\n- **Industrie**: Financiële dienstverlening\n- **Categorie**: Automatisering\n- **Beschrijving**: Automatisering van het facturatieproces, wat resulteerde in 70% tijdsbesparing en vrijwel geen menselijke fouten.\n\n### 3D Configurator\n- **Titel**: Interactieve 3D Product Configurator\n- **Klant**: Design Furniture Studio\n- **Industrie**: Retail / Meubelen\n- **Categorie**: Web Development\n- **Beschrijving**: Een interactieve 3D-configurator die klanten in staat stelt meubelstukken te personaliseren en te visualiseren voordat ze kopen.\n\n## Portfolio\n\n### Fast Taxi Rotterdam\n- **Titel**: Fast Taxi Rotterdam\n- **Categorie**: Web\n- **Beschrijving**: Voor de nieuwe website van Fast Taxi Rotterdam heb ik een moderne, gebruiksvriendelijke en volledig geoptimaliseerde oplossing ontwikkeld die een aanzienlijke verbetering biedt ten opzichte van de oude website. De nieuwe site is sneller, mobielvriendelijk en beschikt over een intuïtieve interface waarmee klanten eenvoudig ritten kunnen boeken. Een belangrijke innovatie is de automatische workflow-integratie met WhatsApp Business.\n\n## Blogs\n\n### Hoe AI het bedrijfsleven transformeert in 2025\n- **Auteur**: Jennifer Smit\n- **Datum**: 2025-02-10\n- **Categorieën**: Technologie, Bedrijfsstrategie\n- **Tags**: Kunstmatige Intelligentie, Digitale Transformatie, Toekomst van Werk\n- **Excerpt**: Ontdek hoe kunstmatige intelligentie bedrijfsprocessen, besluitvormingsprocessen en klantenervaringen in 2025 verandert.\n- **Belangrijke onderwerpen**:\n  - Beslissingsintelligentie\n  - Hyper-personalisatie\n  - Operationele efficiëntie\n\n## Tech Stack\n\n- **Titel**: Onze Technologie Stack\n- **Ondertitel**: We gebruiken geavanceerde technologieën om hoogwaardige, schaalbare oplossingen te leveren\n- **Technologies**:\n  - React: Front-end UI bibliotheek\n  - Next.js: React framework\n  - Three.js: 3D visualisaties\n  - GPT-4: AI taalmodel\n\n## Contact Sectie\n\n- **Titel**: Neem contact op\n- **Ondertitel**: We staan klaar om u te helpen\n- **Formuliervelden**: Naam, E-mail, Bedrijf, Type project, Bericht\n- **CTA**: Versturen\n\n## Footer\n\n- **Bedrijf**: Digimaatwerk\n- **Adres**: Star Numanstraat 79a, 9714JL Groningen\n- **Telefoon**: 0637353483\n- **Email**: info@digimaatwerk.nl","size_bytes":9657},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Project Calculator & Digital Agency Platform\n\n## Overview\n\nThis is a full-stack web application for Digimaatwerk - a Dutch digital transformation agency specializing in AI chatbots, workflow automation, and web development. The platform serves as both a marketing website and a project calculator tool that helps clients estimate costs for various digital services.\n\n## System Architecture\n\nThe application follows a modern full-stack architecture with the following structure:\n\n- **Frontend**: React-based SPA built with Vite\n- **Backend**: Express.js server with TypeScript\n- **Database**: PostgreSQL with Drizzle ORM\n- **Deployment**: Replit infrastructure with autoscale deployment\n- **Content Management**: Netlify CMS integration for blog posts and case studies\n\n## Key Components\n\n### Frontend Architecture\n- **React + TypeScript**: Modern component-based UI with type safety\n- **Radix UI Components**: Comprehensive UI component library for consistent design\n- **Tailwind CSS**: Utility-first CSS framework with professional theme\n- **React Three Fiber**: 3D visualizations for enhanced user experience\n- **Tanstack Query**: Data fetching and caching for API interactions\n\n### Backend Architecture\n- **Express.js**: RESTful API server with middleware support\n- **Session Management**: Express-session with memory store\n- **File Structure**: Clean separation of concerns with dedicated modules for routes, storage, and database operations\n\n### Database Schema\nThe application uses PostgreSQL with the following main tables:\n- `users`: User authentication and management\n- `contact_submissions`: Contact form submissions with processing status\n- `chat_messages`: Chat history for AI chatbot interactions\n- `project_estimates`: Stored project calculations\n- `webhooks` & `webhook_logs`: Webhook management system\n- `cookie_consents` & `gdpr_requests`: GDPR compliance tracking\n\n### Content Management\n- **Multilingual Support**: Dutch (default) and English content\n- **Netlify CMS**: Admin interface for managing blog posts, case studies, and portfolio items\n- **Markdown-based**: Content stored as markdown files with frontmatter metadata\n- **Media Management**: Integrated file upload and management system\n\n## Data Flow\n\n1. **User Interaction**: Users interact with the React frontend\n2. **API Communication**: Frontend communicates with Express backend via REST APIs\n3. **Database Operations**: Backend performs CRUD operations using Drizzle ORM\n4. **Content Delivery**: Static content served from markdown files, dynamic content from database\n5. **Webhook Processing**: External integrations trigger automated workflows\n\n## External Dependencies\n\n### Core Dependencies\n- **@neondatabase/serverless**: PostgreSQL database connection\n- **drizzle-orm**: Type-safe ORM for database operations\n- **@n8n/chat**: AI chatbot integration component\n- **Stripe**: Payment processing for e-commerce functionality\n\n### Development Tools\n- **Vite**: Fast build tool and development server\n- **TypeScript**: Static type checking\n- **ESBuild**: Fast JavaScript bundler for production builds\n\n### UI/UX Libraries\n- **Radix UI**: Accessible component primitives\n- **React Three Fiber**: 3D graphics and animations\n- **Class Variance Authority**: Type-safe CSS class management\n\n## Deployment Strategy\n\nThe application is configured for Replit's autoscale deployment with:\n\n- **Development**: `npm run dev` starts both frontend and backend in parallel\n- **Build Process**: Vite builds frontend, ESBuild bundles backend\n- **Production**: Node.js serves the bundled application\n- **Database**: Automated migrations with `npm run db:push`\n- **Port Configuration**: Frontend on 5000, admin interface on 8081\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\nOwner name: Damian (not Dennis)\n\n## Changelog\n\nChangelog:\n- June 23, 2025. Initial setup\n- June 24, 2025. Email configuration completed with Strato mailserver (smtp.strato.de:465) using info@digimaatwerk.nl. Contact form now sends notification emails to info@digimaatwerk.nl and confirmation emails to users. Email verification successful and emails confirmed delivered. Email template finalized with \"Damian & Elfie - Oprichter & Trouwe hond\" signature.\n- August 4, 2025. Fixed navigation issues: \"Over ons\" and \"Contact\" buttons now properly navigate from all pages to homepage sections. Updated N8n chatbot with new webhook URL (https://dcwerk.app.n8n.cloud/webhook/2261c842-887d-4a32-8ac7-ff81ae696e5f/chat). Cleaned up console.log statements for production readiness. Both header and mobile menu navigation working correctly.","size_bytes":4607},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport themePlugin from \"@replit/vite-plugin-shadcn-theme-json\";\nimport path, { dirname } from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\nimport { fileURLToPath } from \"url\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    themePlugin(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(__dirname, \"shared\"),\n      \"@assets\": path.resolve(__dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(__dirname, \"client\"),\n  build: {\n    outDir: path.resolve(__dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":1069},"attached_assets/content-1750291125363.md":{"content":"## @n8n/chat  ![TypeScript icon, indicating that this package has built-in type declarations](https://static-production.npmjs.com/255a118f56f5346b97e56325a1217a16.svg)\n\n0.27.1 • Public • Published 9 months ago\n\n- [Readme](https://www.npmjs.com/package/@n8n/chat?activeTab=readme)\n- [Code Beta](https://www.npmjs.com/package/@n8n/chat?activeTab=code)\n- [6 Dependencies](https://www.npmjs.com/package/@n8n/chat?activeTab=dependencies)\n- [12 Dependents](https://www.npmjs.com/package/@n8n/chat?activeTab=dependents)\n- [64 Versions](https://www.npmjs.com/package/@n8n/chat?activeTab=versions)\n\n# n8n Chat\n\n[Permalink: n8n Chat](https://www.npmjs.com/package/@n8n/chat#n8n-chat)\n\nThis is an embeddable Chat widget for n8n. It allows the execution of AI-Powered Workflows through a Chat window.\n\n**Windowed Example** [![n8n Chat Windowed](https://raw.githubusercontent.com/n8n-io/n8n/master/packages/%40n8n/chat/resources/images/windowed.png)](https://raw.githubusercontent.com/n8n-io/n8n/master/packages/%40n8n/chat/resources/images/windowed.png)\n\n**Fullscreen Example** [![n8n Chat Fullscreen](https://raw.githubusercontent.com/n8n-io/n8n/master/packages/%40n8n/chat/resources/images/fullscreen.png)](https://raw.githubusercontent.com/n8n-io/n8n/master/packages/%40n8n/chat/resources/images/fullscreen.png)\n\n## Prerequisites\n\n[Permalink: Prerequisites](https://www.npmjs.com/package/@n8n/chat#prerequisites)\n\nCreate a n8n workflow which you want to execute via chat. The workflow has to be triggered using a **Chat Trigger** node.\n\nOpen the **Chat Trigger** node and add your domain to the **Allowed Origins (CORS)** field. This makes sure that only requests from your domain are accepted.\n\n[See example workflow](https://github.com/n8n-io/n8n/blob/master/packages/%40n8n/chat/resources/workflow.json)\n\n> Make sure the workflow is **Active.**\n\n### How it works\n\n[Permalink: How it works](https://www.npmjs.com/package/@n8n/chat#how-it-works)\n\nEach Chat request is sent to the n8n Webhook endpoint, which then sends back a response.\n\nEach request is accompanied by an `action` query parameter, where `action` can be one of:\n\n- `loadPreviousSession` \\- When the user opens the Chatbot again and the previous chat session should be loaded\n- `sendMessage` \\- When the user sends a message\n\n## Installation\n\n[Permalink: Installation](https://www.npmjs.com/package/@n8n/chat#installation)\n\nOpen the **Webhook** node and replace `YOUR_PRODUCTION_WEBHOOK_URL` with your production URL. This is the URL that the Chat widget will use to send requests to.\n\n### a. CDN Embed\n\n[Permalink: a. CDN Embed](https://www.npmjs.com/package/@n8n/chat#a-cdn-embed)\n\nAdd the following code to your HTML page.\n\n```\n<link href=\"https://cdn.jsdelivr.net/npm/@n8n/chat/dist/style.css\" rel=\"stylesheet\" />\n<script type=\"module\">\n\timport { createChat } from 'https://cdn.jsdelivr.net/npm/@n8n/chat/dist/chat.bundle.es.js';\n\n\tcreateChat({\n\t\twebhookUrl: 'YOUR_PRODUCTION_WEBHOOK_URL'\n\t});\n</script>\n```\n\n### b. Import Embed\n\n[Permalink: b. Import Embed](https://www.npmjs.com/package/@n8n/chat#b-import-embed)\n\nInstall and save n8n Chat as a production dependency.\n\n```\nnpm install @n8n/chat\n```\n\nImport the CSS and use the `createChat` function to initialize your Chat window.\n\n```\nimport '@n8n/chat/style.css';\nimport { createChat } from '@n8n/chat';\n\ncreateChat({\n\twebhookUrl: 'YOUR_PRODUCTION_WEBHOOK_URL'\n});\n```\n\n##### Vue.js\n\n[Permalink: Vue.js](https://www.npmjs.com/package/@n8n/chat#vuejs)\n\n```\n<script lang=\"ts\" setup>\n// App.vue\nimport { onMounted } from 'vue';\nimport '@n8n/chat/style.css';\nimport { createChat } from '@n8n/chat';\n\nonMounted(() => {\n\tcreateChat({\n\t\twebhookUrl: 'YOUR_PRODUCTION_WEBHOOK_URL'\n\t});\n});\n</script>\n<template>\n\t<div></div>\n</template>\n```\n\n##### React\n\n[Permalink: React](https://www.npmjs.com/package/@n8n/chat#react)\n\n```\n// App.tsx\nimport { useEffect } from 'react';\nimport '@n8n/chat/style.css';\nimport { createChat } from '@n8n/chat';\n\nexport const App = () => {\n\tuseEffect(() => {\n\t\tcreateChat({\n\t\t\twebhookUrl: 'YOUR_PRODUCTION_WEBHOOK_URL'\n\t\t});\n\t}, []);\n\n\treturn (<div></div>);\n};\n```\n\n## Options\n\n[Permalink: Options](https://www.npmjs.com/package/@n8n/chat#options)\n\nThe default options are:\n\n```\ncreateChat({\n\twebhookUrl: '',\n\twebhookConfig: {\n\t\tmethod: 'POST',\n\t\theaders: {}\n\t},\n\ttarget: '#n8n-chat',\n\tmode: 'window',\n\tchatInputKey: 'chatInput',\n\tchatSessionKey: 'sessionId',\n\tmetadata: {},\n\tshowWelcomeScreen: false,\n\tdefaultLanguage: 'en',\n\tinitialMessages: [\\\n\t\t'Hi there! 👋',\\\n\t\t'My name is Nathan. How can I assist you today?'\\\n\t],\n\ti18n: {\n\t\ten: {\n\t\t\ttitle: 'Hi there! 👋',\n\t\t\tsubtitle: \"Start a chat. We're here to help you 24/7.\",\n\t\t\tfooter: '',\n\t\t\tgetStarted: 'New Conversation',\n\t\t\tinputPlaceholder: 'Type your question..',\n\t\t},\n\t},\n});\n```\n\n### `webhookUrl`\n\n[Permalink: webhookUrl](https://www.npmjs.com/package/@n8n/chat#webhookurl)\n\n- **Type**: `string`\n- **Required**: `true`\n- **Examples**:\n  - `https://yourname.app.n8n.cloud/webhook/513107b3-6f3a-4a1e-af21-659f0ed14183`\n  - `http://localhost:5678/webhook/513107b3-6f3a-4a1e-af21-659f0ed14183`\n- **Description**: The URL of the n8n Webhook endpoint. Should be the production URL.\n\n### `webhookConfig`\n\n[Permalink: webhookConfig](https://www.npmjs.com/package/@n8n/chat#webhookconfig)\n\n- **Type**: `{ method: string, headers: Record<string, string> }`\n- **Default**: `{ method: 'POST', headers: {} }`\n- **Description**: The configuration for the Webhook request.\n\n### `target`\n\n[Permalink: target](https://www.npmjs.com/package/@n8n/chat#target)\n\n- **Type**: `string`\n- **Default**: `'#n8n-chat'`\n- **Description**: The CSS selector of the element where the Chat window should be embedded.\n\n### `mode`\n\n[Permalink: mode](https://www.npmjs.com/package/@n8n/chat#mode)\n\n- **Type**: `'window' | 'fullscreen'`\n- **Default**: `'window'`\n- **Description**: The render mode of the Chat window.\n  - In `window` mode, the Chat window will be embedded in the target element as a chat toggle button and a fixed size chat window.\n  - In `fullscreen` mode, the Chat will take up the entire width and height of its target container.\n\n### `showWelcomeScreen`\n\n[Permalink: showWelcomeScreen](https://www.npmjs.com/package/@n8n/chat#showwelcomescreen)\n\n- **Type**: `boolean`\n- **Default**: `false`\n- **Description**: Whether to show the welcome screen when the Chat window is opened.\n\n### `chatSessionKey`\n\n[Permalink: chatSessionKey](https://www.npmjs.com/package/@n8n/chat#chatsessionkey)\n\n- **Type**: `string`\n- **Default**: `'sessionId'`\n- **Description**: The key to use for sending the chat history session ID for the AI Memory node.\n\n### `chatInputKey`\n\n[Permalink: chatInputKey](https://www.npmjs.com/package/@n8n/chat#chatinputkey)\n\n- **Type**: `string`\n- **Default**: `'chatInput'`\n- **Description**: The key to use for sending the chat input for the AI Agent node.\n\n### `defaultLanguage`\n\n[Permalink: defaultLanguage](https://www.npmjs.com/package/@n8n/chat#defaultlanguage)\n\n- **Type**: `string`\n- **Default**: `'en'`\n- **Description**: The default language of the Chat window. Currently only `en` is supported.\n\n### `i18n`\n\n[Permalink: i18n](https://www.npmjs.com/package/@n8n/chat#i18n)\n\n- **Type**: `{ [key: string]: Record<string, string> }`\n- **Description**: The i18n configuration for the Chat window. Currently only `en` is supported.\n\n### `initialMessages`\n\n[Permalink: initialMessages](https://www.npmjs.com/package/@n8n/chat#initialmessages)\n\n- **Type**: `string[]`\n- **Description**: The initial messages to be displayed in the Chat window.\n\n## Customization\n\n[Permalink: Customization](https://www.npmjs.com/package/@n8n/chat#customization)\n\nThe Chat window is entirely customizable using CSS variables.\n\n```\n:root {\n\t--chat--color-primary: #e74266;\n\t--chat--color-primary-shade-50: #db4061;\n\t--chat--color-primary-shade-100: #cf3c5c;\n\t--chat--color-secondary: #20b69e;\n\t--chat--color-secondary-shade-50: #1ca08a;\n\t--chat--color-white: #ffffff;\n\t--chat--color-light: #f2f4f8;\n\t--chat--color-light-shade-50: #e6e9f1;\n\t--chat--color-light-shade-100: #c2c5cc;\n\t--chat--color-medium: #d2d4d9;\n\t--chat--color-dark: #101330;\n\t--chat--color-disabled: #777980;\n\t--chat--color-typing: #404040;\n\n\t--chat--spacing: 1rem;\n\t--chat--border-radius: 0.25rem;\n\t--chat--transition-duration: 0.15s;\n\n\t--chat--window--width: 400px;\n\t--chat--window--height: 600px;\n\n\t--chat--header-height: auto;\n\t--chat--header--padding: var(--chat--spacing);\n\t--chat--header--background: var(--chat--color-dark);\n\t--chat--header--color: var(--chat--color-light);\n\t--chat--header--border-top: none;\n\t--chat--header--border-bottom: none;\n\t--chat--header--border-bottom: none;\n\t--chat--header--border-bottom: none;\n\t--chat--heading--font-size: 2em;\n\t--chat--header--color: var(--chat--color-light);\n\t--chat--subtitle--font-size: inherit;\n\t--chat--subtitle--line-height: 1.8;\n\n\t--chat--textarea--height: 50px;\n\n\t--chat--message--font-size: 1rem;\n\t--chat--message--padding: var(--chat--spacing);\n\t--chat--message--border-radius: var(--chat--border-radius);\n\t--chat--message-line-height: 1.8;\n\t--chat--message--bot--background: var(--chat--color-white);\n\t--chat--message--bot--color: var(--chat--color-dark);\n\t--chat--message--bot--border: none;\n\t--chat--message--user--background: var(--chat--color-secondary);\n\t--chat--message--user--color: var(--chat--color-white);\n\t--chat--message--user--border: none;\n\t--chat--message--pre--background: rgba(0, 0, 0, 0.05);\n\n\t--chat--toggle--background: var(--chat--color-primary);\n\t--chat--toggle--hover--background: var(--chat--color-primary-shade-50);\n\t--chat--toggle--active--background: var(--chat--color-primary-shade-100);\n\t--chat--toggle--color: var(--chat--color-white);\n\t--chat--toggle--size: 64px;\n}\n```\n\n## Caveats\n\n[Permalink: Caveats](https://www.npmjs.com/package/@n8n/chat#caveats)\n\n### Fullscreen mode\n\n[Permalink: Fullscreen mode](https://www.npmjs.com/package/@n8n/chat#fullscreen-mode)\n\nIn fullscreen mode, the Chat window will take up the entire width and height of its target container. Make sure that the container has a set width and height.\n\n```\nhtml,\nbody,\n#n8n-chat {\n\twidth: 100%;\n\theight: 100%;\n}\n```\n\n## License\n\n[Permalink: License](https://www.npmjs.com/package/@n8n/chat#license)\n\nYou can find the license information [here](https://github.com/n8n-io/n8n/blob/master/README.md#license)\n\n## Readme\n\n### Keywords\n\nnone\n\n## Package Sidebar\n\n### Install\n\n`npm i @n8n/chat`\n\n### Repository\n\n[Gitgithub.com/n8n-io/n8n](https://github.com/n8n-io/n8n)\n\n### Homepage\n\n[n8n.io](https://n8n.io/)\n\n### DownloadsWeekly Downloads\n\n4,270\n\n### Version\n\n0.27.1\n\n### License\n\nSEE LICENSE IN LICENSE.md\n\n### Unpacked Size\n\n1.07 MB\n\n### Total Files\n\n55\n\n### Last publish\n\n2 days ago\n\n### Collaborators\n\n- [![alexgrozav](https://www.npmjs.com/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci8xZDhjZmE3N2QwYTZiMzFhZDFiMjBlYmJiYjE5ZmIzYz9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.akhfBrh6XGusF4_6d4Hx0UKzsUpjhVH8L6SgUIjydNc)](https://www.npmjs.com/~alexgrozav)\n\n- [![milorad.filipovic](https://www.npmjs.com/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci85NjQ5YWQzYjA3MTg5ZTdmZDZlY2IxYzlhZjA1YmNjNT9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.PugUTl-e51AwjVcziJjYH4wLza4GOWLBty7uGmEFnR4)](https://www.npmjs.com/~milorad.filipovic)\n\n- [![ivov.src](https://www.npmjs.com/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci9hODM2ZjkyOTk0Y2RiZmMwZTI4MjM5ZTUyMTgwYzc3Nz9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.Lgs5X1zi2lBa9kh2kC6IwEZ39tO_0C3dfR6KfinTBqw)](https://www.npmjs.com/~ivov.src)\n\n- [![jan_n8n_io](https://www.npmjs.com/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MDQ3MzA3NzE3NDI1ZWE3MGFhNGU4Y2IzOWY5OTU5Yj9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.XB_KEfYMj8A_8EFkuWtjP-CmxUp2kXL2bhwEev2Y2mw)](https://www.npmjs.com/~jan_n8n_io)\n\n- [![netroy](https://www.npmjs.com/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci8zMWE1YzM3MjQ0YTNmMjdhNDIzYmQ1MWY3ZTkyMzdhNj9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.48zAbZdW2W2Sq9bC136FjEjtnnOPgEgl1-UG0ktbdkA)](https://www.npmjs.com/~netroy)\n\n\n[**Try** on RunKit](https://runkit.com/npm/%40n8n%2Fchat)\n\n[**Report** malware](https://www.npmjs.com/support?inquire=security&security-inquire=malware&package=%40n8n%2Fchat&version=0.27.1)","size_bytes":12436},"attached_assets/content-1750724075886.md":{"content":"## Cookies op strato.nl\n\nWe gebruiken cookies om onze website voor jou te optimaliseren, onze producten te verbeteren en om je, in samenwerking met derde partijen, gepersonaliseerde reclame te tonen. In de\ninstellingen\nkun je aangeven welke cookies je wilt toestaan en je keuze op ieder moment veranderen. Verdere informatie vind je in ons\nPrivacybeleid.\nTechnisch noodzakelijke cookies worden ook geplaatst wanneer je\nafwijzen kiest.\n\nDoor te klikken op\n\"Toestaan en sluiten\"\nga je akkoord met de verwerking van je data en het versturen ervan naar derde landen\n.\n\n\nAfwijzen\n\nInstellingenToestaan en sluiten\n\nImprint\n\nInstellingenToestaan en sluitenAfwijzen\n\nImprint\n\n## Cookie-instellingen\n\n##### Noodzakelijk\n\nTechnisch noodzakelijke cookies zijn essentieel voor de navigatie op onze website. Zonder deze cookies zijn veel basisfuncties niet mogelijk, waaronder de weergave en selectie van producten, het vullen van de winkelwagen of het inloggen.\n\n##### Statistieken\n\nWij gebruiken cookies om het gebruikersgedrag beter te begrijpen en om je te helpen bij de navigatie op onze website. We gebruiken deze gegevens ook om de website nog beter aan te passen aan je behoeften.\n\n##### Marketing\n\nWij slaan informatie op over hoe je onze website gebruikt. Zo kunnen we je aanbiedingen op maat doen, bijvoorbeeld in het kader van campagnes en direct-marketingactiviteiten. Wij zijn verantwoordelijk voor, en controleren, de verwerking van deze data.\n\n##### Partnerships\n\nDeze cookies worden gebruikt om je individuele product- en serviceaanbiedingen buiten onze website te laten zien. Hierbij wordt informatie over je gebruikersgedrag doorgegeven aan partnerbedrijven. Zo kan gepersonaliseerde inhoud van ons of van deze partners worden weergeven, passend bij je interesses. Deze campagnes kunnen door ons of onze partners worden geëvalueerd, gevolgd en gefactureerd. Andere adverterende bedrijven kunnen cookies uit deze categorie ook uitlezen en je gepersonaliseerde content tonen. Voor zover het gebruik van deze data onze eigen gegevensverwerking overstijgt, zijn deze andere bedrijven verantwoordelijk. Dit gebeurt zonder onze medewerking.\n\nSelectie bevestigenAlles selecterenterug\n\nBij het afspelen van externe video's worden gegevens aan YouTube verzonden. Hiervoor hebben we je toestemming nodig. Meer informatie vind je in ons\n[Privacybeleid](https://www.strato.nl/privacybeleid/)\n\nToestemmen\n\n# Maak gebruik van de mailserver van STRATO\n\n- Ondersteunt zowel POP3 als IMAP en SMTP\n- Toegang via STRATO Webmail\n\nMAIL\n\nPlus\n\n5 GB per postvak -\n\nje e-mailadres met nog meer opslagruimte\n\n12 maanden slechts\n\n€ 1\n\nper maand\n\ndaarna € 4 / mnd.\n\nSetupkosten: € 0\n\n[Naar aanbieding](https://www.strato.nl/mail/)\n\nAlle prijzen incl. btw\n\n## Wat is een mailserver?\n\n![](https://www.strato.nl/_assets/img/seo/nl/mail-server.svg)\n\nSteeds wanneer je een e-mail verstuurt, moet deze door een mailserver verwerkt worden. Een e-mailserver heeft in principe twee taken: het uitwisselen van e-mails met mailclients en het routeren van e-mails naar andere mailservers. In het eerste geval gaat het om een server voor inkomende mail, in het tweede geval om een server voor uitgaande mail. Een inkomende en uitgaande mailserver maken gebruik van verschillende protocollen. Voor inkomende mail op een server wordt [POP3 en IMAP](https://www.strato.nl/mail/imap-of-pop/) gebruikt, terwijl op een uitgaande mailserver SMTP gebruikt wordt. Meestal maak je niet direct contact met een mailserver, maar gebruik je hier een mailclient (bijvoorbeeld Microsoft Outlook, Mozilla Thunderbird of Apple Mail) voor. In dat geval hoef je enkel de gegevens die je van je hostingprovider gekregen hebt door te geven aan de mailclient.\n\n[Mail aanbiedingen](https://www.strato.nl/mail/)\n\n## De mailserver van STRATO\n\n![](https://www.strato.nl/_assets/img/seo/nl/mail-vergelijken.svg)\n\nSTRATO biedt zowel een inkomende als uitgaande mailserver en ondersteunt zowel POP3 en IMAP als SMTP. Hoewel deze eigenschappen de e-mailservice van STRATO al zeer compleet maken, zijn er nog meer voordelen die de [maildienst](https://www.strato.nl/mail/email-hosting/) van STRATO kenmerken. Zo krijg je je eigen .nl of .com domein, kun je meerdere mailboxen aanmaken en heb je via [webmail](https://www.strato.nl/mail/webmail/) overal ter wereld toegang tot je e-mails, adresboek, kalender en bestanden. Bovendien kun je met het MailPro3 pakket taken en afspraken delegeren en je mailbox synchroniseren met je Google adresboek. Een ander groot voordeel van het versturen en ontvangen van mail via een server van STRATO, is de [veiligheid](https://www.strato.nl/mail/veilig-mailen/) . Onze mailservers hebben goede spamfilters, je krijgt geen reclame te zien en je hoeft je geen zorgen te maken over onveilige dataopslag.\n\n## Verbinding maken met de STRATO mailserver\n\n![](https://www.strato.nl/_assets/img/seo/nl/mail-adres.svg)\n\nWanneer je via de STRATO mailserver e-mails wilt ophalen en verzenden, kun je ervoor kiezen om gebruik te maken van een externe mailclient. Bij de configuratie heb je de volgende gegevens nodig:\n\n- Inkomende mailserver (POP3): **pop3.strato.de** of **pop3.strato.com (Poort: 995)**\n- Inkomende mailserver (IMAP): **imap.strato.de** of **imap.strato.com (Poort: 993)**\n- Uitgaande mailserver (SMTP): **smtp.strato.de** of **smtp.strato.com (Poort: 465)**\n- Gebruikersnaam: het volledige e-mailadres (bijv: mail@hetdomein.nl)\n- Wachtwoord: voer het wachtwoord in dat je in de STRATO klantenlogin voor je e-mailpostvak hebt aangemaakt\n\nIs het nog niet helemaal duidelijk hoe je de mailserver nu precies kunt configureren? Bekijk dan hier gedetailleerde instructies voor de twee meest gebruikte mailclients: [Outlook 2010](https://www.strato.nl/faq/mail/hoe-kan-ik-mijn-strato-e-mailadres-in-een-extern-e-mailprogramma-gebruiken/) en Apple Mail.\n\n## Samenvatting: zo werkt de mailserver van STRATO\n\n![](https://www.strato.nl/_assets/img/seo/nl/conclusie-checklist.svg)\n\n- Een e-mailserver heeft in principe twee taken: het uitwisselen van e-mails met clients en het routeren van e-mails naar andere mailservers.\n- Voor inkomende mail op een server wordt POP3 en IMAP gebruikt, op een uitgaande mailserver SMTP.\n- STRATO biedt zowel een inkomende als uitgaande mailserver en ondersteunt zowel POP3 en IMAP als SMTP. Daarnaast heeft de mailserver van STRATO nog veel extra voordelen, waaronder toegang via [webmail](https://www.strato.nl/mail/inloggen-strato-webmail/) .\n- Als je de mailserver wilt instellen, hoef je enkel de gegevens die je van STRATO gekregen hebt door te geven aan de mailclient.","size_bytes":6584},"server/cms-proxy.ts":{"content":"import { spawn } from 'child_process';\nimport path from 'path';\nimport { log } from './vite';\nimport * as fs from 'fs';\n\n// This is a simple script to start the Netlify CMS proxy server\nexport function startCMSProxy() {\n  // Ensure content directories exist\n  const contentDirs = [\n    'public/content',\n    'public/content/services',\n    'public/content/case-studies',\n    'public/content/blog',\n    'public/content/portfolio',\n    'public/uploads'\n  ];\n  \n  // Create directories synchronously if they don't exist\n  contentDirs.forEach(dir => {\n    const fullPath = path.join(process.cwd(), dir);\n    try {\n      fs.mkdirSync(fullPath, { recursive: true });\n    } catch (error: any) { // Type assertion for error\n      // Ignore if directory already exists\n      if (error.code !== 'EEXIST') {\n        console.error(`Error creating directory ${fullPath}:`, error);\n      }\n    }\n  });\n  \n  // Define content paths\n  const rootPaths = {\n    services: path.join(process.cwd(), 'public/content/services'),\n    'case-studies': path.join(process.cwd(), 'public/content/case-studies'),\n    blog: path.join(process.cwd(), 'public/content/blog'),\n    portfolio: path.join(process.cwd(), 'public/content/portfolio')\n  };\n  \n  // Convert rootPaths to command line arguments\n  const rootPathsArgs = Object.entries(rootPaths).map(([key, value]) => \n    `--${key}=${value}`\n  );\n  \n  // Paths for CMS\n  const publicPath = path.join(process.cwd(), 'public');\n  const distPath = path.join(process.cwd(), 'public/admin');\n  \n  // Launch the CMS proxy server as a separate process\n  const proxyProcess = spawn('npx', [\n    'netlify-cms-proxy-server',\n    ...rootPathsArgs,\n    `--public=${publicPath}`,\n    `--dist=${distPath}`\n  ]);\n  \n  // Log process output\n  proxyProcess.stdout.on('data', (data) => {\n    log(`[CMS Proxy] ${data}`, 'cms');\n  });\n  \n  proxyProcess.stderr.on('data', (data) => {\n    log(`[CMS Proxy Error] ${data}`, 'cms-error');\n  });\n  \n  // Handle process exit\n  proxyProcess.on('close', (code) => {\n    if (code !== 0) {\n      log(`CMS Proxy server exited with code ${code}`, 'cms-error');\n    }\n  });\n  \n  // Return the process for cleanup\n  return proxyProcess;\n}","size_bytes":2174},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"server/email.ts":{"content":"import nodemailer from 'nodemailer';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n// Strato SMTP configuration\nconst transporter = nodemailer.createTransport({\n  host: 'smtp.strato.de',\n  port: 465,\n  secure: true, // true for 465, false for other ports\n  auth: {\n    user: 'info@digimaatwerk.nl', // Your email\n    pass: process.env.EMAIL_PASSWORD // Email password from environment\n  }\n});\n\nexport interface EmailData {\n  name: string;\n  email: string;\n  company?: string;\n  projectType?: string;\n  message: string;\n}\n\nexport async function sendContactEmail(data: EmailData): Promise<void> {\n  const { name, email, company, projectType, message } = data;\n\n  // Load and encode images as base64\n  let profileImageData = '';\n  let elfieImageData = '';\n  \n  try {\n    const profilePath = join(process.cwd(), 'client/public/images/profile.jpg');\n    const elfiePath = join(process.cwd(), 'public/images/elfie.jpg');\n    \n    const profileBuffer = readFileSync(profilePath);\n    const elfieBuffer = readFileSync(elfiePath);\n    \n    profileImageData = `data:image/jpeg;base64,${profileBuffer.toString('base64')}`;\n    elfieImageData = `data:image/jpeg;base64,${elfieBuffer.toString('base64')}`;\n  } catch (error) {\n    console.log('Could not load profile images for email:', error);\n  }\n  \n  // Email to Digimaatwerk\n  const adminHtmlContent = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n      <h2 style=\"color: #2563eb; border-bottom: 2px solid #2563eb; padding-bottom: 10px;\">\n        Nieuw contact formulier bericht\n      </h2>\n      \n      <div style=\"background-color: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n        <h3 style=\"margin-top: 0; color: #334155;\">Contact Details</h3>\n        <p><strong>Naam:</strong> ${name}</p>\n        <p><strong>Email:</strong> ${email}</p>\n        ${company ? `<p><strong>Bedrijf:</strong> ${company}</p>` : ''}\n        ${projectType ? `<p><strong>Project Type:</strong> ${projectType}</p>` : ''}\n      </div>\n      \n      <div style=\"background-color: #fff; padding: 20px; border-left: 4px solid #2563eb; margin: 20px 0;\">\n        <h3 style=\"margin-top: 0; color: #334155;\">Bericht</h3>\n        <p style=\"line-height: 1.6; color: #475569;\">${message.replace(/\\n/g, '<br>')}</p>\n      </div>\n      \n      <div style=\"margin-top: 30px; padding: 15px; background-color: #f1f5f9; border-radius: 6px;\">\n        <p style=\"margin: 0; font-size: 14px; color: #64748b;\">\n          Dit bericht is verzonden via het contact formulier op digimaatwerk.nl\n        </p>\n      </div>\n    </div>\n  `;\n\n  // Email to user (confirmation) - Short version to prevent clipping\n  const userHtmlContent = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto;\">\n      <h2 style=\"color: #2563eb;\">Bedankt ${name}!</h2>\n      <p>We hebben je bericht ontvangen en nemen zo snel mogelijk contact op.</p>\n      \n      <p style=\"margin-top: 20px;\">\n        📧 <a href=\"mailto:info@digimaatwerk.nl\" style=\"color: #2563eb;\">info@digimaatwerk.nl</a><br>\n        🌐 <a href=\"https://www.digimaatwerk.nl\" style=\"color: #2563eb;\">www.digimaatwerk.nl</a>\n      </p>\n      \n      <p style=\"margin-top: 20px; text-align: center; color: #64748b;\">\n        Met vriendelijke groet,<br>\n        Damian & Elfie<br>\n        <small>Oprichter & Trouwe hond</small><br>\n        <strong>Team Digimaatwerk</strong>\n      </p>\n    </div>\n  `;\n\n  try {\n    // Send email to Digimaatwerk\n    const adminMailOptions = {\n      from: `\"Digimaatwerk Contact Form\" <info@digimaatwerk.nl>`,\n      to: 'info@digimaatwerk.nl',\n      replyTo: email,\n      subject: `Nieuw contact bericht van ${name}`,\n      html: adminHtmlContent,\n      text: `\nNieuw contact formulier bericht\n\nNaam: ${name}\nEmail: ${email}\n${company ? `Bedrijf: ${company}` : ''}\n${projectType ? `Project Type: ${projectType}` : ''}\n\nBericht:\n${message}\n\n---\nDit bericht is verzonden via het contact formulier op digimaatwerk.nl\n      `.trim()\n    };\n\n    // Send confirmation email to user\n    const userMailOptions = {\n      from: `\"Digimaatwerk\" <info@digimaatwerk.nl>`,\n      to: email,\n      subject: 'Bevestiging: We hebben je bericht ontvangen',\n      html: userHtmlContent,\n      text: `\nBeste ${name},\n\nDank je wel voor je bericht. We hebben je vraag ontvangen en zullen zo spoedig mogelijk contact met je opnemen.\n\nDit is een automatisch bevestigingsbericht. Je hoeft hier niet op te reageren.\n\nJouw bericht:\n${message}\n\nContact informatie:\nEmail: info@digimaatwerk.nl\nWebsite: www.digimaatwerk.nl\nAdres: Star Numanstraat 79a, 9714JL Groningen\n\nMet vriendelijke groet,\nTeam Digimaatwerk\n      `.trim()\n    };\n\n\n\n    // Send both emails\n    const [adminResult, userResult] = await Promise.all([\n      transporter.sendMail(adminMailOptions),\n      transporter.sendMail(userMailOptions)\n    ]);\n\n\n  } catch (error) {\n    console.error('Error sending email:', error);\n    if (error instanceof Error) {\n      console.error('Email error details:', {\n        name: error.name,\n        message: error.message,\n        code: (error as any).code,\n        command: (error as any).command\n      });\n    }\n    throw new Error('Failed to send email');\n  }\n}\n\n// Test email function\nexport async function sendTestEmail(): Promise<void> {\n  const testData: EmailData = {\n    name: 'Test User',\n    email: 'dckessler95@gmail.com',\n    company: 'Test Company',\n    projectType: 'Web Development',\n    message: 'Dit is een test e-mail om de Strato mailserver configuratie te testen.'\n  };\n\n  await sendContactEmail(testData);\n}\n\n// Verify transporter configuration\nexport async function verifyEmailConfig(): Promise<boolean> {\n  try {\n    await transporter.verify();\n    console.log('Email server is ready to take our messages');\n    console.log('SMTP Config:', {\n      host: 'smtp.strato.de',\n      port: 465,\n      secure: true,\n      user: 'info@digimaatwerk.nl'\n    });\n    return true;\n  } catch (error) {\n    console.error('Email server configuration error:', error);\n    return false;\n  }\n}","size_bytes":6050},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport session from \"express-session\";\nimport MemoryStore from \"memorystore\";\nimport path from \"path\";\nimport './types'; // Import session types\nimport { startCMSProxy } from \"./cms-proxy\";\n\n// Create memory store for sessions\nconst MemoryStoreSession = MemoryStore(session);\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Set up session middleware\napp.use(session({\n  secret: process.env.SESSION_SECRET || 'digimaatwerk-session-secret',\n  resave: false,\n  saveUninitialized: false,\n  cookie: { secure: false, maxAge: 86400000 }, // 1 day\n  store: new MemoryStoreSession({\n    checkPeriod: 86400000 // prune expired entries every 24h\n  })\n}));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  // Expliciete route voor publieke statische bestanden\n  app.use(express.static(path.join(process.cwd(), 'public')));\n  \n  // Specifieke route voor afbeeldingen om te voorkomen dat ze worden blokkeerd door catch-all routes\n  app.use('/images', express.static(path.join(process.cwd(), 'public/images')));\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n    \n    // Start the CMS proxy server\n    const cmsProxy = startCMSProxy();\n    \n    // Cleanup proxy on server close\n    server.on('close', () => {\n      if (cmsProxy) {\n        cmsProxy.kill();\n      }\n    });\n  });\n})();\n","size_bytes":3041},"server/netlify-cms-proxy-server.d.ts":{"content":"declare module 'netlify-cms-proxy-server' {\n  export function middleware(options: {\n    rootPaths: Record<string, string>;\n    publicPath: string;\n    distPath: string;\n    logger?: Console;\n    security?: {\n      loginRoute: string;\n      authenticator: (email: string, password: string) => Promise<{ token: string; email: string } | null>;\n    };\n  }): (app: any) => void;\n}","size_bytes":376},"server/routes.ts":{"content":"import type { Express, Request, Response, NextFunction } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertWebhookSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport express from \"express\";\nimport './types'; // Import session types\nimport { setupWebhookRoutes } from \"./webhooks\";\nimport { sendContactEmail, verifyEmailConfig } from \"./email\";\n\n// Define interfaces for CMS content\ninterface CaseStudy {\n  slug: string;\n  title: string;\n  featured_image: string;\n  category: string;\n  client: string;\n  industry: string;\n  date: string;\n  description: string;\n  challenge: string;\n  solution: string;\n  result: string;\n  metrics: Array<{ label: string; value: string }>;\n  featured: boolean;\n  content: string;\n  [key: string]: any;\n}\n\ninterface BlogPost {\n  slug: string;\n  title: string;\n  featured_image: string;\n  author: string;\n  date: string;\n  categories: string[];\n  tags: string[];\n  excerpt: string;\n  content: string;\n  [key: string]: any;\n}\n\ninterface Service {\n  slug: string;\n  title: string;\n  icon: string;\n  short_description: string;\n  featured_image: string;\n  order: number;\n  features: Array<{ name: string; description: string }>;\n  tech_stack: Array<{ name: string; description: string }>;\n  content: string;\n  [key: string]: any;\n}\n\ninterface PortfolioItem {\n  id: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n  websiteUrl: string;\n  websiteScreenshot: string;\n  category: 'web' | 'automation' | 'chatbot';\n  displayType?: 'default' | 'bubble' | 'minimal';\n  order: number;\n  featured: boolean;\n  hoverColor?: string;\n  [key: string]: any;\n}\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2),\n  email: z.string().email(),\n  company: z.string().optional(),\n  projectType: z.string().optional(),\n  message: z.string().min(10),\n  consent: z.boolean().refine(val => val === true, {\n    message: \"You must consent to the privacy policy\"\n  })\n});\n\nconst chatMessageSchema = z.object({\n  message: z.string().min(1),\n  sender: z.enum([\"user\", \"bot\"])\n});\n\nconst projectEstimateSchema = z.object({\n  projectType: z.enum([\"chatbot\", \"automation\", \"web\", \"combined\"]),\n  scale: z.enum([\"small\", \"medium\", \"large\"]),\n  features: z.array(z.string()),\n  timelinePriority: z.number().min(1).max(3)\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Serve node_modules for CMS\n  app.use('/node_modules', express.static(path.join(process.cwd(), 'node_modules')));\n  \n  // Serve CMS admin files directly\n  app.use('/admin', express.static(path.join(process.cwd(), 'public/admin')));\n  \n  // Redirect /admin root to dashboard\n  app.get('/admin', (req: Request, res: Response) => {\n    res.redirect('/admin/dashboard.html');\n  });\n  \n  // Create a route to serve CMS content directly\n  app.use('/content', express.static(path.join(process.cwd(), 'public/content')));\n  \n  // Create a route to serve uploaded media\n  app.use('/uploads', express.static(path.join(process.cwd(), 'public/uploads')));\n  \n  // Create a route to serve images from the public/img directory\n  app.use('/img', express.static(path.join(process.cwd(), 'public/img')));\n  \n  // Create a route to serve images from the public/images directory\n  app.use('/images', express.static(path.join(process.cwd(), 'public/images')));\n  \n  // Register API webhooks for Make and n8n integrations\n  setupWebhookRoutes(app);\n  \n  // Webhook management API endpoints\n  app.get('/api/webhooks', async (req: Request, res: Response) => {\n    try {\n      const webhooks = await storage.getAllWebhooks();\n      res.json({ success: true, data: webhooks });\n    } catch (error) {\n      console.error('Error fetching webhooks:', error);\n      res.status(500).json({ success: false, message: 'Failed to fetch webhooks' });\n    }\n  });\n\n  app.get('/api/webhooks/:id', async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const webhook = await storage.getWebhook(id);\n      \n      if (!webhook) {\n        return res.status(404).json({ success: false, message: 'Webhook not found' });\n      }\n      \n      res.json({ success: true, data: webhook });\n    } catch (error) {\n      console.error('Error fetching webhook:', error);\n      res.status(500).json({ success: false, message: 'Failed to fetch webhook' });\n    }\n  });\n\n  app.post('/api/webhooks', async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertWebhookSchema.parse(req.body);\n      const webhook = await storage.createWebhook(validatedData);\n      res.status(201).json({ success: true, data: webhook });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, message: 'Validation error', errors: error.errors });\n      } else {\n        console.error('Error creating webhook:', error);\n        res.status(500).json({ success: false, message: 'Failed to create webhook' });\n      }\n    }\n  });\n\n  app.put('/api/webhooks/:id', async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const validatedData = insertWebhookSchema.parse(req.body);\n      const webhook = await storage.updateWebhook(id, validatedData);\n      res.json({ success: true, data: webhook });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, message: 'Validation error', errors: error.errors });\n      } else {\n        console.error('Error updating webhook:', error);\n        res.status(500).json({ success: false, message: 'Failed to update webhook' });\n      }\n    }\n  });\n\n  app.delete('/api/webhooks/:id', async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      await storage.deleteWebhook(id);\n      res.json({ success: true, message: 'Webhook deleted successfully' });\n    } catch (error) {\n      console.error('Error deleting webhook:', error);\n      res.status(500).json({ success: false, message: 'Failed to delete webhook' });\n    }\n  });\n\n  app.get('/api/webhooks/logs', async (req: Request, res: Response) => {\n    try {\n      const limit = parseInt(req.query.limit as string) || 50;\n      // Get logs for all webhooks\n      const webhooks = await storage.getAllWebhooks();\n      const allLogs = [];\n      \n      for (const webhook of webhooks) {\n        const logs = await storage.getWebhookLogs(webhook.id, Math.floor(limit / webhooks.length) || 1);\n        allLogs.push(...logs);\n      }\n      \n      // Sort by triggeredAt descending and limit\n      allLogs.sort((a, b) => new Date(b.triggeredAt).getTime() - new Date(a.triggeredAt).getTime());\n      const limitedLogs = allLogs.slice(0, limit);\n      \n      res.json({ success: true, data: limitedLogs });\n    } catch (error) {\n      console.error('Error fetching webhook logs:', error);\n      res.status(500).json({ success: false, message: 'Failed to fetch webhook logs' });\n    }\n  });\n\n  app.post('/api/webhooks/:id/test', async (req: Request, res: Response) => {\n    try {\n      const id = parseInt(req.params.id);\n      const webhook = await storage.getWebhook(id);\n      \n      if (!webhook) {\n        return res.status(404).json({ success: false, message: 'Webhook not found' });\n      }\n      \n      if (!webhook.isActive) {\n        return res.status(400).json({ success: false, message: 'Webhook is not active' });\n      }\n      \n      const testPayload = {\n        test: true,\n        eventType: webhook.eventType,\n        timestamp: new Date().toISOString(),\n        data: { message: 'Test webhook from Digimaatwerk CMS' }\n      };\n      \n      const startTime = Date.now();\n      \n      try {\n        const headers: Record<string, string> = {\n          'Content-Type': 'application/json',\n          'User-Agent': 'Digimaatwerk-Webhook/1.0'\n        };\n        \n        if (webhook.secretToken) {\n          headers['X-Webhook-Token'] = webhook.secretToken;\n        }\n        \n        const response = await fetch(webhook.url, {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify(testPayload)\n        });\n        \n        const duration = Date.now() - startTime;\n        const responseText = await response.text();\n        \n        // Log the test\n        await storage.createWebhookLog({\n          webhookId: webhook.id,\n          eventType: 'test',\n          payload: testPayload,\n          responseStatus: response.status,\n          responseBody: responseText.substring(0, 1000), // Limit response body length\n          duration: duration\n        });\n        \n        res.json({ \n          success: true, \n          status: response.status, \n          duration: duration,\n          message: 'Webhook test completed'\n        });\n        \n      } catch (fetchError: any) {\n        const duration = Date.now() - startTime;\n        \n        // Log the error\n        await storage.createWebhookLog({\n          webhookId: webhook.id,\n          eventType: 'test',\n          payload: testPayload,\n          error: fetchError.message,\n          duration: duration\n        });\n        \n        res.status(500).json({ \n          success: false, \n          message: 'Webhook test failed: ' + fetchError.message \n        });\n      }\n      \n    } catch (error) {\n      console.error('Error testing webhook:', error);\n      res.status(500).json({ success: false, message: 'Failed to test webhook' });\n    }\n  });\n  \n  // API endpoint voor website screenshots met fallback naar lokale afbeeldingen\n  app.get(\"/api/website-screenshot\", async (req: Request, res: Response) => {\n    try {\n      const { url, localImage } = req.query;\n      \n      if (!url || typeof url !== 'string') {\n        return res.status(400).json({ error: 'URL is vereist' });\n      }\n      \n      // Lokale afbeelding gebruiken als fallback in plaats van Page2Images API\n      const localImagePath = typeof localImage === 'string' ? localImage : '/images/portfolio/fasttaxi.png';\n      \n      // Success response met lokale afbeelding\n      return res.json({ \n        status: \"success\", \n        image_url: localImagePath \n      });\n      \n      /* \n      // Originele Page2Images API code (uitgeschakeld vanwege API-limieten)\n      const apiKey = process.env.PAGE2IMAGES_API_KEY;\n      if (!apiKey) {\n        return res.status(500).json({ error: 'API key is niet geconfigureerd' });\n      }\n      \n      const apiUrl = `https://api.page2images.com/restfullink?p2i_url=${encodeURIComponent(url)}&p2i_key=${apiKey}&p2i_device=6&p2i_screen=1280x800&p2i_size=1280x0`;\n      \n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      \n      return res.json(data);\n      */\n    } catch (error) {\n      console.error('Screenshot API error:', error);\n      return res.status(500).json({ error: 'Er is een fout opgetreden bij het ophalen van de screenshot' });\n    }\n  });\n  // Contact form submission\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      // Validate the request body\n      const formData = contactFormSchema.parse(req.body);\n      \n      // Store the contact submission\n      const submission = await storage.createContactSubmission({\n        name: formData.name,\n        email: formData.email,\n        company: formData.company || \"\",\n        projectType: formData.projectType || \"\",\n        message: formData.message,\n        submittedAt: new Date()\n      });\n\n      // Send email notification\n      try {\n        await sendContactEmail({\n          name: formData.name,\n          email: formData.email,\n          company: formData.company,\n          projectType: formData.projectType,\n          message: formData.message\n        });\n\n      } catch (emailError) {\n        console.error('Failed to send email notification:', emailError);\n        // Continue execution - don't fail the request if email fails\n      }\n      \n      // Return success response\n      res.status(201).json({\n        success: true,\n        message: \"Contact form submitted successfully\",\n        data: { \n          id: submission.id,\n          submittedAt: submission.submittedAt\n        }\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false,\n          message: \"Validation error\",\n          errors: error.errors\n        });\n      } else {\n        console.error(\"Contact form error:\", error);\n        res.status(500).json({ \n          success: false,\n          message: \"Failed to submit contact form\"\n        });\n      }\n    }\n  });\n\n  // Save chat message\n  app.post(\"/api/chat\", async (req, res) => {\n    try {\n      // Validate the request body\n      const chatData = chatMessageSchema.parse(req.body);\n      \n      // Store the chat message\n      const message = await storage.createChatMessage({\n        message: chatData.message,\n        sender: chatData.sender,\n        timestamp: new Date()\n      });\n      \n      // If it's a user message, generate a bot response (simplified)\n      let botResponse = null;\n      if (chatData.sender === \"user\") {\n        botResponse = await storage.createChatMessage({\n          message: \"Thank you for your message. How can I help you further?\",\n          sender: \"bot\",\n          timestamp: new Date()\n        });\n      }\n      \n      // Return success response\n      res.status(201).json({\n        success: true,\n        message: \"Chat message saved\",\n        data: { \n          userMessage: message,\n          botResponse\n        }\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false,\n          message: \"Validation error\",\n          errors: error.errors\n        });\n      } else {\n        console.error(\"Chat message error:\", error);\n        res.status(500).json({ \n          success: false,\n          message: \"Failed to save chat message\"\n        });\n      }\n    }\n  });\n\n  // Project calculator\n  app.post(\"/api/estimate\", async (req, res) => {\n    try {\n      // Validate the request body\n      const estimateData = projectEstimateSchema.parse(req.body);\n      \n      // Base prices by project type and scale\n      const basePrice = {\n        chatbot: { small: 10000, medium: 15000, large: 25000 },\n        automation: { small: 12000, medium: 18000, large: 30000 },\n        web: { small: 15000, medium: 22500, large: 37500 },\n        combined: { small: 20000, medium: 30000, large: 50000 }\n      };\n      \n      // Feature costs\n      const featureCosts: Record<string, number> = {\n        \"feature1\": 1500, // User Authentication\n        \"feature2\": 2000, // CRM Integration\n        \"feature3\": 2500, // Payment Processing\n        \"feature4\": 3000, // Analytics Dashboard\n        \"feature5\": 4000  // 3D Visualizations\n      };\n      \n      // Calculate base cost\n      const projectBasePrice = basePrice[estimateData.projectType][estimateData.scale];\n      \n      // Calculate features cost\n      const featuresTotal = estimateData.features.reduce((sum, feature) => {\n        return sum + (featureCosts[feature] || 0);\n      }, 0);\n      \n      // Timeline priority multiplier\n      const rushMultiplier: Record<number, number> = {\n        1: 1,      // Standard\n        2: 1.25,   // Expedited\n        3: 1.5     // Rush\n      };\n      \n      // Calculate total estimated budget\n      const totalEstimate = (projectBasePrice + featuresTotal) * rushMultiplier[estimateData.timelinePriority];\n      \n      // Timeline calculation\n      const baseTimeline = {\n        small: 4,\n        medium: 6, \n        large: 10\n      };\n      \n      const featureTime = Math.ceil(estimateData.features.length / 2);\n      const timeMultiplier: Record<number, number> = {\n        1: 1,    // Standard\n        2: 0.8,  // Expedited\n        3: 0.6   // Rush\n      };\n      \n      const timeline = (baseTimeline[estimateData.scale] + featureTime) * timeMultiplier[estimateData.timelinePriority];\n      \n      // Store the estimate\n      const estimate = await storage.createProjectEstimate({\n        projectType: estimateData.projectType,\n        scale: estimateData.scale,\n        features: estimateData.features,\n        timelinePriority: estimateData.timelinePriority,\n        estimatedBudgetMin: Math.round(totalEstimate * 0.9),\n        estimatedBudgetMax: Math.round(totalEstimate * 1.1),\n        estimatedTimelineMin: Math.max(2, Math.floor(timeline * 0.9)),\n        estimatedTimelineMax: Math.ceil(timeline * 1.1),\n        createdAt: new Date()\n      });\n      \n      // Return success response\n      res.status(201).json({\n        success: true,\n        message: \"Project estimate calculated\",\n        data: estimate\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false,\n          message: \"Validation error\",\n          errors: error.errors\n        });\n      } else {\n        console.error(\"Project estimate error:\", error);\n        res.status(500).json({ \n          success: false,\n          message: \"Failed to calculate project estimate\"\n        });\n      }\n    }\n  });\n\n  // Get CMS content for case studies\n  app.get(\"/api/case-studies\", async (req, res) => {\n    try {\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/case-studies');\n      \n      // Get all files in the case-studies directory\n      const files = await fs.readdir(contentDir);\n      \n      // Filter for the requested language or default to .nl.md files\n      const languageFiles = files.filter(file => file.endsWith(`.${language}.md`));\n      \n      // Read and parse each file\n      const caseStudies: CaseStudy[] = await Promise.all(\n        languageFiles.map(async (file) => {\n          const filePath = path.join(contentDir, file);\n          const content = await fs.readFile(filePath, 'utf8');\n          \n          // Parse frontmatter\n          const parsed = matter(content);\n          \n          // Get the slug from the filename (remove language and extension)\n          const slug = file.replace(`.${language}.md`, '');\n          \n          // Return the case study data\n          return {\n            slug,\n            ...parsed.data,\n            content: parsed.content.trim()\n          } as CaseStudy;\n        })\n      );\n      \n      // Sort by featured and date\n      const sortedCaseStudies = caseStudies.sort((a, b) => {\n        // First sort by featured\n        if (a.featured && !b.featured) return -1;\n        if (!a.featured && b.featured) return 1;\n        \n        // Then sort by date (most recent first)\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return dateB.getTime() - dateA.getTime();\n      });\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        data: sortedCaseStudies\n      });\n    } catch (error) {\n      console.error(\"Error fetching case studies:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to fetch case studies\"\n      });\n    }\n  });\n  \n  // Get individual case study by slug\n  app.get(\"/api/case-studies/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/case-studies');\n      \n      // Construct the expected filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file exists\n      try {\n        await fs.access(filePath);\n      } catch (err) {\n        return res.status(404).json({\n          success: false,\n          message: \"Case study not found\"\n        });\n      }\n      \n      // Read and parse the file\n      const content = await fs.readFile(filePath, 'utf8');\n      const parsed = matter(content);\n      \n      // Convert markdown content to HTML using a simple regex-based approach\n      // Since we can't use require in this context\n      const convertMarkdownToHtml = (markdown: string) => {\n        // Basic markdown to HTML conversion\n        let html = markdown\n          // Convert headers\n          .replace(/^# (.*$)/gm, '<h1>$1</h1>')\n          .replace(/^## (.*$)/gm, '<h2>$1</h2>')\n          .replace(/^### (.*$)/gm, '<h3>$1</h3>')\n          // Convert bold\n          .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n          // Convert italic\n          .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n          // Convert bullet lists\n          .replace(/^- (.*$)/gm, '<li>$1</li>')\n          // Wrap list items\n          .replace(/(<li>.*<\\/li>\\n)+/g, (match) => `<ul>${match}</ul>`)\n          // Convert number lists\n          .replace(/^\\d+\\. (.*$)/gm, '<li>$1</li>')\n          // Wrap number list items\n          .replace(/(<li>.*<\\/li>\\n)+/g, (match) => `<ol>${match}</ol>`)\n          // Fix unintended nesting\n          .replace(/<\\/ul>\\n<ul>/g, '')\n          .replace(/<\\/ol>\\n<ol>/g, '')\n          // Convert images (must be before links)\n          .replace(/!\\[([^\\]]*)\\]\\(([^)]+)\\)/g, '<img src=\"$2\" alt=\"$1\" />')\n          // Convert links\n          .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" class=\"text-accent hover:underline\">$1</a>')\n          // Convert blockquotes\n          .replace(/^> (.*$)/gm, '<blockquote>$1</blockquote>')\n          // Convert code blocks\n          .replace(/```([^`]+)```/g, '<pre><code>$1</code></pre>')\n          // Convert inline code\n          .replace(/`([^`]+)`/g, '<code>$1</code>');\n          \n        // Convert paragraphs - this must be done last to avoid conflicts\n        const lines = html.split('\\n');\n        let inBlock = false;\n        let result = '';\n        \n        for (let i = 0; i < lines.length; i++) {\n          const line = lines[i];\n          \n          // Skip if line is empty or already contains HTML tags\n          if (line.trim() === '' || \n              line.startsWith('<h') || \n              line.startsWith('<ul') || \n              line.startsWith('<ol') || \n              line.startsWith('<li') || \n              line.startsWith('<blockquote') || \n              line.startsWith('<pre>')) {\n            result += line + '\\n';\n            continue;\n          }\n          \n          // Otherwise wrap in paragraph tags\n          if (!inBlock) {\n            result += '<p>' + line;\n            inBlock = true;\n          } else {\n            result += ' ' + line;\n          }\n          \n          // Close paragraph if next line is empty or a block element\n          const nextLine = i < lines.length - 1 ? lines[i + 1] : '';\n          if (nextLine.trim() === '' || \n              nextLine.startsWith('<h') || \n              nextLine.startsWith('<ul') || \n              nextLine.startsWith('<ol') || \n              nextLine.startsWith('<li') || \n              nextLine.startsWith('<blockquote') || \n              nextLine.startsWith('<pre>')) {\n            result += '</p>\\n';\n            inBlock = false;\n          }\n        }\n        \n        // Close any remaining paragraph\n        if (inBlock) {\n          result += '</p>\\n';\n        }\n        \n        return result;\n      };\n      \n      const htmlContent = convertMarkdownToHtml(parsed.content);\n      \n      // Return the case study data\n      res.status(200).json({\n        success: true,\n        data: {\n          slug,\n          ...parsed.data,\n          content: htmlContent\n        }\n      });\n    } catch (error) {\n      console.error(\"Error fetching case study:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to fetch case study\"\n      });\n    }\n  });\n  \n  // Delete case study by slug\n  app.delete(\"/api/case-studies/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/case-studies');\n      \n      // Find all files that start with this slug (to handle all languages)\n      const allFiles = await fs.readdir(contentDir);\n      const matchingFiles = allFiles.filter(file => \n        file === `${slug}.md` || \n        file.startsWith(`${slug}.`)\n      );\n      \n      if (matchingFiles.length === 0) {\n        return res.status(404).json({\n          success: false,\n          message: \"Case study not found\"\n        });\n      }\n      \n      // Delete each matching file\n      for (const file of matchingFiles) {\n        const filePath = path.join(contentDir, file);\n        await fs.unlink(filePath);\n        console.log(`Deleted: ${filePath}`);\n      }\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        message: \"Case study deleted successfully\"\n      });\n    } catch (error) {\n      console.error(\"Error deleting case study:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to delete case study\"\n      });\n    }\n  });\n  \n  // Update case study featured status\n  app.patch(\"/api/case-studies/:slug/featured\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const { featured } = req.body;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/case-studies');\n      \n      // Construct the expected filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file exists\n      try {\n        await fs.access(filePath);\n      } catch (err) {\n        return res.status(404).json({\n          success: false,\n          message: \"Case study not found\"\n        });\n      }\n      \n      // Read and parse the file\n      const content = await fs.readFile(filePath, 'utf8');\n      const parsed = matter(content);\n      \n      // Update the featured status\n      parsed.data.featured = featured === true;\n      \n      // Write the updated content back to the file\n      const updatedContent = matter.stringify(parsed.content, parsed.data);\n      await fs.writeFile(filePath, updatedContent);\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        message: \"Case study updated successfully\",\n        data: {\n          slug,\n          ...parsed.data\n        }\n      });\n    } catch (error) {\n      console.error(\"Error updating case study:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to update case study\"\n      });\n    }\n  });\n  \n  // Update case study \n  app.patch(\"/api/case-studies/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const updates = req.body;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/case-studies');\n      \n      // Construct the expected filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file exists\n      try {\n        await fs.access(filePath);\n      } catch (err) {\n        return res.status(404).json({\n          success: false,\n          message: \"Case study not found\"\n        });\n      }\n      \n      // Read and parse the file\n      const content = await fs.readFile(filePath, 'utf8');\n      const parsed = matter(content);\n      \n      // Extract content if it was provided\n      let markdownContent = parsed.content;\n      if (updates.content !== undefined) {\n        markdownContent = updates.content;\n        delete updates.content; // Remove from updates to avoid storing it in the frontmatter\n      }\n      \n      // Update the metadata\n      Object.assign(parsed.data, updates);\n      \n      // Write the updated content back to the file with new markdown content\n      const updatedContent = matter.stringify(markdownContent, parsed.data);\n      await fs.writeFile(filePath, updatedContent);\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        message: \"Case study updated successfully\",\n        data: {\n          slug,\n          ...parsed.data,\n          content: markdownContent\n        }\n      });\n    } catch (error) {\n      console.error(\"Error updating case study:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to update case study\"\n      });\n    }\n  });\n  \n  // Create new case study\n  app.post(\"/api/case-studies\", async (req, res) => {\n    try {\n      const { title, slug, category, client, description, content, featured } = req.body;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/case-studies');\n      \n      // Ensure content directory exists\n      try {\n        await fs.mkdir(contentDir, { recursive: true });\n      } catch (err) {\n        // Ignore if directory already exists\n      }\n      \n      // Construct the filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file already exists\n      try {\n        await fs.access(filePath);\n        return res.status(409).json({\n          success: false,\n          message: \"Case study with this slug already exists\"\n        });\n      } catch (err) {\n        // File doesn't exist, this is what we want\n      }\n      \n      // Prepare the data\n      const data = {\n        title,\n        slug,\n        category: category || 'Webontwikkeling',\n        client: client || '',\n        featured: featured || false,\n        date: new Date().toISOString(),\n        description: description || '',\n        featured_image: '/uploads/default-case-study.jpg', // Default image\n        industry: '',\n        metrics: [],\n        challenge: '',\n        solution: '',\n        result: ''\n      };\n      \n      // Create the file content with frontmatter\n      const fileContent = matter.stringify(content || '# New Case Study\\n\\nAdd content here.', data);\n      await fs.writeFile(filePath, fileContent);\n      \n      // Return success response\n      res.status(201).json({\n        success: true,\n        message: \"Case study created successfully\",\n        data\n      });\n    } catch (error) {\n      console.error(\"Error creating case study:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to create case study\"\n      });\n    }\n  });\n  \n\n  \n  // Get blog posts\n  app.get(\"/api/blog\", async (req, res) => {\n    try {\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/blog');\n      \n      // Get all files in the blog directory\n      const files = await fs.readdir(contentDir);\n      \n      // Filter for the requested language\n      const languageFiles = files.filter(file => file.endsWith(`.${language}.md`));\n      \n      // Read and parse each file\n      const blogPosts: BlogPost[] = await Promise.all(\n        languageFiles.map(async (file) => {\n          const filePath = path.join(contentDir, file);\n          const content = await fs.readFile(filePath, 'utf8');\n          \n          // Parse frontmatter\n          const parsed = matter(content);\n          \n          // Get the slug from the filename (remove language and extension)\n          const slug = file.replace(`.${language}.md`, '');\n          \n          // Return the blog post data\n          return {\n            slug,\n            ...parsed.data,\n            content: parsed.content.trim()\n          } as BlogPost;\n        })\n      );\n      \n      // Sort by date (most recent first)\n      const sortedBlogPosts = blogPosts.sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return dateB.getTime() - dateA.getTime();\n      });\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        data: sortedBlogPosts\n      });\n    } catch (error) {\n      console.error(\"Error fetching blog posts:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to fetch blog posts\"\n      });\n    }\n  });\n  \n  // Delete blog post by slug\n  app.delete(\"/api/blog/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/blog');\n      \n      // Find all files that start with this slug (to handle all languages)\n      const allFiles = await fs.readdir(contentDir);\n      const matchingFiles = allFiles.filter(file => \n        file === `${slug}.md` || \n        file.startsWith(`${slug}.`)\n      );\n      \n      if (matchingFiles.length === 0) {\n        return res.status(404).json({\n          success: false,\n          message: \"Blog post not found\"\n        });\n      }\n      \n      // Delete each matching file\n      for (const file of matchingFiles) {\n        const filePath = path.join(contentDir, file);\n        await fs.unlink(filePath);\n        console.log(`Deleted: ${filePath}`);\n      }\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        message: \"Blog post deleted successfully\"\n      });\n    } catch (error) {\n      console.error(\"Error deleting blog post:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to delete blog post\"\n      });\n    }\n  });\n  \n  // Update blog post \n  app.patch(\"/api/blog/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const updates = req.body;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/blog');\n      \n      // Construct the expected filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file exists\n      try {\n        await fs.access(filePath);\n      } catch (err) {\n        return res.status(404).json({\n          success: false,\n          message: \"Blog post not found\"\n        });\n      }\n      \n      // Read and parse the file\n      const content = await fs.readFile(filePath, 'utf8');\n      const parsed = matter(content);\n      \n      // Extract content if it was provided\n      let markdownContent = parsed.content;\n      if (updates.content !== undefined) {\n        markdownContent = updates.content;\n        delete updates.content; // Remove from updates to avoid storing it in the frontmatter\n      }\n      \n      // Update the metadata\n      Object.assign(parsed.data, updates);\n      \n      // Write the updated content back to the file with new markdown content\n      const updatedContent = matter.stringify(markdownContent, parsed.data);\n      await fs.writeFile(filePath, updatedContent);\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        message: \"Blog post updated successfully\",\n        data: {\n          slug,\n          ...parsed.data,\n          content: markdownContent\n        }\n      });\n    } catch (error) {\n      console.error(\"Error updating blog post:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to update blog post\"\n      });\n    }\n  });\n  \n  // Create new blog post\n  app.post(\"/api/blog\", async (req, res) => {\n    try {\n      const { title, slug, author, categories, tags, excerpt, content } = req.body;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/blog');\n      \n      // Ensure content directory exists\n      try {\n        await fs.mkdir(contentDir, { recursive: true });\n      } catch (err) {\n        // Ignore if directory already exists\n      }\n      \n      // Construct the filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file already exists\n      try {\n        await fs.access(filePath);\n        return res.status(409).json({\n          success: false,\n          message: \"Blog post with this slug already exists\"\n        });\n      } catch (err) {\n        // File doesn't exist, this is what we want\n      }\n      \n      // Prepare the data\n      const data = {\n        title,\n        slug,\n        author: author || 'Damian Kessler',\n        date: new Date().toISOString(),\n        categories: categories || ['Algemeen'],\n        tags: tags || [],\n        excerpt: excerpt || '',\n        featured_image: '/uploads/default-blog.jpg'\n      };\n      \n      // Create the file content with frontmatter\n      const fileContent = matter.stringify(content || '# New Blog Post\\n\\nAdd content here.', data);\n      await fs.writeFile(filePath, fileContent);\n      \n      // Return success response\n      res.status(201).json({\n        success: true,\n        message: \"Blog post created successfully\",\n        data\n      });\n    } catch (error) {\n      console.error(\"Error creating blog post:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to create blog post\"\n      });\n    }\n  });\n  \n  // Webhook endpoint for CMS integrations (Make, n8n, etc)\n  app.post(\"/api/webhooks/cms\", async (req, res) => {\n    try {\n      // Validate webhook request\n      const authHeader = req.headers.authorization;\n      const webhookSecret = process.env.WEBHOOK_SECRET_TOKEN;\n      \n      if (!webhookSecret) {\n        console.log(\"Webhook secret not configured\");\n        return res.status(200).json({ message: \"Webhook processed (secret not configured)\" });\n      }\n      \n      const expectedAuth = `Bearer ${webhookSecret}`;\n      \n      if (authHeader !== expectedAuth) {\n        return res.status(401).json({ success: false, message: \"Unauthorized webhook request\" });\n      }\n      \n      // Log the webhook payload\n      console.log(\"Received CMS webhook:\", JSON.stringify(req.body, null, 2));\n      \n      // Process based on the event type\n      const event = req.body.event || \"\";\n      \n      if (event === \"publish\") {\n        const collection = req.body.collection || \"\";\n        const slug = req.body.slug || \"\";\n        const locale = req.body.locale || \"nl\";\n        \n        console.log(`Content published: ${collection}/${slug} (${locale})`);\n        \n        // You could perform additional actions here based on the event\n        // Such as updating indexes, sending notifications, etc.\n      }\n      \n      // Successfully processed webhook\n      res.status(200).json({ \n        success: true, \n        message: \"Webhook processed successfully\" \n      });\n    } catch (error) {\n      console.error(\"Webhook processing error:\", error);\n      res.status(500).json({ \n        success: false, \n        message: \"Error processing webhook\" \n      });\n    }\n  });\n  \n  // Get services\n  // Portfolio items endpoint\n  app.get(\"/api/portfolio\", async (req, res) => {\n    try {\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/portfolio');\n      console.log(\"Portfolio API called with language:\", language);\n      console.log(\"Content directory:\", contentDir);\n      \n      // Get all files in the portfolio directory\n      const files = await fs.readdir(contentDir);\n      console.log(\"Found files:\", files);\n      \n      // Filter for the requested language\n      let languageFiles = [];\n      \n      if (language === 'nl') {\n        // For Dutch, include base .md files without language suffix first\n        const baseFiles = files.filter(file => \n          file.endsWith('.md') && !file.includes('.en.') && !file.includes('.nl.')\n        );\n        // Then add specific .nl.md files \n        const nlFiles = files.filter(file => file.endsWith('.nl.md'));\n        \n        languageFiles = [...baseFiles, ...nlFiles];\n      } else {\n        // For other languages just get the language-specific files\n        languageFiles = files.filter(file => file.endsWith(`.${language}.md`));\n      }\n      \n      console.log(`Found ${languageFiles.length} files for language ${language}:`, languageFiles);\n      console.log(\"Filtered language files:\", languageFiles);\n      \n      // Read and parse each file\n      const portfolioItems: PortfolioItem[] = await Promise.all(\n        languageFiles.map(async (file) => {\n          const filePath = path.join(contentDir, file);\n          const content = await fs.readFile(filePath, 'utf8');\n          \n          // Parse frontmatter\n          const parsed = matter(content);\n          \n          // Return the portfolio item data\n          return {\n            ...parsed.data,\n          } as PortfolioItem;\n        })\n      );\n      \n      // Sort by order and featured\n      const sortedItems = portfolioItems.sort((a, b) => {\n        // First sort by featured\n        if (a.featured && !b.featured) return -1;\n        if (!a.featured && b.featured) return 1;\n        \n        // Then sort by order\n        return (a.order || 0) - (b.order || 0);\n      });\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        data: sortedItems\n      });\n    } catch (error) {\n      console.error(\"Error fetching portfolio items:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to fetch portfolio items\"\n      });\n    }\n  });\n\n  app.get(\"/api/services\", async (req, res) => {\n    try {\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/services');\n      \n      // Get all files in the services directory\n      const files = await fs.readdir(contentDir);\n      \n      // Filter for the requested language\n      const languageFiles = files.filter(file => file.endsWith(`.${language}.md`));\n      \n      // Read and parse each file\n      const services: Service[] = await Promise.all(\n        languageFiles.map(async (file) => {\n          const filePath = path.join(contentDir, file);\n          const content = await fs.readFile(filePath, 'utf8');\n          \n          // Parse frontmatter\n          const parsed = matter(content);\n          \n          // Get the slug from the filename (remove language and extension)\n          const slug = file.replace(`.${language}.md`, '');\n          \n          // Return the service data\n          return {\n            slug,\n            ...parsed.data,\n            content: parsed.content.trim()\n          } as Service;\n        })\n      );\n      \n      // Sort by order field\n      const sortedServices = services.sort((a, b) => {\n        return (a.order || 999) - (b.order || 999);\n      });\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        data: sortedServices\n      });\n    } catch (error) {\n      console.error(\"Error fetching services:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to fetch services\"\n      });\n    }\n  });\n\n  // Get a single service by slug\n  app.get(\"/api/services/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/services');\n      \n      // Construct the expected filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file exists\n      try {\n        await fs.access(filePath);\n      } catch (err) {\n        return res.status(404).json({\n          success: false,\n          message: \"Service not found\"\n        });\n      }\n      \n      // Read and parse the file\n      const content = await fs.readFile(filePath, 'utf8');\n      const parsed = matter(content);\n      \n      // Return the service data\n      const service = {\n        slug,\n        ...parsed.data,\n        content: parsed.content.trim()\n      } as Service;\n      \n      res.json({\n        success: true,\n        data: service\n      });\n    } catch (error) {\n      console.error(\"Error fetching service:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to fetch service\"\n      });\n    }\n  });\n  \n  // Delete service by slug\n  app.delete(\"/api/services/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/services');\n      \n      // Find all files that start with this slug (to handle all languages)\n      const allFiles = await fs.readdir(contentDir);\n      const matchingFiles = allFiles.filter(file => \n        file === `${slug}.md` || \n        file.startsWith(`${slug}.`)\n      );\n      \n      if (matchingFiles.length === 0) {\n        return res.status(404).json({\n          success: false,\n          message: \"Service not found\"\n        });\n      }\n      \n      // Delete each matching file\n      for (const file of matchingFiles) {\n        const filePath = path.join(contentDir, file);\n        await fs.unlink(filePath);\n        console.log(`Deleted: ${filePath}`);\n      }\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        message: \"Service deleted successfully\"\n      });\n    } catch (error) {\n      console.error(\"Error deleting service:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to delete service\"\n      });\n    }\n  });\n  \n  // Update service \n  app.patch(\"/api/services/:slug\", async (req, res) => {\n    try {\n      const { slug } = req.params;\n      const updates = req.body;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/services');\n      \n      // Construct the expected filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file exists\n      try {\n        await fs.access(filePath);\n      } catch (err) {\n        return res.status(404).json({\n          success: false,\n          message: \"Service not found\"\n        });\n      }\n      \n      // Read and parse the file\n      const content = await fs.readFile(filePath, 'utf8');\n      const parsed = matter(content);\n      \n      // Extract content if it was provided\n      let markdownContent = parsed.content;\n      if (updates.content !== undefined) {\n        markdownContent = updates.content;\n        delete updates.content; // Remove from updates to avoid storing it in the frontmatter\n      }\n      \n      // Update the metadata\n      Object.assign(parsed.data, updates);\n      \n      // Write the updated content back to the file with new markdown content\n      const updatedContent = matter.stringify(markdownContent, parsed.data);\n      await fs.writeFile(filePath, updatedContent);\n      \n      // Return success response\n      res.status(200).json({\n        success: true,\n        message: \"Service updated successfully\",\n        data: {\n          slug,\n          ...parsed.data,\n          content: markdownContent\n        }\n      });\n    } catch (error) {\n      console.error(\"Error updating service:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to update service\"\n      });\n    }\n  });\n  \n  // Create new service\n  app.post(\"/api/services\", async (req, res) => {\n    try {\n      const { title, slug, icon, short_description, features, tech_stack, content, order } = req.body;\n      const language = req.query.lang || 'nl';\n      const contentDir = path.join(process.cwd(), 'public/content/services');\n      \n      // Ensure content directory exists\n      try {\n        await fs.mkdir(contentDir, { recursive: true });\n      } catch (err) {\n        // Ignore if directory already exists\n      }\n      \n      // Construct the filename\n      const filename = `${slug}.${language}.md`;\n      const filePath = path.join(contentDir, filename);\n      \n      // Check if file already exists\n      try {\n        await fs.access(filePath);\n        return res.status(409).json({\n          success: false,\n          message: \"Service with this slug already exists\"\n        });\n      } catch (err) {\n        // File doesn't exist, this is what we want\n      }\n      \n      // Prepare the data\n      const data = {\n        title: title || '',\n        slug,\n        icon: icon || 'code',\n        short_description: short_description || '',\n        featured_image: '/uploads/default-service.jpg',\n        order: order || 999,\n        features: features || [],\n        tech_stack: tech_stack || []\n      };\n      \n      // Create the file content with frontmatter\n      const fileContent = matter.stringify(content || '# New Service\\n\\nAdd content here.', data);\n      await fs.writeFile(filePath, fileContent);\n      \n      // Return success response\n      res.status(201).json({\n        success: true,\n        message: \"Service created successfully\",\n        data\n      });\n    } catch (error) {\n      console.error(\"Error creating service:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to create service\"\n      });\n    }\n  });\n\n  // Set up local CMS authentication backend\n  const cmsContentRoot = path.join(process.cwd(), 'public/content');\n  const cmsMediaRoot = path.join(process.cwd(), 'public/uploads');\n  \n  // Default login credentials for CMS (only in development)\n  const username = 'admin';\n  const password = 'digimaatwerk2024';\n\n  // Manual login endpoint for CMS\n  app.post('/api/admin/login', (req, res) => {\n    try {\n      const { email, password } = req.body;\n      \n      // Simple authentication for development\n      if (email === username && password === password) {\n        res.status(200).json({ \n          success: true, \n          token: 'mock-token', \n          email: email \n        });\n      } else {\n        res.status(401).json({ \n          success: false, \n          message: 'Invalid credentials' \n        });\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      res.status(500).json({ \n        success: false, \n        message: 'Internal server error' \n      });\n    }\n  });\n\n  // Login route for CMS admin\n  app.post('/admin/api/login', (req, res) => {\n    const { email, password } = req.body;\n    \n    // We accept any credentials in the test/development environment\n    // This is only for testing the CMS, in production this would use proper auth\n    \n    // Simple session-based auth\n    if (!req.session) {\n      return res.status(500).json({ \n        success: false, \n        message: \"Session management not available\" \n      });\n    }\n    \n    // Set session\n    req.session.user = { email, isAdmin: true };\n    \n    return res.status(200).json({\n      success: true,\n      message: \"Login successful\",\n      data: {\n        email: email,\n        token: \"mock-token\" // In production, use a real JWT or similar\n      }\n    });\n  });\n  \n  // Check if user is authenticated\n  app.get('/admin/api/auth/check', (req, res) => {\n    if (req.session && req.session.user) {\n      return res.status(200).json({\n        success: true,\n        message: \"Authenticated\",\n        data: {\n          email: req.session.user.email\n        }\n      });\n    }\n    \n    return res.status(401).json({\n      success: false,\n      message: \"Not authenticated\"\n    });\n  });\n  \n  // Authentication check middleware\n  const requireAuth = (req: Request, res: Response, next: NextFunction) => {\n    if (req.session && req.session.user) {\n      return next();\n    }\n    \n    return res.status(401).json({\n      success: false,\n      message: \"Authentication required\"\n    });\n  };\n  \n  // CMS API routes\n  app.post('/admin/api/collections/:collection', requireAuth, async (req, res) => {\n    try {\n      const { collection } = req.params;\n      const data = req.body;\n      \n      // Ensure content directory exists\n      const contentDir = path.join(process.cwd(), 'public/content', collection);\n      try {\n        await fs.access(contentDir);\n      } catch (error) {\n        await fs.mkdir(contentDir, { recursive: true });\n      }\n      \n      // Save the content\n      const slug = data.slug || Date.now().toString();\n      const language = data.language || 'nl';\n      const content = matter.stringify(data.content || '', data);\n      \n      await fs.writeFile(\n        path.join(contentDir, `${slug}.${language}.md`),\n        content\n      );\n      \n      res.status(201).json({\n        success: true,\n        message: `${collection} item created`,\n        data: { slug, language }\n      });\n    } catch (error) {\n      console.error(`Error saving ${req.params.collection}:`, error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to save content\"\n      });\n    }\n  });\n\n  // Webhook management endpoints\n  // Get all webhooks\n  app.get(\"/api/webhooks\", async (req, res) => {\n    try {\n      const webhooks = await storage.getAllWebhooks();\n      res.json({\n        success: true,\n        message: \"Webhooks retrieved successfully\",\n        data: webhooks\n      });\n    } catch (error) {\n      console.error(\"Error fetching webhooks:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to retrieve webhooks\"\n      });\n    }\n  });\n\n  // Get webhook by ID\n  app.get(\"/api/webhooks/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({\n          success: false,\n          message: \"Invalid webhook ID\"\n        });\n      }\n\n      const webhook = await storage.getWebhook(id);\n      if (!webhook) {\n        return res.status(404).json({\n          success: false,\n          message: \"Webhook not found\"\n        });\n      }\n\n      res.json({\n        success: true,\n        message: \"Webhook retrieved successfully\",\n        data: webhook\n      });\n    } catch (error) {\n      console.error(\"Error fetching webhook:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to retrieve webhook\"\n      });\n    }\n  });\n\n  // Create webhook\n  app.post(\"/api/webhooks\", async (req, res) => {\n    try {\n      const webhookData = {\n        name: req.body.name,\n        url: req.body.url,\n        eventType: req.body.event_type, // Convert from request field to schema field\n        secretToken: req.body.secret_token || null,\n        isActive: req.body.is_active === \"true\" || req.body.is_active === true\n      };\n\n      const webhook = await storage.createWebhook(webhookData);\n      res.status(201).json({\n        success: true,\n        message: \"Webhook created successfully\",\n        data: webhook\n      });\n    } catch (error) {\n      console.error(\"Error creating webhook:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to create webhook\"\n      });\n    }\n  });\n\n  // Update webhook\n  app.put(\"/api/webhooks/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({\n          success: false,\n          message: \"Invalid webhook ID\"\n        });\n      }\n\n      const webhookData = {\n        name: req.body.name,\n        url: req.body.url,\n        eventType: req.body.event_type, // Convert from request field to schema field\n        secretToken: req.body.secret_token || null,\n        isActive: req.body.is_active === \"true\" || req.body.is_active === true\n      };\n\n      const webhook = await storage.updateWebhook(id, webhookData);\n      res.json({\n        success: true,\n        message: \"Webhook updated successfully\",\n        data: webhook\n      });\n    } catch (error) {\n      console.error(\"Error updating webhook:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to update webhook\"\n      });\n    }\n  });\n\n  // Delete webhook\n  app.delete(\"/api/webhooks/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({\n          success: false,\n          message: \"Invalid webhook ID\"\n        });\n      }\n\n      await storage.deleteWebhook(id);\n      res.json({\n        success: true,\n        message: \"Webhook deleted successfully\"\n      });\n    } catch (error) {\n      console.error(\"Error deleting webhook:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to delete webhook\"\n      });\n    }\n  });\n\n  // API Token endpoints\n  // Get all API tokens\n  app.get(\"/api/tokens\", requireAuth, async (req, res) => {\n    try {\n      if (!req.session.user) {\n        return res.status(401).json({\n          success: false,\n          message: \"Authentication required\"\n        });\n      }\n      \n      // In a real app, we would use the user's ID from the session\n      // For now, use a placeholder user ID\n      const userId = 1;\n      \n      const tokens = await storage.getAllApiTokens(userId);\n      res.json({\n        success: true,\n        message: \"API tokens retrieved successfully\",\n        data: tokens\n      });\n    } catch (error) {\n      console.error(\"Error fetching API tokens:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to retrieve API tokens\"\n      });\n    }\n  });\n\n  // Create API token\n  app.post(\"/api/tokens\", requireAuth, async (req, res) => {\n    try {\n      if (!req.session.user) {\n        return res.status(401).json({\n          success: false,\n          message: \"Authentication required\"\n        });\n      }\n      \n      // In a real app, we would use the user's ID from the session\n      // For now, use a placeholder user ID\n      const userId = 1;\n      \n      const tokenValue = generateTokenValue();\n      const tokenData = {\n        userId: userId,\n        name: req.body.name,\n        token: tokenValue,\n        scopes: req.body.scopes || [\"read\"],\n        expiresAt: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000) // 1 year\n      };\n\n      const token = await storage.createApiToken(tokenData);\n      res.status(201).json({\n        success: true,\n        message: \"API token created successfully\",\n        data: {\n          ...token,\n          plainToken: tokenValue // Only send the token value once!\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating API token:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to create API token\"\n      });\n    }\n  });\n\n  // Delete API token\n  app.delete(\"/api/tokens/:id\", requireAuth, async (req, res) => {\n    try {\n      if (!req.session.user) {\n        return res.status(401).json({\n          success: false,\n          message: \"Authentication required\"\n        });\n      }\n      \n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({\n          success: false,\n          message: \"Invalid token ID\"\n        });\n      }\n\n      await storage.deleteApiToken(id);\n      res.json({\n        success: true,\n        message: \"API token deleted successfully\"\n      });\n    } catch (error) {\n      console.error(\"Error deleting API token:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to delete API token\"\n      });\n    }\n  });\n\n  // Helper function to generate a random token value\n  function generateTokenValue() {\n    return 'tk_' + [...Array(32)]\n      .map(() => Math.floor(Math.random() * 16).toString(16))\n      .join('');\n  }\n\n  // Cookie consent tracking endpoints\n  app.post('/api/cookie-consent', async (req: Request, res: Response) => {\n    try {\n      const consentData = {\n        ...req.body,\n        ipAddress: req.ip || req.connection.remoteAddress,\n        userAgent: req.get('User-Agent'),\n        consentGivenAt: new Date()\n      };\n\n      const consent = await storage.createCookieConsent(consentData);\n      \n      // Track analytics event\n      await storage.createCookieAnalytics({\n        sessionId: consentData.sessionId,\n        eventType: 'consent_given',\n        eventData: {\n          analytics: consentData.analytics,\n          marketing: consentData.marketing,\n          preferences: consentData.preferences\n        },\n        timestamp: new Date(),\n        pageUrl: consentData.pageUrl,\n        userAgent: consentData.userAgent\n      });\n\n      res.json({ success: true, data: consent });\n    } catch (error) {\n      console.error('Cookie consent error:', error);\n      res.status(500).json({ error: 'Failed to save cookie consent' });\n    }\n  });\n\n  app.post('/api/cookie-analytics', async (req: Request, res: Response) => {\n    try {\n      const analyticsData = {\n        ...req.body,\n        timestamp: new Date(),\n        userAgent: req.get('User-Agent')\n      };\n\n      const analytics = await storage.createCookieAnalytics(analyticsData);\n      res.json({ success: true, data: analytics });\n    } catch (error) {\n      console.error('Cookie analytics error:', error);\n      res.status(500).json({ error: 'Failed to save cookie analytics' });\n    }\n  });\n\n  // Admin endpoints for cookie tracking dashboard\n  app.get('/api/admin/cookie-stats', async (req: Request, res: Response) => {\n    try {\n      const { startDate, endDate } = req.query;\n      \n      const start = startDate ? new Date(startDate as string) : undefined;\n      const end = endDate ? new Date(endDate as string) : undefined;\n      \n      const stats = await storage.getCookieConsentStats(start, end);\n      const analyticsStats = await storage.getCookieAnalyticsStats(start, end);\n      \n      res.json({\n        success: true,\n        data: {\n          consent: stats,\n          analytics: analyticsStats\n        }\n      });\n    } catch (error) {\n      console.error('Cookie stats error:', error);\n      res.status(500).json({ error: 'Failed to get cookie statistics' });\n    }\n  });\n\n  // GDPR request endpoints\n  app.post('/api/gdpr-request', async (req: Request, res: Response) => {\n    try {\n      const requestData = {\n        ...req.body,\n        submittedAt: new Date()\n      };\n\n      const gdprRequest = await storage.createGdprRequest(requestData);\n      res.json({ success: true, data: gdprRequest });\n    } catch (error) {\n      console.error('GDPR request error:', error);\n      res.status(500).json({ error: 'Failed to submit GDPR request' });\n    }\n  });\n\n  app.get('/api/admin/gdpr-requests', async (req: Request, res: Response) => {\n    try {\n      const requests = await storage.getAllGdprRequests();\n      res.json({ success: true, data: requests });\n    } catch (error) {\n      console.error('Get GDPR requests error:', error);\n      res.status(500).json({ error: 'Failed to get GDPR requests' });\n    }\n  });\n\n  // Test email endpoint\n  app.post(\"/api/test-email\", async (req, res) => {\n    try {\n      await sendContactEmail({\n        name: \"Test User\",\n        email: \"dckessler95@gmail.com\",\n        company: \"Test Company\",\n        projectType: \"Web Development\",\n        message: \"Dit is een test e-mail om de Strato mailserver configuratie te verifiëren.\"\n      });\n      \n      res.json({\n        success: true,\n        message: \"Test email sent successfully to info@digimaatwerk.nl\"\n      });\n    } catch (error) {\n      console.error('Test email failed:', error);\n      res.status(500).json({\n        success: false,\n        message: \"Failed to send test email\",\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n    }\n  });\n\n  // Verify email configuration on startup\n  verifyEmailConfig().then(isWorking => {\n    if (isWorking) {\n      console.log('✅ Email server configuration verified successfully');\n    } else {\n      console.log('❌ Email server configuration failed - check EMAIL_PASSWORD environment variable');\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":63613},"server/storage.ts":{"content":"import { \n  users, type User, type InsertUser,\n  contactSubmissions, type ContactSubmission, type InsertContactSubmission,\n  chatMessages, type ChatMessage, type InsertChatMessage,\n  projectEstimates, type ProjectEstimate, type InsertProjectEstimate,\n  webhooks, type Webhook, type InsertWebhook,\n  webhookLogs, type WebhookLog, type InsertWebhookLog,\n  apiTokens, type ApiToken, type InsertApiToken,\n  cookieConsents, type CookieConsent, type InsertCookieConsent,\n  cookieAnalytics, type CookieAnalytics, type InsertCookieAnalytics,\n  gdprRequests, type GdprRequest, type InsertGdprRequest\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc, and } from \"drizzle-orm\";\n\n// Expanded interface to support all tables\nexport interface IStorage {\n  // User operations\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Contact submission operations\n  getContactSubmission(id: number): Promise<ContactSubmission | undefined>;\n  createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission>;\n  getAllContactSubmissions(): Promise<ContactSubmission[]>;\n  markContactSubmissionAsProcessed(id: number): Promise<void>;\n  \n  // Chat message operations\n  getChatMessage(id: number): Promise<ChatMessage | undefined>;\n  createChatMessage(message: InsertChatMessage): Promise<ChatMessage>;\n  getChatMessageHistory(limit?: number): Promise<ChatMessage[]>;\n  \n  // Project estimate operations\n  getProjectEstimate(id: number): Promise<ProjectEstimate | undefined>;\n  createProjectEstimate(estimate: InsertProjectEstimate): Promise<ProjectEstimate>;\n  getAllProjectEstimates(): Promise<ProjectEstimate[]>;\n  \n  // Webhook operations\n  getWebhook(id: number): Promise<Webhook | undefined>;\n  createWebhook(webhook: InsertWebhook): Promise<Webhook>;\n  updateWebhook(id: number, webhook: Partial<InsertWebhook>): Promise<Webhook>;\n  deleteWebhook(id: number): Promise<void>;\n  getAllWebhooks(): Promise<Webhook[]>;\n  getWebhooksByEventType(eventType: string): Promise<Webhook[]>;\n  \n  // Webhook log operations\n  createWebhookLog(log: InsertWebhookLog): Promise<WebhookLog>;\n  getWebhookLogs(webhookId: number, limit?: number): Promise<WebhookLog[]>;\n  \n  // API Token operations\n  getApiToken(id: number): Promise<ApiToken | undefined>;\n  getApiTokenByValue(token: string): Promise<ApiToken | undefined>;\n  createApiToken(token: InsertApiToken): Promise<ApiToken>;\n  deleteApiToken(id: number): Promise<void>;\n  getAllApiTokens(userId: number): Promise<ApiToken[]>;\n  updateApiTokenLastUsed(id: number): Promise<void>;\n  \n  // Cookie consent operations\n  createCookieConsent(consent: InsertCookieConsent): Promise<CookieConsent>;\n  updateCookieConsent(sessionId: string, consent: Partial<InsertCookieConsent>): Promise<CookieConsent>;\n  getCookieConsentBySession(sessionId: string): Promise<CookieConsent | undefined>;\n  getCookieConsentStats(startDate?: Date, endDate?: Date): Promise<any>;\n  \n  // Cookie analytics operations\n  createCookieAnalytics(analytics: InsertCookieAnalytics): Promise<CookieAnalytics>;\n  getCookieAnalyticsBySession(sessionId: string): Promise<CookieAnalytics[]>;\n  getCookieAnalyticsStats(startDate?: Date, endDate?: Date): Promise<any>;\n  \n  // GDPR request operations\n  createGdprRequest(request: InsertGdprRequest): Promise<GdprRequest>;\n  getGdprRequest(id: number): Promise<GdprRequest | undefined>;\n  getAllGdprRequests(): Promise<GdprRequest[]>;\n  updateGdprRequestStatus(id: number, status: string, processedBy?: number, responseNotes?: string): Promise<GdprRequest>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: number): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(insertUser)\n      .returning();\n    return user;\n  }\n  \n  // Contact submission operations\n  async getContactSubmission(id: number): Promise<ContactSubmission | undefined> {\n    const [submission] = await db.select().from(contactSubmissions).where(eq(contactSubmissions.id, id));\n    return submission;\n  }\n  \n  async createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission> {\n    const [contactSubmission] = await db\n      .insert(contactSubmissions)\n      .values(submission)\n      .returning();\n    return contactSubmission;\n  }\n  \n  async getAllContactSubmissions(): Promise<ContactSubmission[]> {\n    return await db.select().from(contactSubmissions).orderBy(contactSubmissions.submittedAt);\n  }\n  \n  async markContactSubmissionAsProcessed(id: number): Promise<void> {\n    await db\n      .update(contactSubmissions)\n      .set({ isProcessed: true })\n      .where(eq(contactSubmissions.id, id));\n  }\n  \n  // Chat message operations\n  async getChatMessage(id: number): Promise<ChatMessage | undefined> {\n    const [message] = await db.select().from(chatMessages).where(eq(chatMessages.id, id));\n    return message;\n  }\n  \n  async createChatMessage(message: InsertChatMessage): Promise<ChatMessage> {\n    const [chatMessage] = await db\n      .insert(chatMessages)\n      .values(message)\n      .returning();\n    return chatMessage;\n  }\n  \n  async getChatMessageHistory(limit: number = 50): Promise<ChatMessage[]> {\n    return await db\n      .select()\n      .from(chatMessages)\n      .orderBy(chatMessages.timestamp)\n      .limit(limit);\n  }\n  \n  // Project estimate operations\n  async getProjectEstimate(id: number): Promise<ProjectEstimate | undefined> {\n    const [estimate] = await db.select().from(projectEstimates).where(eq(projectEstimates.id, id));\n    return estimate;\n  }\n  \n  async createProjectEstimate(estimate: InsertProjectEstimate): Promise<ProjectEstimate> {\n    const [projectEstimate] = await db\n      .insert(projectEstimates)\n      .values(estimate)\n      .returning();\n    return projectEstimate;\n  }\n  \n  async getAllProjectEstimates(): Promise<ProjectEstimate[]> {\n    return await db.select().from(projectEstimates).orderBy(projectEstimates.createdAt);\n  }\n  \n  // Webhook operations\n  async getWebhook(id: number): Promise<Webhook | undefined> {\n    const [webhook] = await db.select().from(webhooks).where(eq(webhooks.id, id));\n    return webhook;\n  }\n  \n  async createWebhook(webhook: InsertWebhook): Promise<Webhook> {\n    const [newWebhook] = await db\n      .insert(webhooks)\n      .values({\n        ...webhook,\n        createdAt: new Date()\n      })\n      .returning();\n    return newWebhook;\n  }\n  \n  async updateWebhook(id: number, webhook: Partial<InsertWebhook & { lastTriggeredAt?: Date }>): Promise<Webhook> {\n    const [updatedWebhook] = await db\n      .update(webhooks)\n      .set(webhook)\n      .where(eq(webhooks.id, id))\n      .returning();\n    return updatedWebhook;\n  }\n  \n  async deleteWebhook(id: number): Promise<void> {\n    // First delete related webhook logs\n    await db.delete(webhookLogs).where(eq(webhookLogs.webhookId, id));\n    // Then delete the webhook\n    await db.delete(webhooks).where(eq(webhooks.id, id));\n  }\n  \n  async getAllWebhooks(): Promise<Webhook[]> {\n    return await db\n      .select()\n      .from(webhooks)\n      .orderBy(webhooks.createdAt);\n  }\n  \n  async getWebhooksByEventType(eventType: string): Promise<Webhook[]> {\n    return await db\n      .select()\n      .from(webhooks)\n      .where(and(\n        eq(webhooks.eventType, eventType),\n        eq(webhooks.isActive, true)\n      ));\n  }\n  \n  // Webhook log operations\n  async createWebhookLog(log: InsertWebhookLog): Promise<WebhookLog> {\n    const [webhookLog] = await db\n      .insert(webhookLogs)\n      .values({\n        ...log,\n        triggeredAt: new Date()\n      })\n      .returning();\n    return webhookLog;\n  }\n  \n  async getWebhookLogs(webhookId: number, limit: number = 100): Promise<WebhookLog[]> {\n    return await db\n      .select()\n      .from(webhookLogs)\n      .where(eq(webhookLogs.webhookId, webhookId))\n      .orderBy(desc(webhookLogs.triggeredAt))\n      .limit(limit);\n  }\n  \n  // API Token operations\n  async getApiToken(id: number): Promise<ApiToken | undefined> {\n    const [token] = await db.select().from(apiTokens).where(eq(apiTokens.id, id));\n    return token;\n  }\n  \n  async getApiTokenByValue(token: string): Promise<ApiToken | undefined> {\n    const [apiToken] = await db.select().from(apiTokens).where(eq(apiTokens.token, token));\n    return apiToken;\n  }\n  \n  async createApiToken(token: InsertApiToken): Promise<ApiToken> {\n    const [newToken] = await db\n      .insert(apiTokens)\n      .values({\n        ...token,\n        createdAt: new Date()\n      })\n      .returning();\n    return newToken;\n  }\n  \n  async deleteApiToken(id: number): Promise<void> {\n    await db.delete(apiTokens).where(eq(apiTokens.id, id));\n  }\n  \n  async getAllApiTokens(userId: number): Promise<ApiToken[]> {\n    return await db\n      .select()\n      .from(apiTokens)\n      .where(eq(apiTokens.userId, userId))\n      .orderBy(apiTokens.createdAt);\n  }\n  \n  async updateApiTokenLastUsed(id: number): Promise<void> {\n    await db\n      .update(apiTokens)\n      .set({ lastUsedAt: new Date() })\n      .where(eq(apiTokens.id, id));\n  }\n\n  // Cookie consent operations\n  async createCookieConsent(consent: InsertCookieConsent): Promise<CookieConsent> {\n    const [cookieConsent] = await db\n      .insert(cookieConsents)\n      .values(consent)\n      .returning();\n    return cookieConsent;\n  }\n\n  async updateCookieConsent(sessionId: string, consent: Partial<InsertCookieConsent>): Promise<CookieConsent> {\n    const [updated] = await db\n      .update(cookieConsents)\n      .set({ ...consent, consentUpdatedAt: new Date() })\n      .where(eq(cookieConsents.sessionId, sessionId))\n      .returning();\n    return updated;\n  }\n\n  async getCookieConsentBySession(sessionId: string): Promise<CookieConsent | undefined> {\n    const [consent] = await db\n      .select()\n      .from(cookieConsents)\n      .where(eq(cookieConsents.sessionId, sessionId))\n      .orderBy(desc(cookieConsents.consentGivenAt))\n      .limit(1);\n    return consent || undefined;\n  }\n\n  async getCookieConsentStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const consents = await db.select().from(cookieConsents);\n    \n    const total = consents.length;\n    const analytics = consents.filter(c => c.analytics).length;\n    const marketing = consents.filter(c => c.marketing).length;\n    const preferences = consents.filter(c => c.preferences).length;\n    \n    return {\n      total,\n      analytics: { count: analytics, percentage: total > 0 ? (analytics / total) * 100 : 0 },\n      marketing: { count: marketing, percentage: total > 0 ? (marketing / total) * 100 : 0 },\n      preferences: { count: preferences, percentage: total > 0 ? (preferences / total) * 100 : 0 },\n      dailyStats: this.groupConsentsByDate(consents)\n    };\n  }\n\n  private groupConsentsByDate(consents: CookieConsent[]) {\n    const grouped = consents.reduce((acc, consent) => {\n      const date = consent.consentGivenAt.toISOString().split('T')[0];\n      if (!acc[date]) {\n        acc[date] = { total: 0, analytics: 0, marketing: 0, preferences: 0 };\n      }\n      acc[date].total++;\n      if (consent.analytics) acc[date].analytics++;\n      if (consent.marketing) acc[date].marketing++;\n      if (consent.preferences) acc[date].preferences++;\n      return acc;\n    }, {} as Record<string, any>);\n    \n    return Object.entries(grouped).map(([date, stats]) => ({ date, ...stats }));\n  }\n\n  // Cookie analytics operations\n  async createCookieAnalytics(analytics: InsertCookieAnalytics): Promise<CookieAnalytics> {\n    const [cookieAnalyticsResult] = await db\n      .insert(cookieAnalytics)\n      .values(analytics)\n      .returning();\n    return cookieAnalyticsResult;\n  }\n\n  async getCookieAnalyticsBySession(sessionId: string): Promise<CookieAnalytics[]> {\n    return await db\n      .select()\n      .from(cookieAnalytics)\n      .where(eq(cookieAnalytics.sessionId, sessionId))\n      .orderBy(desc(cookieAnalytics.timestamp));\n  }\n\n  async getCookieAnalyticsStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const events = await db.select().from(cookieAnalytics);\n    \n    const eventCounts = events.reduce((acc, event) => {\n      acc[event.eventType] = (acc[event.eventType] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n    \n    return {\n      totalEvents: events.length,\n      eventTypes: eventCounts,\n      dailyEvents: this.groupEventsByDate(events)\n    };\n  }\n\n  private groupEventsByDate(events: CookieAnalytics[]) {\n    const grouped = events.reduce((acc, event) => {\n      const date = event.timestamp.toISOString().split('T')[0];\n      if (!acc[date]) {\n        acc[date] = {};\n      }\n      acc[date][event.eventType] = (acc[date][event.eventType] || 0) + 1;\n      return acc;\n    }, {} as Record<string, any>);\n    \n    return Object.entries(grouped).map(([date, events]) => ({ date, ...events }));\n  }\n\n  // GDPR request operations\n  async createGdprRequest(request: InsertGdprRequest): Promise<GdprRequest> {\n    const [gdprRequest] = await db\n      .insert(gdprRequests)\n      .values(request)\n      .returning();\n    return gdprRequest;\n  }\n\n  async getGdprRequest(id: number): Promise<GdprRequest | undefined> {\n    const [request] = await db\n      .select()\n      .from(gdprRequests)\n      .where(eq(gdprRequests.id, id));\n    return request || undefined;\n  }\n\n  async getAllGdprRequests(): Promise<GdprRequest[]> {\n    return await db\n      .select()\n      .from(gdprRequests)\n      .orderBy(desc(gdprRequests.submittedAt));\n  }\n\n  async updateGdprRequestStatus(id: number, status: string, processedBy?: number, responseNotes?: string): Promise<GdprRequest> {\n    const updateData: any = {\n      status,\n      processedAt: new Date()\n    };\n    \n    if (processedBy) updateData.processedBy = processedBy;\n    if (responseNotes) updateData.responseNotes = responseNotes;\n    \n    const [updated] = await db\n      .update(gdprRequests)\n      .set(updateData)\n      .where(eq(gdprRequests.id, id))\n      .returning();\n    return updated;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":14432},"server/types.ts":{"content":"// Add Express session types\nimport 'express-session';\n\ndeclare module 'express-session' {\n  interface SessionData {\n    user?: {\n      email: string;\n      isAdmin: boolean;\n    };\n  }\n}","size_bytes":187},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path, { dirname } from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        __dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(__dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2374},"server/webhooks.ts":{"content":"import { Request, Response, Express } from 'express';\nimport { storage } from './storage';\nimport { insertContactSubmissionSchema, insertChatMessageSchema, insertProjectEstimateSchema } from '@shared/schema';\nimport { z } from 'zod';\nimport crypto from 'crypto';\n\n// Schema's voor webhook data die string datums converteert naar Date objecten\nconst webhookContactSchema = insertContactSubmissionSchema.extend({\n  submittedAt: z.string().transform(str => new Date(str)),\n});\n\nconst webhookChatSchema = insertChatMessageSchema.extend({\n  timestamp: z.string().transform(str => new Date(str)),\n});\n\nconst webhookEstimateSchema = insertProjectEstimateSchema.extend({\n  createdAt: z.string().transform(str => new Date(str)),\n});\n\nconst webhookSecret = process.env.WEBHOOK_SECRET_TOKEN;\n\n// Beveiligingsmiddleware voor webhooks\nconst validateWebhookRequest = (req: Request, res: Response, next: Function) => {\n  const token = req.headers['x-webhook-token'] as string;\n  \n  if (!webhookSecret) {\n    console.error('WEBHOOK_SECRET_TOKEN environment variable not set');\n    return res.status(500).json({ \n      success: false, \n      message: 'Webhook secret not configured on server' \n    });\n  }\n  \n  if (!token || token !== webhookSecret) {\n    return res.status(401).json({ \n      success: false, \n      message: 'Unauthorized webhook request' \n    });\n  }\n  \n  next();\n};\n\n// Dynamic webhook dispatcher function\nasync function dispatchWebhooks(eventType: string, data: any) {\n  try {\n    const webhooks = await storage.getWebhooksByEventType(eventType);\n    const activeWebhooks = webhooks.filter(w => w.isActive);\n    \n    if (activeWebhooks.length === 0) {\n      console.log(`[Webhook] No active webhooks found for event: ${eventType}`);\n      return;\n    }\n    \n    console.log(`[Webhook] Dispatching to ${activeWebhooks.length} webhooks for event: ${eventType}`);\n    \n    // Send to all active webhooks for this event type\n    const promises = activeWebhooks.map(async (webhook) => {\n      const startTime = Date.now();\n      \n      try {\n        const headers: Record<string, string> = {\n          'Content-Type': 'application/json',\n          'User-Agent': 'Digimaatwerk-Webhook/1.0'\n        };\n        \n        if (webhook.secretToken) {\n          headers['X-Webhook-Token'] = webhook.secretToken;\n        }\n        \n        const payload = {\n          eventType,\n          timestamp: new Date().toISOString(),\n          data\n        };\n        \n        const response = await fetch(webhook.url, {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify(payload)\n        });\n        \n        const duration = Date.now() - startTime;\n        const responseText = await response.text();\n        \n        // Log successful webhook\n        await storage.createWebhookLog({\n          webhookId: webhook.id,\n          eventType,\n          payload,\n          responseStatus: response.status,\n          responseBody: responseText.substring(0, 1000),\n          duration\n        });\n        \n        // Update last triggered timestamp - direct database update\n        await storage.updateWebhook(webhook.id, { \n          lastTriggeredAt: new Date() \n        } as any);\n        \n        console.log(`[Webhook] Success: ${webhook.name} (${response.status}) in ${duration}ms`);\n        \n      } catch (error: any) {\n        const duration = Date.now() - startTime;\n        \n        // Log failed webhook\n        await storage.createWebhookLog({\n          webhookId: webhook.id,\n          eventType,\n          payload: { eventType, data },\n          error: error.message,\n          duration\n        });\n        \n        console.error(`[Webhook] Failed: ${webhook.name} - ${error.message}`);\n      }\n    });\n    \n    await Promise.allSettled(promises);\n    \n  } catch (error) {\n    console.error(`[Webhook] Dispatcher error for event ${eventType}:`, error);\n  }\n}\n\nexport const setupWebhookRoutes = (app: Express) => {\n  // Legacy endpoint for backwards compatibility\n  app.post('/api/webhooks/contact-form', validateWebhookRequest, async (req: Request, res: Response) => {\n    try {\n      const validatedData = webhookContactSchema.parse(req.body);\n      const submission = await storage.createContactSubmission(validatedData);\n      \n      // Dispatch to dynamic webhooks\n      await dispatchWebhooks('contact_form', submission);\n      \n      res.status(200).json({ \n        success: true, \n        data: submission,\n        message: 'Contact submission successfully processed' \n      });\n      \n      console.log(`[Webhook] Contact submission processed: ${submission.id}`);\n    } catch (error: any) {\n      console.error('[Webhook Error] Contact form submission:', error);\n      res.status(400).json({ \n        success: false, \n        message: error.message || 'Invalid submission data' \n      });\n    }\n  });\n  \n  app.post('/api/webhooks/chat-message', validateWebhookRequest, async (req: Request, res: Response) => {\n    try {\n      const validatedData = webhookChatSchema.parse(req.body);\n      const message = await storage.createChatMessage(validatedData);\n      \n      // Dispatch to dynamic webhooks\n      await dispatchWebhooks('chat_message', message);\n      \n      res.status(200).json({ \n        success: true, \n        data: message,\n        message: 'Chat message successfully processed' \n      });\n      \n      console.log(`[Webhook] Chat message processed: ${message.id}`);\n    } catch (error: any) {\n      console.error('[Webhook Error] Chat message:', error);\n      res.status(400).json({ \n        success: false, \n        message: error.message || 'Invalid message data' \n      });\n    }\n  });\n  \n  app.post('/api/webhooks/project-estimate', validateWebhookRequest, async (req: Request, res: Response) => {\n    try {\n      const validatedData = webhookEstimateSchema.parse(req.body);\n      const estimate = await storage.createProjectEstimate(validatedData);\n      \n      // Dispatch to dynamic webhooks\n      await dispatchWebhooks('project_estimate', estimate);\n      \n      res.status(200).json({ \n        success: true, \n        data: estimate,\n        message: 'Project estimate successfully processed' \n      });\n      \n      console.log(`[Webhook] Project estimate processed: ${estimate.id}`);\n    } catch (error: any) {\n      console.error('[Webhook Error] Project estimate:', error);\n      res.status(400).json({ \n        success: false, \n        message: error.message || 'Invalid estimate data' \n      });\n    }\n  });\n\n  // Webhook voor content synchronisatie (voor Make/n8n)\n  app.post('/api/webhooks/content-sync', validateWebhookRequest, async (req: Request, res: Response) => {\n    try {\n      const { contentType, action, data } = req.body;\n      \n      if (!contentType || !action || !data) {\n        return res.status(400).json({\n          success: false,\n          message: 'Missing required fields: contentType, action, data'\n        });\n      }\n      \n      // Hier zou je code kunnen toevoegen om content te synchroniseren\n      // bijv. het aanmaken/bijwerken van content bestanden\n      \n      console.log(`[Webhook] Content sync: ${contentType} - ${action}`);\n      \n      // Voorbeeld van een succes respons\n      res.status(200).json({\n        success: true,\n        message: `Content ${action} request processed for ${contentType}`\n      });\n    } catch (error: any) {\n      console.error('[Webhook Error] Content sync:', error);\n      res.status(500).json({\n        success: false,\n        message: error.message || 'Error processing content sync webhook'\n      });\n    }\n  });\n  \n  // Helper route om webhook configuratie te testen\n  app.get('/api/webhooks/test', validateWebhookRequest, (req: Request, res: Response) => {\n    res.status(200).json({\n      success: true,\n      message: 'Webhook authentication successful',\n      timestamp: new Date().toISOString()\n    });\n  });\n};","size_bytes":7851},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean, timestamp, jsonb, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Users table (keep existing setup)\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\n// Contact form submissions\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  company: text(\"company\"),\n  projectType: text(\"project_type\"),\n  message: text(\"message\").notNull(),\n  submittedAt: timestamp(\"submitted_at\").notNull(),\n  isProcessed: boolean(\"is_processed\").default(false),\n});\n\nexport const insertContactSubmissionSchema = createInsertSchema(contactSubmissions).pick({\n  name: true,\n  email: true,\n  company: true,\n  projectType: true,\n  message: true,\n  submittedAt: true,\n});\n\n// Chat messages\nexport const chatMessages = pgTable(\"chat_messages\", {\n  id: serial(\"id\").primaryKey(),\n  message: text(\"message\").notNull(),\n  sender: text(\"sender\").notNull(), // 'user' or 'bot'\n  timestamp: timestamp(\"timestamp\").notNull(),\n});\n\nexport const insertChatMessageSchema = createInsertSchema(chatMessages).pick({\n  message: true,\n  sender: true,\n  timestamp: true,\n});\n\n// Project estimates\nexport const projectEstimates = pgTable(\"project_estimates\", {\n  id: serial(\"id\").primaryKey(),\n  projectType: text(\"project_type\").notNull(),\n  scale: text(\"scale\").notNull(),\n  features: jsonb(\"features\").notNull(), // Array of feature IDs\n  timelinePriority: integer(\"timeline_priority\").notNull(),\n  estimatedBudgetMin: integer(\"estimated_budget_min\").notNull(),\n  estimatedBudgetMax: integer(\"estimated_budget_max\").notNull(),\n  estimatedTimelineMin: integer(\"estimated_timeline_min\").notNull(),\n  estimatedTimelineMax: integer(\"estimated_timeline_max\").notNull(),\n  createdAt: timestamp(\"created_at\").notNull(),\n});\n\nexport const insertProjectEstimateSchema = createInsertSchema(projectEstimates).pick({\n  projectType: true,\n  scale: true,\n  features: true,\n  timelinePriority: true,\n  estimatedBudgetMin: true,\n  estimatedBudgetMax: true,\n  estimatedTimelineMin: true,\n  estimatedTimelineMax: true,\n  createdAt: true,\n});\n\n// Type definitions\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport type InsertContactSubmission = z.infer<typeof insertContactSubmissionSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\n\nexport type InsertChatMessage = z.infer<typeof insertChatMessageSchema>;\nexport type ChatMessage = typeof chatMessages.$inferSelect;\n\nexport type InsertProjectEstimate = z.infer<typeof insertProjectEstimateSchema>;\nexport type ProjectEstimate = typeof projectEstimates.$inferSelect;\n\n// Webhooks table\nexport const webhooks = pgTable(\"webhooks\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  url: text(\"url\").notNull(),\n  eventType: text(\"event_type\").notNull(), // blog.created, contact.submitted, etc.\n  secretToken: text(\"secret_token\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  lastTriggeredAt: timestamp(\"last_triggered_at\"),\n  failureCount: integer(\"failure_count\").default(0),\n  headers: jsonb(\"headers\").default({}), // Additional headers to send\n});\n\nexport const insertWebhookSchema = createInsertSchema(webhooks).pick({\n  name: true,\n  url: true,\n  eventType: true,\n  secretToken: true,\n  isActive: true,\n});\n\nexport const updateWebhookSchema = createInsertSchema(webhooks).pick({\n  name: true,\n  url: true,\n  eventType: true,\n  secretToken: true,\n  isActive: true,\n  lastTriggeredAt: true,\n}).partial();\n\n// API Tokens table\nexport const apiTokens = pgTable(\"api_tokens\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  token: varchar(\"token\", { length: 64 }).notNull().unique(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  expiresAt: timestamp(\"expires_at\"),\n  lastUsedAt: timestamp(\"last_used_at\"),\n  userId: integer(\"user_id\").notNull().references(() => users.id), // Which user created this token\n  scopes: jsonb(\"scopes\").notNull().default(['read']), // Array of permission scopes\n});\n\nexport const insertApiTokenSchema = createInsertSchema(apiTokens).pick({\n  name: true,\n  token: true,\n  expiresAt: true,\n  userId: true,\n  scopes: true,\n});\n\n// Webhook logs to track delivery history\nexport const webhookLogs = pgTable(\"webhook_logs\", {\n  id: serial(\"id\").primaryKey(),\n  webhookId: integer(\"webhook_id\").notNull().references(() => webhooks.id),\n  eventType: text(\"event_type\").notNull(),\n  payload: jsonb(\"payload\").notNull(),\n  responseStatus: integer(\"response_status\"),\n  responseBody: text(\"response_body\"),\n  error: text(\"error\"),\n  duration: integer(\"duration\"), // in milliseconds\n  triggeredAt: timestamp(\"triggered_at\").notNull().defaultNow(),\n});\n\nexport const insertWebhookLogSchema = createInsertSchema(webhookLogs).pick({\n  webhookId: true,\n  eventType: true,\n  payload: true,\n  responseStatus: true,\n  responseBody: true,\n  error: true,\n  duration: true,\n});\n\nexport type InsertWebhook = z.infer<typeof insertWebhookSchema>;\nexport type Webhook = typeof webhooks.$inferSelect;\n\nexport type InsertApiToken = z.infer<typeof insertApiTokenSchema>;\nexport type ApiToken = typeof apiTokens.$inferSelect;\n\nexport type InsertWebhookLog = z.infer<typeof insertWebhookLogSchema>;\nexport type WebhookLog = typeof webhookLogs.$inferSelect;\n\n// Cookie consent tracking\nexport const cookieConsents = pgTable(\"cookie_consents\", {\n  id: serial(\"id\").primaryKey(),\n  sessionId: text(\"session_id\").notNull(),\n  ipAddress: text(\"ip_address\"),\n  userAgent: text(\"user_agent\"),\n  necessary: boolean(\"necessary\").notNull().default(true),\n  analytics: boolean(\"analytics\").notNull().default(false),\n  marketing: boolean(\"marketing\").notNull().default(false),\n  preferences: boolean(\"preferences\").notNull().default(false),\n  consentGivenAt: timestamp(\"consent_given_at\").notNull(),\n  consentUpdatedAt: timestamp(\"consent_updated_at\"),\n  language: text(\"language\").default('nl'),\n  pageUrl: text(\"page_url\"),\n  referrer: text(\"referrer\"),\n});\n\nexport const insertCookieConsentSchema = createInsertSchema(cookieConsents).pick({\n  sessionId: true,\n  ipAddress: true,\n  userAgent: true,\n  necessary: true,\n  analytics: true,\n  marketing: true,\n  preferences: true,\n  consentGivenAt: true,\n  language: true,\n  pageUrl: true,\n  referrer: true,\n});\n\n// Cookie analytics events\nexport const cookieAnalytics = pgTable(\"cookie_analytics\", {\n  id: serial(\"id\").primaryKey(),\n  sessionId: text(\"session_id\").notNull(),\n  eventType: text(\"event_type\").notNull(), // 'banner_shown', 'settings_opened', 'consent_given', 'consent_updated'\n  eventData: jsonb(\"event_data\"), // Additional event details\n  timestamp: timestamp(\"timestamp\").notNull(),\n  pageUrl: text(\"page_url\"),\n  userAgent: text(\"user_agent\"),\n});\n\nexport const insertCookieAnalyticsSchema = createInsertSchema(cookieAnalytics).pick({\n  sessionId: true,\n  eventType: true,\n  eventData: true,\n  timestamp: true,\n  pageUrl: true,\n  userAgent: true,\n});\n\n// GDPR data requests\nexport const gdprRequests = pgTable(\"gdpr_requests\", {\n  id: serial(\"id\").primaryKey(),\n  requestType: text(\"request_type\").notNull(), // 'access', 'delete', 'portability', 'rectification'\n  email: text(\"email\").notNull(),\n  firstName: text(\"first_name\"),\n  lastName: text(\"last_name\"),\n  requestDetails: text(\"request_details\"),\n  status: text(\"status\").notNull().default('pending'), // 'pending', 'processing', 'completed', 'rejected'\n  submittedAt: timestamp(\"submitted_at\").notNull(),\n  processedAt: timestamp(\"processed_at\"),\n  processedBy: integer(\"processed_by\"), // References users.id\n  responseNotes: text(\"response_notes\"),\n  attachments: jsonb(\"attachments\"), // File paths or metadata\n});\n\nexport const insertGdprRequestSchema = createInsertSchema(gdprRequests).pick({\n  requestType: true,\n  email: true,\n  firstName: true,\n  lastName: true,\n  requestDetails: true,\n  submittedAt: true,\n});\n\nexport type InsertCookieConsent = z.infer<typeof insertCookieConsentSchema>;\nexport type CookieConsent = typeof cookieConsents.$inferSelect;\n\nexport type InsertCookieAnalytics = z.infer<typeof insertCookieAnalyticsSchema>;\nexport type CookieAnalytics = typeof cookieAnalytics.$inferSelect;\n\nexport type InsertGdprRequest = z.infer<typeof insertGdprRequestSchema>;\nexport type GdprRequest = typeof gdprRequests.$inferSelect;\n","size_bytes":8721},"client/src/App.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"wouter\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/Home\";\nimport Blogs from \"@/pages/Blogs\";\nimport Services from \"@/pages/Services\";\nimport ServiceCategory from \"@/pages/ServiceCategory\";\nimport CaseStudy from \"@/pages/CaseStudy\";\nimport Portfolio from \"@/pages/Portfolio\";\nimport PrivacyPolicy from \"@/pages/legal/PrivacyPolicy\";\nimport GooglePrivacyPolicy from \"@/pages/legal/GooglePrivacyPolicy\";\nimport TermsOfService from \"@/pages/legal/TermsOfService\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\n\nimport { N8nChatWidget } from \"@/components/N8nChatWidget\";\nimport { CookieConsent } from \"@/components/CookieConsent\";\nimport CodeAnimationLoader from \"@/components/CodeAnimationLoader\";\nimport ChatbotOpener from \"@/components/ChatbotOpener\";\nimport { LanguageProvider } from \"@/lib/languageContext\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/blogs\" component={Blogs} />\n      <Route path=\"/services\" component={Services} />\n      <Route path=\"/services/:category\" component={ServiceCategory} />\n      <Route path=\"/case-studies/:slug\" component={CaseStudy} />\n      <Route path=\"/portfolio\" component={Portfolio} />\n      <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n      <Route path=\"/google-privacy-policy\" component={GooglePrivacyPolicy} />\n      <Route path=\"/terms-of-service\" component={TermsOfService} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  // Check if user has previously seen the animation or opted to skip it\n  const [showLoader, setShowLoader] = useState(() => {\n    const hasSeenAnimation = localStorage.getItem('hasSeenAnimation');\n    return hasSeenAnimation !== 'true';\n  });\n  const [contentLoaded, setContentLoaded] = useState(!showLoader);\n  \n  // Handle animation completion\n  const handleLoaderComplete = () => {\n    // Save preference to skip animation in future visits\n    localStorage.setItem('hasSeenAnimation', 'true');\n    setShowLoader(false);\n    setContentLoaded(true);\n  };\n  \n  // Add a class to body to prevent scrolling during animation\n  useEffect(() => {\n    if (showLoader) {\n      document.body.classList.add('overflow-hidden');\n    } else {\n      document.body.classList.remove('overflow-hidden');\n    }\n    \n    return () => {\n      document.body.classList.remove('overflow-hidden');\n    };\n  }, [showLoader]);\n  \n  return (\n    <QueryClientProvider client={queryClient}>\n      <LanguageProvider>\n        {showLoader && <CodeAnimationLoader onComplete={handleLoaderComplete} />}\n        \n        <div className={`flex flex-col min-h-screen transition-opacity duration-500 ${contentLoaded ? 'opacity-100' : 'opacity-0'}`}>\n          <Header />\n          <main className=\"flex-grow pt-16\">\n            <Router />\n          </main>\n          <Footer />\n          <N8nChatWidget />\n          <CookieConsent />\n          <ChatbotOpener />\n        </div>\n        <Toaster />\n      </LanguageProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3321},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer utilities {\n  .line-clamp-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n  }\n  \n  .line-clamp-3 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3;\n  }\n  \n  .line-clamp-4 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;\n  }\n}\n\n@layer components {\n  .hero-section {\n    min-height: 80vh;\n  }\n  \n  /* Responsive height adjustments */\n  @media (max-width: 1024px) {\n    .hero-section {\n      min-height: 90vh;\n    }\n  }\n  \n  @media (max-width: 768px) {\n    .hero-section {\n      min-height: 100vh;\n    }\n  }\n  \n  /* Specific fix for problematic 1022px breakpoint */\n  @media (min-width: 1020px) and (max-width: 1025px) {\n    .hero-section {\n      min-height: 95vh;\n    }\n  }\n}\n\n/* Digimaatwerk Chat Widget Theme Matching */\n:root {\n  /* Digimaatwerk brand colors */\n  --chat--color-primary: #0f172a; /* Midnight blue */\n  --chat--color-primary-shade-50: #1e293b;\n  --chat--color-primary-shade-100: #334155;\n  --chat--color-secondary: #0891b2; /* Teal accent */\n  --chat--color-secondary-shade-50: #0e7490;\n  --chat--color-white: #ffffff;\n  --chat--color-light: #f8fafc;\n  --chat--color-light-shade-50: #f1f5f9;\n  --chat--color-light-shade-100: #e2e8f0;\n  --chat--color-medium: #64748b;\n  --chat--color-dark: #0f172a;\n  --chat--color-disabled: #94a3b8;\n  --chat--color-typing: #475569;\n\n  /* Widget styling to match website */\n  --chat--spacing: 1rem;\n  --chat--border-radius: 0.5rem;\n  --chat--transition-duration: 0.2s;\n  --chat--window--width: 400px;\n  --chat--window--height: 600px;\n\n  /* Header styling */\n  --chat--header--background: var(--chat--color-dark);\n  --chat--header--color: var(--chat--color-white);\n  --chat--header--padding: 1.5rem 1rem;\n  --chat--header--border-bottom: none;\n  --chat--heading--font-size: 1.125rem;\n  --chat--subtitle--font-size: 0.875rem;\n\n  /* Message styling - improved scaling */\n  --chat--message--font-size: 0.8rem;\n  --chat--message--padding: 0.75rem 1rem;\n  --chat--message--border-radius: 0.75rem;\n  --chat--message--line-height: 1.4;\n  --chat--message--bot--background: var(--chat--color-light);\n  --chat--message--bot--color: var(--chat--color-dark);\n  --chat--message--bot--border: 1px solid var(--chat--color-light-shade-100);\n  --chat--message--user--background: var(--chat--color-secondary);\n  --chat--message--user--color: var(--chat--color-white);\n  --chat--message--user--border: none;\n\n  /* Toggle button */\n  --chat--toggle--background: var(--chat--color-secondary);\n  --chat--toggle--hover--background: var(--chat--color-secondary-shade-50);\n  --chat--toggle--active--background: var(--chat--color-primary);\n  --chat--toggle--color: var(--chat--color-white);\n  --chat--toggle--size: 64px;\n\n  /* Input area */\n  --chat--textarea--height: 50px;\n}\n\n/* Digimaatwerk branded chat widget styling */\n.n8n-chat,\n#n8n-chat {\n  font-family: 'Inter', system-ui, -apple-system, sans-serif !important;\n  border: none !important;\n  box-shadow: 0 8px 32px rgba(15, 23, 42, 0.15) !important;\n  border-radius: 0.75rem !important;\n  overflow: hidden !important;\n}\n\n/* Header with logo - minimal styling */\n.n8n-chat [class*=\"header\"],\n.n8n-chat div[class*=\"header\"] {\n  display: flex !important;\n  align-items: center !important;\n  gap: 0.5rem !important;\n}\n\n.n8n-chat [class*=\"header\"]::before,\n.n8n-chat div[class*=\"header\"]::before {\n  content: '';\n  width: 32px;\n  height: 32px;\n  background-image: url('/digimaatwerkLOGO.png');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  flex-shrink: 0;\n}\n\n.n8n-chat h1,\n.n8n-chat [class*=\"title\"] {\n  font-weight: 600 !important;\n  font-size: 1.125rem !important;\n  color: #ffffff !important;\n  margin: 0 !important;\n  letter-spacing: -0.025em !important;\n}\n\n.n8n-chat p,\n.n8n-chat [class*=\"subtitle\"] {\n  font-size: 0.875rem !important;\n  color: rgba(255, 255, 255, 0.8) !important;\n  margin: 0.25rem 0 0 0 !important;\n  line-height: 1.4 !important;\n}\n\n/* Simple toggle button - no hover effects */\n.n8n-chat [class*=\"toggle\"] {\n  background: #0891b2 !important;\n  border: none !important;\n  transition: none !important;\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n.n8n-chat [class*=\"toggle\"]:hover {\n  background: #0891b2 !important;\n  transform: none !important;\n  box-shadow: none !important;\n  scale: 1 !important;\n}\n\n.n8n-chat button:hover {\n  transform: none !important;\n  scale: 1 !important;\n}\n\n/* Message styling - improved for longer responses */\n.n8n-chat [class*=\"message\"] {\n  font-family: 'Inter', system-ui, -apple-system, sans-serif !important;\n  font-size: 0.8rem !important;\n  line-height: 1.4 !important;\n  border-radius: 0.75rem !important;\n  margin-bottom: 0.75rem !important;\n  max-width: 88% !important;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n}\n\n/* Bot messages - blue text for readability */\n.n8n-chat [class*=\"message\"]:not([class*=\"user\"]) {\n  color: #0f172a !important;\n  font-size: 0.8rem !important;\n  line-height: 1.4 !important;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n  white-space: pre-wrap !important;\n}\n\n/* Force all text content in bot messages to be blue */\n.n8n-chat [class*=\"message\"]:not([class*=\"user\"]) * {\n  color: #0f172a !important;\n}\n\n/* User messages - simple teal styling */\n.n8n-chat [class*=\"message\"][class*=\"user\"] {\n  background: #0891b2 !important;\n  color: #ffffff !important;\n}\n\n/* Minimal input focus styling */\n.n8n-chat input:focus,\n.n8n-chat textarea:focus {\n  border-color: #0891b2 !important;\n}\n\n@layer base {\n  :root {\n    /* Base colors */\n    --primary: 222.2 47.4% 11.2%;\n    --secondary: 217.2 32.6% 17.5%;\n    --accent: 198.6 93.2% 59.6%;\n    \n    /* Core UI colors */\n    --background: 222.2 47.4% 11.2%;\n    --foreground: 210 40% 98%;\n    --card: 217.2 32.6% 17.5%;\n    --card-foreground: 210 40% 98%;\n    --popover: 217.2 32.6% 17.5%;\n    --popover-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 198.6 93.2% 59.6%;\n\n    /* Component colors */\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n\n    /* Chart colors */\n    --chart-1: 198.6 93.2% 59.6%;\n    --chart-2: 180 100% 50%;\n    --chart-3: 262 83.3% 57.8%;\n    --chart-4: 110 100% 50%;\n    --chart-5: 198.6 93.2% 59.6%;\n\n    /* Radius */\n    --radius: 0.5rem;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  html {\n    scroll-behavior: smooth;\n    height: 100%;\n    overflow-x: hidden;\n  }\n\n  body {\n    font-family: 'Space Grotesk', monospace;\n    @apply bg-primary text-foreground;\n    overflow-x: hidden;\n    min-height: 100%;\n  }\n\n  /* This ensures sections have proper padding for smooth scrolling */\n  section {\n    padding-top: 2rem;\n    padding-bottom: 2rem;\n    scroll-margin-top: 4rem; /* Offset for fixed header */\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Inter', sans-serif;\n    letter-spacing: normal;\n  }\n  \n  .hero-section h1 {\n    letter-spacing: normal;\n  }\n}\n\n@layer components {\n  .card-hover-effect {\n    @apply transition-all duration-300 ease-in-out;\n  }\n  \n  .card-hover-effect:hover {\n    @apply transform -translate-y-2 shadow-xl;\n  }\n\n  .asymmetric-grid {\n    @apply grid grid-cols-12 gap-6;\n  }\n\n  .hero-canvas {\n    @apply absolute top-0 left-0 w-full h-full z-0;\n  }\n  \n  /* Animations for service categories */\n  .animate-float {\n    animation: float 6s ease-in-out infinite;\n  }\n  \n  .animate-pulse-slow {\n    animation: pulse 3s ease-in-out infinite;\n  }\n  \n  .rotate-animation {\n    animation: rotate 8s linear infinite;\n  }\n  \n  .counter-rotate-animation {\n    animation: counter-rotate 6s linear infinite;\n  }\n  \n  @keyframes float {\n    0% {\n      transform: translateY(0px);\n    }\n    50% {\n      transform: translateY(-20px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n  \n  @keyframes pulse {\n    0% {\n      transform: scale(0.95);\n      opacity: 0.7;\n    }\n    50% {\n      transform: scale(1.05);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(0.95);\n      opacity: 0.7;\n    }\n  }\n  \n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  \n  @keyframes counter-rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n  \n  .animate-spin-slow {\n    animation: spin-slow 10s linear infinite;\n  }\n  \n  .animate-reverse-spin {\n    animation: reverse-spin 8s linear infinite;\n  }\n  \n  @keyframes spin-slow {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  \n  @keyframes reverse-spin {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n  \n  @keyframes bounce {\n    0%, 100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-15px);\n    }\n  }\n  \n  /* \n  Case Study Content Styling now uses Tailwind typography prose plugin\n  See CaseStudy.tsx for the full styling class:\n  \n  className=\"prose prose-lg max-w-none prose-headings:text-accent \n  prose-headings:font-header prose-headings:font-bold prose-p:text-foreground/90 \n  prose-strong:text-accent prose-strong:font-medium prose-a:text-accent \n  prose-a:no-underline hover:prose-a:underline prose-code:text-accent \n  prose-code:bg-accent/10 prose-code:px-1 prose-code:py-0.5 prose-code:rounded \n  prose-code:before:content-none prose-code:after:content-none \n  prose-blockquote:border-l-accent prose-blockquote:bg-secondary/20 \n  prose-blockquote:py-0.5 prose-blockquote:not-italic prose-li:marker:text-accent\"\n  */\n\n  /* Force all case study content to use proper text colors */\n  .case-study-content,\n  .case-study-content *:not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(strong):not(b) {\n    color: hsl(var(--foreground)) !important;\n  }\n  \n  .case-study-content h1,\n  .case-study-content h2,\n  .case-study-content h3,\n  .case-study-content h4,\n  .case-study-content h5,\n  .case-study-content h6,\n  .case-study-content strong,\n  .case-study-content b {\n    color: hsl(var(--accent)) !important;\n  }\n  \n  .case-study-content ul li::marker,\n  .case-study-content ol li::marker {\n    color: hsl(var(--accent)) !important;\n  }\n  \n  .case-study-content ul li,\n  .case-study-content ol li {\n    color: hsl(var(--accent)) !important;\n  }\n  \n  /* Override any inherited styles that might be causing invisibility */\n  .case-study-content p {\n    color: hsl(var(--foreground)) !important;\n  }\n  \n  .case-study-content div {\n    color: hsl(var(--foreground)) !important;\n  }\n  \n  /* Ensure text content is always visible */\n  .case-study-content *:not(strong):not(b):not(h1):not(h2):not(h3):not(h4):not(h5):not(h6) {\n    color: hsl(var(--foreground)) !important;\n  }\n  \n  /* Code Animation Loader Styles */\n  .typing-animation {\n    display: inline-block;\n    white-space: pre-wrap;\n    word-break: break-word;\n    animation: blink 1s step-end infinite;\n  }\n  \n  @keyframes blink {\n    from, to { opacity: 1; }\n    50% { opacity: 0.8; }\n  }\n  \n  /* Syntax highlighting for the code animation */\n  .typing-animation {\n    color: #e6e6e6;\n  }\n  \n  .typing-animation .keyword {\n    color: #ff79c6;\n  }\n  \n  .typing-animation .string {\n    color: #f1fa8c;\n  }\n  \n  .typing-animation .comment {\n    color: #6272a4;\n  }\n  \n  .typing-animation .function {\n    color: #50fa7b;\n  }\n  \n  .typing-animation .variable {\n    color: #8be9fd;\n  }\n}\n","size_bytes":11672},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// Prevent unexpected page refreshes\nwindow.addEventListener('beforeunload', (e) => {\n  // Only prevent unload if there's actual unsaved work\n  // This prevents accidental refreshes but allows intentional navigation\n  if (window.location.pathname === '/' && !document.hidden) {\n    // Allow refresh but log it for debugging\n    console.log('Page refresh detected');\n  }\n});\n\n// Handle errors gracefully to prevent crashes that might cause refreshes\nwindow.addEventListener('error', (e) => {\n  console.error('Global error caught:', e.error);\n  e.preventDefault(); // Prevent default error handling that might cause refresh\n});\n\nwindow.addEventListener('unhandledrejection', (e) => {\n  console.error('Unhandled promise rejection:', e.reason);\n  e.preventDefault(); // Prevent default handling\n});\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":953},"public/admin/preview.css":{"content":"/* CMS Preview Styles */\nbody {\n  font-family: 'Inter', sans-serif;\n  line-height: 1.6;\n  color: #333;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: 'Space Grotesk', sans-serif;\n  color: #0F172A;\n  margin-top: 1.5em;\n  margin-bottom: 0.75em;\n}\n\nh1 {\n  font-size: 2.5rem;\n  font-weight: 700;\n}\n\nh2 {\n  font-size: 2rem;\n  font-weight: 600;\n}\n\nh3 {\n  font-size: 1.75rem;\n}\n\np {\n  margin-bottom: 1.2em;\n}\n\na {\n  color: #0EA5E9;\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nul, ol {\n  margin-bottom: 1.2em;\n  padding-left: 1.5em;\n}\n\nli {\n  margin-bottom: 0.5em;\n}\n\nblockquote {\n  border-left: 4px solid #0EA5E9;\n  padding-left: 1em;\n  margin-left: 0;\n  font-style: italic;\n  color: #555;\n}\n\ncode {\n  background-color: #f4f4f4;\n  padding: 2px 4px;\n  border-radius: 4px;\n  font-family: monospace;\n}\n\npre {\n  background-color: #f4f4f4;\n  padding: 1em;\n  border-radius: 4px;\n  overflow-x: auto;\n}\n\nhr {\n  border: none;\n  border-top: 1px solid #ddd;\n  margin: 2em 0;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  border-radius: 4px;\n}\n\n.feature-list {\n  margin-top: 2em;\n}\n\n.feature-item {\n  background-color: #f8fafc;\n  padding: 1em;\n  margin-bottom: 1em;\n  border-radius: 6px;\n  border-left: 3px solid #0EA5E9;\n}\n\n.tech-stack {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1em;\n  margin-top: 2em;\n}\n\n.tech-item {\n  background-color: #f0f9ff;\n  padding: 0.5em 1em;\n  border-radius: 20px;\n  font-size: 0.9em;\n  display: inline-block;\n}","size_bytes":1501},"src/types/netlify-cms-proxy-server.d.ts":{"content":"declare module 'netlify-cms-proxy-server' {\n  export function middleware(options: {\n    rootPaths: Record<string, string>;\n    publicPath: string;\n    distPath: string;\n    logger?: Console;\n    security?: {\n      loginRoute: string;\n      authenticator: (email: string, password: string) => Promise<{ token: string; email: string } | null>;\n    };\n  }): (app: any) => void;\n}","size_bytes":376},"client/src/components/BubblePortfolioAnimation.tsx":{"content":"import React, { useRef, useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { getRandomInt } from '../lib/utils';\n\ninterface BubblePortfolioAnimationProps {\n  category: 'web' | 'automation' | 'chatbot';\n  density?: number; // Number of bubbles (default: 20)\n  className?: string;\n  onClick?: () => void;\n  interactive?: boolean; // Whether bubbles should react to mouse movement\n}\n\ninterface Bubble {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  delay: number;\n  speed: number;\n  opacity: number;\n}\n\n// Component for creating a bubble-based animation for portfolio items\nconst BubblePortfolioAnimation: React.FC<BubblePortfolioAnimationProps> = ({\n  category,\n  density = 20,\n  className = \"h-64 w-full rounded-lg overflow-hidden relative\",\n  onClick,\n  interactive = true\n}) => {\n  const [bubbles, setBubbles] = useState<Bubble[]>([]);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  \n  // Get category-specific colors\n  const getCategoryColors = (category: string) => {\n    switch(category) {\n      case 'web':\n        return {\n          main: '#0ea5e9', // Light blue\n          secondary: '#0284c7', // Darker blue\n          highlight: '#38bdf8' // Highlight blue\n        };\n      case 'automation':\n        return {\n          main: '#f59e0b', // Amber\n          secondary: '#d97706', // Darker amber\n          highlight: '#fbbf24' // Highlight amber\n        };\n      case 'chatbot':\n        return {\n          main: '#10b981', // Green\n          secondary: '#059669', // Darker green\n          highlight: '#34d399' // Highlight green\n        };\n      default:\n        return {\n          main: '#0ea5e9', // Default light blue\n          secondary: '#0284c7', // Default darker blue\n          highlight: '#38bdf8' // Default highlight blue\n        };\n    }\n  };\n  \n  const colors = getCategoryColors(category);\n  \n  // Initialize bubbles\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const initialBubbles: Bubble[] = [];\n    const width = containerRef.current.clientWidth;\n    const height = containerRef.current.clientHeight;\n    \n    for (let i = 0; i < density; i++) {\n      initialBubbles.push({\n        id: i,\n        x: getRandomInt(0, width),\n        y: getRandomInt(0, height),\n        size: getRandomInt(10, 60),\n        delay: getRandomInt(0, 20) / 10,\n        speed: getRandomInt(5, 15) / 10,\n        opacity: getRandomInt(10, 80) / 100\n      });\n    }\n    \n    setBubbles(initialBubbles);\n    \n    // Add resize event listener\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      \n      const width = containerRef.current.clientWidth;\n      const height = containerRef.current.clientHeight;\n      \n      // Update bubble positions based on new dimensions\n      setBubbles(prev => prev.map(bubble => ({\n        ...bubble,\n        x: (bubble.x / prev[0].x) * width,\n        y: (bubble.y / prev[0].y) * height\n      })));\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [density]);\n  \n  // Handle mouse movement for interactive bubbles\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!interactive || !containerRef.current) return;\n    \n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    setMousePosition({ x, y });\n  };\n  \n  return (\n    <motion.div \n      ref={containerRef}\n      className={`${className} cursor-pointer bg-gradient-to-br from-secondary/80 to-secondary/50 backdrop-blur-sm`}\n      style={{ backdropFilter: 'blur(8px)' }}\n      whileHover={{ scale: isHovered ? 1.02 : 1 }}\n      onClick={onClick}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onMouseMove={handleMouseMove}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      {/* Background gradient */}\n      <div \n        className=\"absolute inset-0 opacity-40\"\n        style={{ \n          background: `radial-gradient(circle, ${colors.highlight}20, ${colors.main}40, ${colors.secondary}80)`,\n        }}\n      />\n      \n      {/* Bubble elements */}\n      {bubbles.map((bubble) => {\n        // Calculate distance from mouse for interactive effect\n        const dx = mousePosition.x - bubble.x;\n        const dy = mousePosition.y - bubble.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const maxDistance = 150; // Max distance for interaction\n        \n        // Calculate repulsion force (stronger when closer)\n        const force = interactive && isHovered ? Math.max(0, 1 - distance / maxDistance) * 40 : 0;\n        const angle = Math.atan2(dy, dx);\n        \n        // Apply force in the opposite direction\n        const moveX = force ? -Math.cos(angle) * force : 0;\n        const moveY = force ? -Math.sin(angle) * force : 0;\n        \n        return (\n          <motion.div\n            key={bubble.id}\n            className=\"absolute rounded-full\"\n            style={{\n              left: bubble.x,\n              top: bubble.y,\n              width: bubble.size,\n              height: bubble.size,\n              backgroundColor: isHovered ? colors.highlight : colors.main,\n              opacity: bubble.opacity,\n              zIndex: Math.floor(bubble.size),\n            }}\n            animate={{\n              x: moveX,\n              y: moveY,\n              scale: isHovered ? 1.1 : [1, 1.05, 1],\n            }}\n            transition={{\n              x: { type: \"spring\", stiffness: 100, damping: 10 },\n              y: { type: \"spring\", stiffness: 100, damping: 10 },\n              scale: {\n                duration: 2,\n                repeat: Infinity,\n                repeatType: \"reverse\",\n                delay: bubble.delay\n              }\n            }}\n          />\n        );\n      })}\n      \n      {/* Shine effect on hover */}\n      {isHovered && (\n        <div \n          className=\"absolute inset-0 opacity-20\"\n          style={{ \n            background: `radial-gradient(circle at ${mousePosition.x}px ${mousePosition.y}px, ${colors.highlight}, transparent 60%)`,\n          }}\n        />\n      )}\n    </motion.div>\n  );\n};\n\nexport default BubblePortfolioAnimation;","size_bytes":6414},"client/src/components/CMSServicesSection.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useLanguage } from '@/lib/languageContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { motion } from 'framer-motion';\nimport { ExternalLink, ArrowRight, Code, Server, Database, Cpu, Cloud } from 'lucide-react';\n\ninterface ServiceFeature {\n  name: string;\n  description: string;\n}\n\ninterface TechItem {\n  name: string;\n  description: string;\n}\n\ninterface Service {\n  slug: string;\n  title: string;\n  icon: string;\n  short_description: string;\n  featured_image: string;\n  order: number;\n  features: ServiceFeature[];\n  tech_stack: TechItem[];\n  content: string;\n}\n\nconst getIconComponent = (iconName: string) => {\n  switch (iconName) {\n    case 'chat-bot':\n      return <Cpu className=\"h-6 w-6\" />;\n    case 'web-dev':\n      return <Code className=\"h-6 w-6\" />;\n    case 'automation':\n      return <Server className=\"h-6 w-6\" />;\n    case 'cloud':\n      return <Cloud className=\"h-6 w-6\" />;\n    default:\n      return <Database className=\"h-6 w-6\" />;\n  }\n};\n\nexport function CMSServicesSection() {\n  const [services, setServices] = useState<Service[]>([]);\n  const [activeTab, setActiveTab] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n  const { language } = useLanguage();\n\n  useEffect(() => {\n    async function fetchServices() {\n      try {\n        // Add timestamp to prevent caching\n        const response = await fetch(`/api/services?lang=${language}&t=${Date.now()}`);\n        const data = await response.json();\n        if (data.success) {\n          const sortedServices = data.data.sort((a: Service, b: Service) => a.order - b.order);\n          console.log('Fetched services:', sortedServices.map((s: Service) => s.title));\n          setServices(sortedServices);\n          if (sortedServices.length > 0) {\n            setActiveTab(sortedServices[0].slug);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching services:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchServices();\n  }, [language]);\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const item = {\n    hidden: { opacity: 0, y: 20 },\n    show: { opacity: 1, y: 0 },\n  };\n\n  if (loading) {\n    return (\n      <div className=\"w-full py-24 flex justify-center items-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (services.length === 0) {\n    return (\n      <div className=\"w-full py-24 text-center\">\n        <h3 className=\"text-2xl font-semibold\">\n          {language === 'nl' ? 'Geen diensten gevonden' : 'No services found'}\n        </h3>\n      </div>\n    );\n  }\n\n  const activeService = services.find(service => service.slug === activeTab);\n\n  return (\n    <section \n      id=\"services\" \n      className=\"w-full py-24 bg-slate-50 dark:bg-slate-900\"\n    >\n      <div className=\"container px-4 md:px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">\n            {language === 'nl' ? 'Onze Diensten' : 'Our Services'}\n          </h2>\n          <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n            {language === 'nl' \n              ? 'Wij leveren geavanceerde digitale oplossingen die uw bedrijf transformeren.'\n              : 'We deliver advanced digital solutions that transform your business.'}\n          </p>\n        </div>\n\n        <Tabs defaultValue={activeTab} value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <TabsList className=\"w-full flex justify-center mb-8 bg-background p-1 overflow-x-auto\">\n            {services.map((service) => (\n              <TabsTrigger \n                key={service.slug} \n                value={service.slug}\n                className=\"flex items-center gap-2 px-4 py-2\"\n              >\n                {getIconComponent(service.icon)}\n                <span className=\"hidden sm:inline\">{service.title}</span>\n              </TabsTrigger>\n            ))}\n          </TabsList>\n          \n          {services.map((service) => (\n            <TabsContent \n              key={service.slug} \n              value={service.slug} \n              className=\"mt-0\"\n            >\n              <div className=\"grid md:grid-cols-3 gap-8\">\n                <div className=\"md:col-span-2\">\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5 }}\n                  >\n                    <Card className=\"border-0 shadow-lg\">\n                      <div className=\"aspect-video relative overflow-hidden rounded-t-lg\">\n                        <div className=\"absolute inset-0 bg-primary/10 flex items-center justify-center\">\n                          {getIconComponent(service.icon)}\n                          <span className=\"sr-only\">{service.title}</span>\n                        </div>\n                      </div>\n                      <CardHeader>\n                        <CardTitle className=\"text-2xl\">{service.title}</CardTitle>\n                        <CardDescription className=\"text-base\">{service.short_description}</CardDescription>\n                      </CardHeader>\n                      <CardContent>\n                        <motion.div \n                          className=\"grid sm:grid-cols-2 gap-4\"\n                          variants={container}\n                          initial=\"hidden\"\n                          animate=\"show\"\n                        >\n                          {service.features.slice(0, 4).map((feature, index) => (\n                            <motion.div key={index} variants={item}>\n                              <Card className=\"h-full border shadow-sm\">\n                                <CardHeader className=\"p-4\">\n                                  <CardTitle className=\"text-base\">{feature.name}</CardTitle>\n                                </CardHeader>\n                                <CardContent className=\"p-4 pt-0\">\n                                  <p className=\"text-sm text-muted-foreground\">{feature.description}</p>\n                                </CardContent>\n                              </Card>\n                            </motion.div>\n                          ))}\n                        </motion.div>\n                      </CardContent>\n                      <CardFooter>\n                        <Button variant=\"outline\" className=\"w-full mt-2\">\n                          <span>\n                            {language === 'nl' ? 'Lees meer over' : 'Learn more about'} {service.title}\n                          </span>\n                          <ArrowRight className=\"ml-2 h-4 w-4\" />\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </motion.div>\n                </div>\n                \n                <div>\n                  <motion.div\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    transition={{ duration: 0.5, delay: 0.2 }}\n                  >\n                    <Card className=\"border-0 shadow-lg h-full\">\n                      <CardHeader>\n                        <CardTitle className=\"text-xl\">\n                          {language === 'nl' ? 'Technologieën' : 'Technologies'}\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-4\">\n                          {service.tech_stack.map((tech, index) => (\n                            <div key={index} className=\"flex flex-col space-y-1\">\n                              <div className=\"flex items-start\">\n                                <Badge className=\"mr-2 mt-1\" variant=\"outline\">\n                                  {index + 1}\n                                </Badge>\n                                <div>\n                                  <h4 className=\"font-medium\">{tech.name}</h4>\n                                  <p className=\"text-sm text-muted-foreground\">{tech.description}</p>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </CardContent>\n                      <CardFooter>\n                        <Button className=\"w-full\">\n                          <span>\n                            {language === 'nl' ? 'Neem contact op' : 'Contact us'}\n                          </span>\n                          <ExternalLink className=\"ml-2 h-4 w-4\" />\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </motion.div>\n                </div>\n              </div>\n            </TabsContent>\n          ))}\n        </Tabs>\n      </div>\n    </section>\n  );\n}","size_bytes":9248},"client/src/components/CaseStudiesSection.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\nimport { useQuery } from '@tanstack/react-query';\n\ninterface CaseStudy {\n  slug: string;\n  title: string;\n  featured_image: string;\n  category: string;\n  client: string;\n  industry: string;\n  date: string;\n  description: string;\n  challenge: string;\n  solution: string;\n  result: string;\n  metrics: Array<{ label: string; value: string }>;\n  live_url?: string;\n  featured: boolean;\n  content: string;\n}\n\ntype FilterCategory = 'All' | 'AI & Chatbots' | 'Automation' | 'Web Development';\n\nconst CaseStudiesSection = () => {\n  const { t, language } = useLanguage();\n  const [activeFilter, setActiveFilter] = useState<FilterCategory>('All');\n  \n  // Define filter categories based on the current language\n  const filterCategories = {\n    'All': language === 'nl' ? 'Alle' : 'All',\n    'AI & Chatbots': 'AI & Chatbots',\n    'Automation': language === 'nl' ? 'Automatisering' : 'Automation',\n    'Web Development': language === 'nl' ? 'Webontwikkeling' : 'Web Development'\n  };\n  \n  // Fetch case studies from the CMS API\n  const { data: caseStudiesData, isLoading, error } = useQuery({\n    queryKey: ['/api/case-studies', language],\n    queryFn: async () => {\n      const response = await fetch(`/api/case-studies?lang=${language}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch case studies');\n      }\n      const data = await response.json();\n      return data.data as CaseStudy[];\n    }\n  });\n\n  // Show loading state while fetching data\n  const caseStudies = caseStudiesData || [];\n\n  // Filter case studies based on the active filter\n  const categoryMapping: Record<string, string> = {\n    'AI & Chatbots': language === 'nl' ? 'AI & Chatbots' : 'AI & Chatbots',\n    'Automation': language === 'nl' ? 'Automatisering' : 'Automation',\n    'Web Development': language === 'nl' ? 'Webontwikkeling' : 'Web Development'\n  };\n\n  const filteredCaseStudies = !caseStudies ? [] : (\n    activeFilter === 'All' \n      ? caseStudies \n      : caseStudies.filter((study) => study.category === categoryMapping[activeFilter])\n  );\n\n  // Show loading state while fetching data\n  if (isLoading) {\n    return (\n      <section id=\"case-studies\" className=\"py-24 bg-primary\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4\">{t('cases.title')}</h2>\n            <p className=\"text-foreground/70 max-w-2xl mx-auto\">{t('cases.subtitle')}</p>\n          </div>\n          <div className=\"flex justify-center items-center py-20\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-accent\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  // Show error state if there was an issue fetching data\n  if (error) {\n    return (\n      <section id=\"case-studies\" className=\"py-24 bg-primary\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4\">{t('cases.title')}</h2>\n            <p className=\"text-foreground/70 max-w-2xl mx-auto\">{t('cases.subtitle')}</p>\n          </div>\n          <div className=\"text-center py-10 text-red-400\">\n            <p>{t('common.error')}</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"case-studies\" className=\"py-24 bg-primary\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4\">{t('cases.title')}</h2>\n          <p className=\"text-foreground/70 max-w-2xl mx-auto\">{t('cases.subtitle')}</p>\n        </div>\n        \n        <div className=\"mb-10 flex flex-wrap justify-center gap-4\">\n          <button \n            className={`px-4 py-2 rounded-lg ${activeFilter === 'All' ? 'bg-accent text-primary' : 'bg-secondary/50 text-foreground hover:bg-secondary'} font-medium transition-colors`}\n            onClick={() => setActiveFilter('All')}\n          >\n            {t('cases.filter.all')}\n          </button>\n          <button \n            className={`px-4 py-2 rounded-lg ${activeFilter === 'AI & Chatbots' ? 'bg-accent text-primary' : 'bg-secondary/50 text-foreground hover:bg-secondary'} font-medium transition-colors`}\n            onClick={() => setActiveFilter('AI & Chatbots')}\n          >\n            {t('cases.filter.ai')}\n          </button>\n          <button \n            className={`px-4 py-2 rounded-lg ${activeFilter === 'Automation' ? 'bg-accent text-primary' : 'bg-secondary/50 text-foreground hover:bg-secondary'} font-medium transition-colors`}\n            onClick={() => setActiveFilter('Automation')}\n          >\n            {t('cases.filter.automation')}\n          </button>\n          <button \n            className={`px-4 py-2 rounded-lg ${activeFilter === 'Web Development' ? 'bg-accent text-primary' : 'bg-secondary/50 text-foreground hover:bg-secondary'} font-medium transition-colors`}\n            onClick={() => setActiveFilter('Web Development')}\n          >\n            {t('cases.filter.web')}\n          </button>\n        </div>\n        \n        \n        {filteredCaseStudies.length === 0 ? (\n          <div className=\"text-center py-10\">\n            <p className=\"text-foreground/70\">\n              {language === 'nl' ? 'Geen resultaten gevonden' : 'No results found'}\n            </p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-8\">\n            {filteredCaseStudies.map((study, index) => (\n              <motion.div \n                key={index}\n                className=\"bg-secondary/50 rounded-xl overflow-hidden card-hover-effect h-full flex flex-col\"\n                initial={{ opacity: 0, scale: 0.9 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.4, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"h-48 overflow-hidden relative\">\n                  <img \n                    src={study.featured_image || '/uploads/retailtech-chatbot.jpg'} \n                    alt={study.title} \n                    className=\"w-full h-full object-cover object-center transition-transform duration-500 hover:scale-110\"\n                    onError={(e) => {\n                      console.error('Afbeelding kon niet worden geladen:', study.featured_image);\n                      e.currentTarget.src = '/uploads/retailtech-chatbot.jpg';\n                    }}\n                  />\n                  <div className=\"absolute top-3 right-3 text-accent text-xs px-2 py-1 font-semibold\">\n                    {study.category}\n                  </div>\n                </div>\n                <div className=\"p-6 flex-grow flex flex-col\">\n                  <h3 className=\"text-xl font-header font-semibold mb-3\">{study.title}</h3>\n                  <p className=\"text-foreground/70 mb-4 flex-grow\">{study.description}</p>\n                  <div className=\"flex items-center justify-between mt-4\">\n                    {study.live_url && (\n                      <a \n                        href={study.live_url} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\" \n                        className=\"text-xs px-3 py-1 bg-secondary/60 rounded-md hover:bg-secondary text-foreground/90\"\n                      >\n                        <i className=\"ri-external-link-line mr-1\"></i>\n                        <span>{language === 'nl' ? 'Live Website' : 'Live Website'}</span>\n                      </a>\n                    )}\n                    <a \n                      href={`/case-studies/${study.slug}`} \n                      className=\"text-foreground/70 hover:text-accent flex items-center ml-auto\"\n                    >\n                      <span>{language === 'nl' ? 'Bekijk Project' : 'View Case'}</span>\n                      <i className=\"ri-arrow-right-line ml-1\"></i>\n                    </a>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        )}\n        \n        <div className=\"text-center mt-8 flex justify-center gap-4\">\n          <a href=\"/blogs\" className=\"inline-flex items-center px-6 py-3 border border-foreground/30 rounded-lg hover:bg-secondary transition\">\n            <span>{language === 'nl' ? 'Meer Projecten' : 'More Projects'}</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n            </svg>\n          </a>\n          \n          <a href=\"/portfolio\" className=\"inline-flex items-center px-6 py-3 bg-accent text-primary font-medium rounded-lg hover:bg-accent/90 transition-all duration-300 group relative overflow-hidden\">\n            <span className=\"relative z-10\">{language === 'nl' ? 'Portfolio Verkennen' : 'Explore Portfolio'}</span>\n            <span className=\"absolute inset-0 bg-gradient-to-r from-accent to-accent-light opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></span>\n            <span className=\"ml-2 relative z-10 flex items-center justify-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" className=\"w-5 h-5 group-hover:animate-pulse\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2\" />\n              </svg>\n            </span>\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CaseStudiesSection;\n","size_bytes":10057},"client/src/components/CaseStudyBackgroundAnimation.tsx":{"content":"import React, { useRef, Suspense } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n// No need to import the Replit mock for this simple background animation\n\n// Particle system animation with dynamic color based on category\nconst ParticlesAnimation = ({ category }: { category: string }) => {\n  const groupRef = useRef<THREE.Group>(null);\n  const particlesRef = useRef<THREE.Points>(null);\n  \n  // Set color based on category\n  const getColor = () => {\n    switch(category) {\n      case 'Automatisering':\n      case 'Automation':\n        return new THREE.Color('#0ea5e9');\n      case 'Webontwikkeling':\n      case 'Web Development':\n        return new THREE.Color('#14b8a6');\n      case 'AI & Chatbots':\n        return new THREE.Color('#06b6d4');\n      default:\n        return new THREE.Color('#14b8a6');\n    }\n  };\n  \n  // Secondary color for gradient effect\n  const getSecondaryColor = () => {\n    switch(category) {\n      case 'Automatisering':\n      case 'Automation':\n        return new THREE.Color('#0284c7');\n      case 'Webontwikkeling':\n      case 'Web Development':\n        return new THREE.Color('#0f766e');\n      case 'AI & Chatbots':\n        return new THREE.Color('#0891b2');\n      default:\n        return new THREE.Color('#0f766e');\n    }\n  };\n  \n  const particleColor = getColor();\n  const secondaryColor = getSecondaryColor();\n  \n  useFrame(({ clock }) => {\n    if (groupRef.current) {\n      groupRef.current.rotation.y = clock.getElapsedTime() * 0.05;\n    }\n    \n    if (particlesRef.current) {\n      const positions = particlesRef.current.geometry.attributes.position;\n      const colors = particlesRef.current.geometry.attributes.color;\n      \n      for (let i = 0; i < positions.count; i++) {\n        const i3 = i * 3;\n        const x = positions.array[i3];\n        const y = positions.array[i3 + 1];\n        const z = positions.array[i3 + 2];\n        \n        // Calculate distance from center for color gradient\n        const distance = Math.sqrt(x * x + y * y + z * z);\n        const ratio = Math.min(1, distance / 20);\n        \n        // Set color based on distance (gradient effect)\n        const mixedColor = new THREE.Color().lerpColors(particleColor, secondaryColor, ratio);\n        \n        // Add time-based animation\n        const time = clock.getElapsedTime();\n        const angle = time * 0.2 + i * 0.001;\n        const amplitude = 0.2;\n        \n        // Apply subtle wave animation\n        positions.array[i3] = x + Math.sin(angle) * amplitude;\n        positions.array[i3 + 1] = y + Math.cos(angle) * amplitude;\n        positions.array[i3 + 2] = z + Math.sin(angle + y * 0.5) * amplitude;\n        \n        // Update color\n        colors.array[i3] = mixedColor.r;\n        colors.array[i3 + 1] = mixedColor.g;\n        colors.array[i3 + 2] = mixedColor.b;\n      }\n      \n      positions.needsUpdate = true;\n      colors.needsUpdate = true;\n    }\n  });\n  \n  // Create particles\n  const particleCount = 1000;\n  const positions = new Float32Array(particleCount * 3);\n  const colors = new Float32Array(particleCount * 3);\n  \n  for (let i = 0; i < particleCount; i++) {\n    const i3 = i * 3;\n    // Create a sphere of particles\n    const radius = 10 + Math.random() * 10;\n    const phi = Math.acos(Math.random() * 2 - 1);\n    const theta = Math.random() * Math.PI * 2;\n    \n    positions[i3] = radius * Math.sin(phi) * Math.cos(theta);\n    positions[i3 + 1] = radius * Math.sin(phi) * Math.sin(theta);\n    positions[i3 + 2] = radius * Math.cos(phi);\n    \n    // Initialize colors (will be updated in useFrame)\n    colors[i3] = particleColor.r;\n    colors[i3 + 1] = particleColor.g;\n    colors[i3 + 2] = particleColor.b;\n  }\n  \n  const geometry = new THREE.BufferGeometry();\n  geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n  geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n  \n  return (\n    <group ref={groupRef}>\n      <points ref={particlesRef} geometry={geometry}>\n        <pointsMaterial \n          size={0.15} \n          vertexColors \n          transparent \n          opacity={0.6}\n          sizeAttenuation \n        />\n      </points>\n    </group>\n  );\n};\n\ninterface CaseStudyBackgroundAnimationProps {\n  category: string;\n  className?: string;\n}\n\nconst CaseStudyBackgroundAnimation: React.FC<CaseStudyBackgroundAnimationProps> = ({ \n  category,\n  className = \"absolute top-0 left-0 w-full h-full -z-10 opacity-30\"\n}) => {\n  return (\n    <div className={className}>\n      <Suspense fallback={<div className=\"w-full h-full bg-primary\" />}>\n        <Canvas camera={{ position: [0, 0, 25], fov: 60 }}>\n          <ambientLight intensity={0.2} />\n          <ParticlesAnimation category={category} />\n        </Canvas>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default CaseStudyBackgroundAnimation;","size_bytes":4835},"client/src/components/CaseStudyThreeScene.tsx":{"content":"import React, { useRef, useEffect, Suspense } from 'react';\nimport * as THREE from 'three';\nimport { useFrame, Canvas } from '@react-three/fiber';\nimport { Html, OrbitControls } from '@react-three/drei';\nimport { setupReplitMock } from '@/lib/mockReplit';\n\n// Set up Replit mock to prevent errors\nsetupReplitMock();\n\n// Initialization helper function\nfunction initThreeJS() {\n  if (typeof window !== 'undefined') {\n    window.HTMLCanvasElement.prototype.getContext = \n      window.HTMLCanvasElement.prototype.getContext || \n      function() { return null; };\n  }\n}\n\n// Run once\ninitThreeJS();\n\n// Floating text component\nconst FloatingText = ({ position, text, color = '#ffffff', scale = 1 }: { position: [number, number, number]; text: string; color?: string; scale?: number }) => {\n  const groupRef = useRef<THREE.Group>(null);\n  \n  useFrame(({ clock }) => {\n    if (groupRef.current) {\n      groupRef.current.position.y += Math.sin(clock.getElapsedTime()) * 0.001;\n      groupRef.current.rotation.y += 0.002;\n    }\n  });\n  \n  return (\n    <group ref={groupRef} position={position} scale={[scale, scale, scale]}>\n      <Html \n        transform\n        distanceFactor={10}\n        position={[0, 0, 0]}\n        style={{ \n          color,\n          fontSize: '2em',\n          fontWeight: 'bold',\n          textShadow: '0 0 10px rgba(0, 0, 0, 0.5)'\n        }}\n      >\n        {text}\n      </Html>\n    </group>\n  );\n};\n\n// Automation-themed animation\nconst AutomationAnimation = () => {\n  const gearRef = useRef<THREE.Mesh>(null);\n  const spheresRef = useRef<THREE.Group>(null);\n  \n  useFrame(({ clock }) => {\n    if (gearRef.current) {\n      gearRef.current.rotation.z += 0.01;\n    }\n    \n    if (spheresRef.current) {\n      spheresRef.current.rotation.y += 0.005;\n      spheresRef.current.children.forEach((child, i) => {\n        const mesh = child as THREE.Mesh;\n        mesh.position.y = Math.sin(clock.getElapsedTime() * 1.5 + i) * 0.2;\n      });\n    }\n  });\n  \n  return (\n    <group>\n      <mesh ref={gearRef} position={[0, 0, -3]}>\n        <torusGeometry args={[1, 0.2, 16, 100]} />\n        <meshStandardMaterial color=\"#0ea5e9\" metalness={0.9} roughness={0.2} />\n      </mesh>\n      \n      <group ref={spheresRef} position={[0, 0, 0]}>\n        {Array.from({ length: 5 }).map((_, i) => {\n          const angle = (Math.PI * 2 / 5) * i;\n          const x = Math.cos(angle) * 2;\n          const z = Math.sin(angle) * 2;\n          return (\n            <mesh key={i} position={[x, 0, z]}>\n              <sphereGeometry args={[0.3, 16, 16]} />\n              <meshStandardMaterial \n                color={i % 2 === 0 ? \"#14b8a6\" : \"#0ea5e9\"} \n                metalness={0.5} \n                roughness={0.2} \n              />\n            </mesh>\n          );\n        })}\n      </group>\n      \n      <FloatingText position={[0, 1.5, 0]} text=\"Automation\" color=\"#14b8a6\" />\n    </group>\n  );\n};\n\n// Web development-themed animation\nconst WebDevAnimation = ({ logoUrl = '/digimaatwerkLOGO.png' }) => {\n  const groupRef = useRef<THREE.Group>(null);\n  const planeRef = useRef<THREE.Mesh>(null);\n  const texture = new THREE.TextureLoader().load(logoUrl);\n  \n  useFrame(({ clock }) => {\n    if (groupRef.current) {\n      groupRef.current.rotation.y = Math.sin(clock.getElapsedTime() * 0.5) * 0.3;\n    }\n    \n    if (planeRef.current) {\n      planeRef.current.position.y = Math.sin(clock.getElapsedTime()) * 0.2 + 0.5;\n      planeRef.current.rotation.z = Math.sin(clock.getElapsedTime() * 0.3) * 0.05;\n    }\n  });\n  \n  return (\n    <group ref={groupRef}>\n      {/* Floating screen with logo */}\n      <mesh ref={planeRef} position={[0, 0.5, 0]}>\n        <planeGeometry args={[2, 1.5]} />\n        <meshStandardMaterial map={texture} transparent />\n      </mesh>\n      \n      {/* Base structure */}\n      <mesh position={[0, -1, 0]}>\n        <boxGeometry args={[3, 0.2, 1.5]} />\n        <meshStandardMaterial color=\"#1e293b\" metalness={0.8} roughness={0.2} />\n      </mesh>\n      \n      <mesh position={[0, -0.5, 0]}>\n        <cylinderGeometry args={[0.2, 0.3, 1, 16]} />\n        <meshStandardMaterial color=\"#64748b\" metalness={0.8} roughness={0.2} />\n      </mesh>\n      \n      <FloatingText position={[0, 2, 0]} text=\"Web Development\" color=\"#14b8a6\" />\n    </group>\n  );\n};\n\n// AI-themed animation\nconst AIAnimation = () => {\n  const brainRef = useRef<THREE.Group>(null);\n  const particlesRef = useRef<THREE.Group>(null);\n  \n  useFrame(({ clock }) => {\n    if (brainRef.current) {\n      brainRef.current.rotation.y += 0.005;\n      brainRef.current.position.y = Math.sin(clock.getElapsedTime() * 0.5) * 0.1;\n    }\n    \n    if (particlesRef.current) {\n      particlesRef.current.children.forEach((child, i) => {\n        const mesh = child as THREE.Mesh;\n        const angle = clock.getElapsedTime() * (0.2 + i * 0.05);\n        mesh.position.x = Math.cos(angle) * (1 + i * 0.1);\n        mesh.position.z = Math.sin(angle) * (1 + i * 0.1);\n        mesh.position.y = Math.sin(angle * 2) * 0.5;\n      });\n    }\n  });\n  \n  return (\n    <group>\n      {/* Brain-like structure */}\n      <group ref={brainRef}>\n        <mesh position={[0, 0, 0]}>\n          <sphereGeometry args={[1, 16, 16]} />\n          <meshStandardMaterial color=\"#14b8a6\" wireframe />\n        </mesh>\n        \n        <mesh position={[0, 0, 0]} scale={0.9}>\n          <sphereGeometry args={[1, 16, 16]} />\n          <meshStandardMaterial \n            color=\"#0f172a\" \n            transparent \n            opacity={0.8}\n            metalness={0.2}\n            roughness={0.8}\n          />\n        </mesh>\n      </group>\n      \n      {/* Neural network particles */}\n      <group ref={particlesRef}>\n        {Array.from({ length: 20 }).map((_, i) => (\n          <mesh key={i} position={[0, 0, 0]}>\n            <sphereGeometry args={[0.07, 8, 8]} />\n            <meshStandardMaterial \n              color={i % 3 === 0 ? \"#06b6d4\" : (i % 3 === 1 ? \"#14b8a6\" : \"#0ea5e9\")} \n              emissive={i % 3 === 0 ? \"#06b6d4\" : (i % 3 === 1 ? \"#14b8a6\" : \"#0ea5e9\")}\n              emissiveIntensity={0.5}\n            />\n          </mesh>\n        ))}\n      </group>\n      \n      <FloatingText position={[0, 1.8, 0]} text=\"AI & Chatbots\" color=\"#14b8a6\" />\n    </group>\n  );\n};\n\n// Generic scene that chooses animation based on category\nconst AnimationScene = ({ category }: { category: string }) => {\n  return (\n    <>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} intensity={1} />\n      <OrbitControls enableZoom={false} enablePan={false} minPolarAngle={Math.PI / 2.5} maxPolarAngle={Math.PI / 2.5} />\n      \n      {/* Simple shadow plane */}\n      <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -1.5, 0]} receiveShadow>\n        <planeGeometry args={[20, 20]} />\n        <shadowMaterial opacity={0.2} />\n      </mesh>\n      \n      {/* Choose animation based on category */}\n      {category === 'Automatisering' || category === 'Automation' ? (\n        <AutomationAnimation />\n      ) : category === 'Webontwikkeling' || category === 'Web Development' ? (\n        <WebDevAnimation />\n      ) : category === 'AI & Chatbots' ? (\n        <AIAnimation />\n      ) : (\n        <AutomationAnimation />\n      )}\n    </>\n  );\n};\n\n// Data wave animation for the case study content background\nexport const DataWaveBackground = () => {\n  const meshRef = useRef<THREE.Mesh>(null);\n  \n  useFrame(({ clock }) => {\n    if (meshRef.current) {\n      const time = clock.getElapsedTime();\n      const position = meshRef.current.geometry.attributes.position;\n      \n      for (let i = 0; i < position.count; i++) {\n        const x = position.getX(i);\n        const y = position.getY(i);\n        \n        // Create a wave effect\n        const anim = 0.2 * Math.sin(x * 2 + time) * Math.sin(y * 2 + time);\n        position.setZ(i, anim);\n      }\n      \n      position.needsUpdate = true;\n    }\n  });\n  \n  return (\n    <mesh ref={meshRef} rotation={[-Math.PI / 2, 0, 0]}>\n      <planeGeometry args={[15, 15, 32, 32]} />\n      <meshStandardMaterial \n        color=\"#14b8a6\" \n        wireframe \n        side={THREE.DoubleSide}\n        transparent\n        opacity={0.1}\n      />\n    </mesh>\n  );\n};\n\ninterface CaseStudyThreeSceneProps {\n  category: string;\n  className?: string;\n  height?: string;\n}\n\n// Main component export\nconst CaseStudyThreeScene: React.FC<CaseStudyThreeSceneProps> = ({ \n  category,\n  className = \"h-64\",\n  height = \"300px\"\n}) => {\n  return (\n    <div className={`${className} my-8 rounded-lg overflow-hidden`} style={{ height }}>\n      <Suspense fallback={\n        <div className=\"w-full h-full flex items-center justify-center bg-secondary/30\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-accent border-t-transparent rounded-full\" />\n        </div>\n      }>\n        <Canvas camera={{ position: [0, 0, 5], fov: 50 }}>\n          <AnimationScene category={category} />\n        </Canvas>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default CaseStudyThreeScene;","size_bytes":8956},"client/src/components/ChatbotOpener.tsx":{"content":"import { useEffect } from 'react';\n\n// Component to handle opening the chatbot when URL contains #chatbot\nconst ChatbotOpener = () => {\n  useEffect(() => {\n    const handleHashChange = () => {\n      if (window.location.hash === '#chatbot') {\n        // Wait for the N8n chat widget to be loaded\n        const interval = setInterval(() => {\n          const chatWidget = document.querySelector('.n8n-chat-toggle, [class*=\"toggle\"]') as HTMLElement;\n          if (chatWidget) {\n            chatWidget.click();\n            clearInterval(interval);\n            // Remove the hash from URL after opening\n            window.history.replaceState(null, '', window.location.pathname);\n          }\n        }, 100);\n        \n        // Stop trying after 5 seconds\n        setTimeout(() => clearInterval(interval), 5000);\n      }\n    };\n\n    // Check on initial load\n    handleHashChange();\n    \n    // Listen for hash changes\n    window.addEventListener('hashchange', handleHashChange);\n    \n    return () => {\n      window.removeEventListener('hashchange', handleHashChange);\n    };\n  }, []);\n\n  return null; // This component doesn't render anything\n};\n\nexport default ChatbotOpener;","size_bytes":1173},"client/src/components/CodeAnimationLoader.tsx":{"content":"import { useEffect, useState, useRef } from 'react';\nimport { useLanguage } from '@/lib/languageContext';\n\ninterface CodeAnimationLoaderProps {\n  onComplete?: () => void;\n  duration?: number;\n}\n\nconst CodeAnimationLoader = ({ onComplete, duration = 1500 }: CodeAnimationLoaderProps) => {\n  const [visible, setVisible] = useState(true);\n  const [text, setText] = useState('');\n  const codeRef = useRef<HTMLDivElement>(null);\n  const { t } = useLanguage();\n  \n  // Shorter code snippet with translations\n  const codeSnippet = `${t('loader.code.comment1')}\nimport { Client } from '@digimaatwerk/core';\nimport { AI, Web } from '@digimaatwerk/services';\n\n${t('loader.code.comment2')}\nconst client = new Client({\n  name: 'Your Business',\n  goals: ['growth', 'innovation']\n});\n\n${t('loader.code.comment3')}\nconst solution = await Promise.all([\n  AI.createChatbot(client),\n  Web.buildResponsiveApp(client)\n]);\n\n${t('loader.code.comment4')}`;\n\n  // Skip animation handler\n  const handleSkip = () => {\n    if (codeRef.current) {\n      codeRef.current.style.opacity = '0';\n    }\n    \n    setTimeout(() => {\n      setVisible(false);\n      if (onComplete) onComplete();\n    }, 300);\n  };\n\n  useEffect(() => {\n    let currentIndex = 0;\n    let typingInterval: ReturnType<typeof setInterval>;\n    \n    // Start the typing animation with faster speed\n    typingInterval = setInterval(() => {\n      if (currentIndex < codeSnippet.length) {\n        setText(codeSnippet.substring(0, currentIndex + 1));\n        currentIndex++;\n      } else {\n        clearInterval(typingInterval);\n        \n        // Shorter delay before hiding the loader\n        setTimeout(() => {\n          // Add fade-out animation\n          if (codeRef.current) {\n            codeRef.current.style.opacity = '0';\n          }\n          \n          // Hide the loader after the fade-out\n          setTimeout(() => {\n            setVisible(false);\n            if (onComplete) onComplete();\n          }, 300);\n        }, 400);\n      }\n    }, 15); // Faster typing speed\n    \n    return () => clearInterval(typingInterval);\n  }, [codeSnippet, onComplete]);\n  \n  if (!visible) return null;\n  \n  return (\n    <div className=\"fixed inset-0 bg-primary z-50 flex flex-col items-center justify-center transition-opacity duration-500\" ref={codeRef}>\n      <div className=\"w-full max-w-4xl px-4\">\n        <div className=\"bg-secondary rounded-lg p-6 shadow-xl\">\n          <div className=\"flex items-center mb-4 justify-between\">\n            <div className=\"flex items-center\">\n              <div className=\"w-3 h-3 rounded-full bg-red-500 mr-2\"></div>\n              <div className=\"w-3 h-3 rounded-full bg-yellow-500 mr-2\"></div>\n              <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n              <div className=\"ml-4 text-foreground/60 text-sm\">terminal@digimaatwerk</div>\n            </div>\n          </div>\n          <pre className=\"font-mono text-sm md:text-base text-accent overflow-x-auto\">\n            <code className=\"typing-animation\">{text}</code>\n          </pre>\n          <div className=\"h-4 w-2 bg-accent inline-block animate-pulse ml-1 relative top-1\"></div>\n        </div>\n      </div>\n      <div className=\"mt-8 text-accent text-lg animate-pulse\">{t('loader.initializing')}</div>\n      <button \n        onClick={handleSkip}\n        className=\"mt-4 px-6 py-2 bg-accent/20 hover:bg-accent/30 text-accent rounded-md transition-colors duration-200\"\n      >\n        {t('loader.skip')}\n      </button>\n    </div>\n  );\n};\n\nexport default CodeAnimationLoader;","size_bytes":3525},"client/src/components/ContactSection.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/lib/languageContext';\n\ninterface FormData {\n  name: string;\n  email: string;\n  company: string;\n  projectType: string;\n  message: string;\n  consent: boolean;\n}\n\nconst initialFormData: FormData = {\n  name: '',\n  email: '',\n  company: '',\n  projectType: '',\n  message: '',\n  consent: false\n};\n\nconst ContactSection = () => {\n  const [formData, setFormData] = useState<FormData>(initialFormData);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n  const { language } = useLanguage();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    setFormData(prev => ({ ...prev, [name]: checked }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.consent) {\n      toast({\n        title: language === 'nl' ? \"Toestemming vereist\" : \"Consent required\",\n        description: language === 'nl' ? \"Accepteer de privacyverklaring om het formulier te verzenden.\" : \"Please accept the privacy policy to submit the form.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    \n    try {\n      setIsSubmitting(true);\n      \n      // Submit the form data to the API\n      await apiRequest('POST', '/api/contact', formData);\n      \n      toast({\n        title: language === 'nl' ? \"Bericht verzonden!\" : \"Message sent!\",\n        description: language === 'nl' ? \"Bedankt voor je bericht. We nemen snel contact met je op.\" : \"Thanks for reaching out. We'll get back to you soon.\"\n      });\n      \n      // Reset the form\n      setFormData(initialFormData);\n    } catch (error) {\n      toast({\n        title: language === 'nl' ? \"Fout\" : \"Error\",\n        description: language === 'nl' ? \"Er is iets misgegaan. Probeer het later opnieuw.\" : \"Something went wrong. Please try again later.\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-24 bg-primary relative overflow-hidden\">\n      <div className=\"absolute top-0 left-0 w-full h-full opacity-10\">\n        <div className=\"w-full h-full bg-gradient-to-br from-accent to-primary\"></div>\n      </div>\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4\">\n            {language === 'nl' ? 'Neem Contact Op' : 'Get in Touch'}\n          </h2>\n          <p className=\"text-foreground/70 max-w-2xl mx-auto\">\n            {language === 'nl' \n              ? 'Klaar om je digitale transformatie te starten? Neem vandaag nog contact met ons op.' \n              : 'Ready to start your digital transformation journey? Contact us today.'}\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <motion.div \n            className=\"lg:col-span-2 bg-secondary/80 backdrop-blur-md rounded-2xl p-8 shadow-lg\"\n            initial={{ opacity: 0, x: -30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5 }}\n            viewport={{ once: true }}\n          >\n            <form className=\"space-y-6\" onSubmit={handleSubmit}>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label htmlFor=\"name\" className=\"block text-foreground/80 mb-2\">\n                    {language === 'nl' ? 'Naam' : 'Name'}\n                  </label>\n                  <input \n                    type=\"text\" \n                    id=\"name\" \n                    name=\"name\"\n                    className=\"w-full bg-primary border border-secondary p-3 rounded-lg text-foreground focus:outline-none focus:border-accent\" \n                    placeholder={language === 'nl' ? 'Jouw naam' : 'Your name'}\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-foreground/80 mb-2\">Email</label>\n                  <input \n                    type=\"email\" \n                    id=\"email\" \n                    name=\"email\"\n                    className=\"w-full bg-primary border border-secondary p-3 rounded-lg text-foreground focus:outline-none focus:border-accent\" \n                    placeholder={language === 'nl' ? \"jouw@email.nl\" : \"your@email.com\"}\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label htmlFor=\"company\" className=\"block text-foreground/80 mb-2\">\n                  {language === 'nl' ? 'Bedrijf' : 'Company'}\n                </label>\n                <input \n                  type=\"text\" \n                  id=\"company\" \n                  name=\"company\"\n                  className=\"w-full bg-primary border border-secondary p-3 rounded-lg text-foreground focus:outline-none focus:border-accent\" \n                  placeholder={language === 'nl' ? 'Jouw bedrijfsnaam' : 'Your company name'}\n                  value={formData.company}\n                  onChange={handleChange}\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"projectType\" className=\"block text-foreground/80 mb-2\">\n                  {language === 'nl' ? 'Type project' : 'Project Type'}\n                </label>\n                <select \n                  id=\"projectType\" \n                  name=\"projectType\"\n                  className=\"w-full bg-primary border border-secondary p-3 rounded-lg text-foreground focus:outline-none focus:border-accent\"\n                  value={formData.projectType}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">{language === 'nl' ? 'Selecteer project type' : 'Select project type'}</option>\n                  <option value=\"chatbot\">AI Chatbot</option>\n                  <option value=\"automation\">\n                    {language === 'nl' ? 'Werkstroom Automatisering' : 'Workflow Automation'}\n                  </option>\n                  <option value=\"web\">\n                    {language === 'nl' ? 'Webontwikkeling' : 'Web Development'}\n                  </option>\n                  <option value=\"other\">\n                    {language === 'nl' ? 'Anders' : 'Other'}\n                  </option>\n                </select>\n              </div>\n              \n              <div>\n                <label htmlFor=\"message\" className=\"block text-foreground/80 mb-2\">\n                  {language === 'nl' ? 'Bericht' : 'Message'}\n                </label>\n                <textarea \n                  id=\"message\" \n                  name=\"message\"\n                  rows={4} \n                  className=\"w-full bg-primary border border-secondary p-3 rounded-lg text-foreground focus:outline-none focus:border-accent\" \n                  placeholder={language === 'nl' ? 'Vertel ons over jouw project' : 'Tell us about your project'}\n                  value={formData.message}\n                  onChange={handleChange}\n                  required\n                ></textarea>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <input \n                  type=\"checkbox\" \n                  id=\"consent\" \n                  name=\"consent\"\n                  className=\"mt-1 mr-3\"\n                  checked={formData.consent}\n                  onChange={handleCheckboxChange}\n                  required\n                />\n                <label htmlFor=\"consent\" className=\"text-sm text-foreground/70\">\n                  {language === 'nl' \n                    ? <>Ik geef toestemming aan Digimaatwerk om mijn gegevens te verwerken in overeenstemming met het <a href=\"/privacy-policy\" className=\"text-accent hover:underline\">Privacybeleid</a>. Deze site wordt beschermd door reCAPTCHA en het Google <a href=\"/google-privacy-policy\" className=\"text-accent hover:underline\">Privacybeleid</a> en de <a href=\"/terms-of-service\" className=\"text-accent hover:underline\">Servicevoorwaarden</a> zijn van toepassing.</>\n                    : <>I consent to Digimaatwerk processing my data in accordance with the <a href=\"/privacy-policy\" className=\"text-accent hover:underline\">Privacy Policy</a>. This site is protected by reCAPTCHA and the Google <a href=\"/google-privacy-policy\" className=\"text-accent hover:underline\">Privacy Policy</a> and <a href=\"/terms-of-service\" className=\"text-accent hover:underline\">Terms of Service</a> apply.</>\n                  }\n                </label>\n              </div>\n              \n              <div>\n                <button \n                  type=\"submit\" \n                  className=\"w-full py-3 bg-accent text-primary font-header font-medium rounded-lg transition hover:bg-accent/90 disabled:opacity-70\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting \n                    ? (language === 'nl' ? \"Verzenden...\" : \"Sending...\") \n                    : (language === 'nl' ? \"Verstuur Bericht\" : \"Send Message\")\n                  }\n                </button>\n              </div>\n            </form>\n          </motion.div>\n          \n          <motion.div \n            className=\"bg-secondary/80 backdrop-blur-md rounded-2xl p-8 shadow-lg\"\n            initial={{ opacity: 0, x: 30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5 }}\n            viewport={{ once: true }}\n          >\n            \n            <h3 className=\"text-xl font-header font-semibold mb-6 text-center\">\n              {language === 'nl' ? 'Contactgegevens' : 'Contact Information'}\n            </h3>\n            \n            <div className=\"space-y-6\">\n              <div className=\"flex items-start\">\n                <div className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center mr-4\">\n                  <i className=\"ri-map-pin-line text-accent\"></i>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-1\">{language === 'nl' ? 'Adres' : 'Address'}</h4>\n                  <p className=\"text-foreground/70\">Star Numanstraat 79a<br />9714JL Groningen<br />{language === 'nl' ? 'Nederland' : 'The Netherlands'}</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center mr-4\">\n                  <i className=\"ri-mail-line text-accent\"></i>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-1\">Email</h4>\n                  <a href=\"mailto:info@digimaatwerk.nl\" className=\"text-foreground/70 hover:text-accent\">info@digimaatwerk.nl</a>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center mr-4\">\n                  <i className=\"ri-phone-line text-accent\"></i>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-1\">{language === 'nl' ? 'Telefoon' : 'Phone'}</h4>\n                  <a href=\"tel:+31637353483\" className=\"text-foreground/70 hover:text-accent\">+31 637353483</a>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center mr-4\">\n                  <i className=\"ri-whatsapp-line text-accent\"></i>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-1\">WhatsApp</h4>\n                  <a href=\"https://wa.me/31637353483\" className=\"text-foreground/70 hover:text-accent\">\n                    {language === 'nl' ? 'Stuur een bericht' : 'Send a message'}\n                  </a>\n                </div>\n              </div>\n            </div>\n            \n            <h3 className=\"text-xl font-header font-semibold mt-10 mb-6 text-center\">\n              {language === 'nl' ? 'Volg Ons' : 'Follow Us'}\n            </h3>\n            <div className=\"flex justify-center space-x-4\">\n              <a href=\"https://linkedin.com/company/digimaatwerk\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center hover:bg-accent/30 transition\">\n                <i className=\"ri-linkedin-fill text-accent\"></i>\n              </a>\n              <a href=\"https://instagram.com/digimaatwerk\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center hover:bg-accent/30 transition\">\n                <i className=\"ri-instagram-fill text-accent\"></i>\n              </a>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ContactSection;\n","size_bytes":13547},"client/src/components/CookieConsent.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useLanguage } from '@/lib/languageContext';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Generate unique session ID\nconst generateSessionId = () => {\n  return 'session_' + Math.random().toString(36).substr(2, 9) + '_' + Date.now();\n};\n\n// Get or create session ID\nconst getSessionId = () => {\n  let sessionId = sessionStorage.getItem('digimaatwerk_session_id');\n  if (!sessionId) {\n    sessionId = generateSessionId();\n    sessionStorage.setItem('digimaatwerk_session_id', sessionId);\n  }\n  return sessionId;\n};\n\ninterface CookiePreferences {\n  necessary: boolean;\n  analytics: boolean;\n  marketing: boolean;\n  preferences: boolean;\n}\n\nconst COOKIE_CONSENT_KEY = 'digimaatwerk_cookie_consent';\nconst COOKIE_PREFERENCES_KEY = 'digimaatwerk_cookie_preferences';\n\nexport function CookieConsent() {\n  const { language } = useLanguage();\n  const [showBanner, setShowBanner] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [preferences, setPreferences] = useState<CookiePreferences>({\n    necessary: true, // Always required\n    analytics: false,\n    marketing: false,\n    preferences: false,\n  });\n\n  useEffect(() => {\n    // Check if user has already given consent\n    const hasConsent = localStorage.getItem(COOKIE_CONSENT_KEY);\n    const savedPreferences = localStorage.getItem(COOKIE_PREFERENCES_KEY);\n    \n    if (savedPreferences) {\n      setPreferences(JSON.parse(savedPreferences));\n    }\n    \n    if (!hasConsent) {\n      // Show banner after a short delay and track the event\n      const timer = setTimeout(() => {\n        setShowBanner(true);\n        trackAnalyticsEvent('banner_shown');\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const trackAnalyticsEvent = async (eventType: string, eventData?: any) => {\n    const sessionId = getSessionId();\n    \n    try {\n      await fetch('/api/cookie-analytics', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sessionId,\n          eventType,\n          eventData,\n          pageUrl: window.location.href\n        })\n      });\n    } catch (error) {\n      console.error('Failed to track analytics event:', error);\n    }\n  };\n\n  const acceptAll = () => {\n    const allAccepted = {\n      necessary: true,\n      analytics: true,\n      marketing: true,\n      preferences: true,\n    };\n    \n    savePreferences(allAccepted);\n    setShowBanner(false);\n    setShowSettings(false);\n  };\n\n  const acceptNecessary = () => {\n    const necessaryOnly = {\n      necessary: true,\n      analytics: false,\n      marketing: false,\n      preferences: false,\n    };\n    \n    savePreferences(necessaryOnly);\n    setShowBanner(false);\n    setShowSettings(false);\n  };\n\n  const saveCustomPreferences = () => {\n    savePreferences(preferences);\n    setShowBanner(false);\n    setShowSettings(false);\n  };\n\n  const savePreferences = async (prefs: CookiePreferences) => {\n    const sessionId = getSessionId();\n    \n    // Save to localStorage\n    localStorage.setItem(COOKIE_CONSENT_KEY, 'true');\n    localStorage.setItem(COOKIE_PREFERENCES_KEY, JSON.stringify(prefs));\n    \n    // Track consent in database\n    try {\n      await fetch('/api/cookie-consent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sessionId,\n          necessary: prefs.necessary,\n          analytics: prefs.analytics,\n          marketing: prefs.marketing,\n          preferences: prefs.preferences,\n          language,\n          pageUrl: window.location.href,\n          referrer: document.referrer\n        })\n      });\n    } catch (error) {\n      console.error('Failed to track cookie consent:', error);\n    }\n    \n    // Initialize services based on preferences\n    if (prefs.analytics) {\n      initializeAnalytics();\n    }\n    \n    if (prefs.marketing) {\n      initializeMarketing();\n    }\n    \n    if (prefs.preferences) {\n      initializePreferences();\n    }\n  };\n\n  const initializeAnalytics = () => {\n    // Google Analytics initialization\n    if (typeof window !== 'undefined' && !window.gtag) {\n      const script = document.createElement('script');\n      script.async = true;\n      script.src = 'https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID';\n      document.head.appendChild(script);\n      \n      window.dataLayer = window.dataLayer || [];\n      window.gtag = function() {\n        window.dataLayer.push(arguments);\n      };\n      window.gtag('js', new Date());\n      window.gtag('config', 'GA_MEASUREMENT_ID');\n    }\n  };\n\n  const initializeMarketing = () => {\n    // Marketing cookies initialization (Meta Pixel, etc.)\n    console.log('Marketing cookies initialized');\n  };\n\n  const initializePreferences = () => {\n    // User preference cookies\n    console.log('Preference cookies initialized');\n  };\n\n  const texts = {\n    nl: {\n      title: 'Cookie-instellingen',\n      description: 'Wij gebruiken cookies om uw ervaring op onze website te verbeteren. U kunt hieronder uw voorkeuren aanpassen.',\n      necessary: 'Noodzakelijke cookies',\n      necessaryDesc: 'Deze cookies zijn essentieel voor het functioneren van de website.',\n      analytics: 'Analytische cookies',\n      analyticsDesc: 'Deze cookies helpen ons begrijpen hoe bezoekers onze website gebruiken.',\n      marketing: 'Marketing cookies',\n      marketingDesc: 'Deze cookies worden gebruikt om relevante advertenties te tonen.',\n      preferences: 'Voorkeurscookies',\n      preferencesDesc: 'Deze cookies onthouden uw voorkeuren en instellingen.',\n      acceptAll: 'Alles accepteren',\n      acceptNecessary: 'Alleen noodzakelijke',\n      customize: 'Aanpassen',\n      save: 'Voorkeuren opslaan',\n      learnMore: 'Meer informatie',\n      close: 'Sluiten'\n    },\n    en: {\n      title: 'Cookie Settings',\n      description: 'We use cookies to improve your experience on our website. You can adjust your preferences below.',\n      necessary: 'Necessary cookies',\n      necessaryDesc: 'These cookies are essential for the website to function.',\n      analytics: 'Analytics cookies',\n      analyticsDesc: 'These cookies help us understand how visitors use our website.',\n      marketing: 'Marketing cookies',\n      marketingDesc: 'These cookies are used to show relevant advertisements.',\n      preferences: 'Preference cookies',\n      preferencesDesc: 'These cookies remember your preferences and settings.',\n      acceptAll: 'Accept all',\n      acceptNecessary: 'Necessary only',\n      customize: 'Customize',\n      save: 'Save preferences',\n      learnMore: 'Learn more',\n      close: 'Close'\n    }\n  };\n\n  const t = texts[language as keyof typeof texts];\n\n  return (\n    <AnimatePresence>\n      {showBanner && (\n        <motion.div\n          initial={{ y: 100, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          exit={{ y: 100, opacity: 0 }}\n          className=\"fixed bottom-0 left-0 right-0 z-50 bg-secondary border-t border-accent/20 shadow-lg\"\n        >\n          <div className=\"max-w-7xl mx-auto p-4\">\n            <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between gap-4\">\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold mb-2\">{t.title}</h3>\n                <p className=\"text-sm text-foreground/80 mb-4 md:mb-0\">\n                  {t.description}\n                </p>\n              </div>\n              \n              <div className=\"flex flex-wrap gap-2\">\n                <button\n                  onClick={() => {\n                    setShowSettings(true);\n                    trackAnalyticsEvent('settings_opened');\n                  }}\n                  className=\"px-4 py-2 text-sm border border-accent/30 rounded-lg hover:bg-accent/10 transition\"\n                >\n                  {t.customize}\n                </button>\n                <button\n                  onClick={acceptNecessary}\n                  className=\"px-4 py-2 text-sm bg-secondary/50 rounded-lg hover:bg-secondary/70 transition\"\n                >\n                  {t.acceptNecessary}\n                </button>\n                <button\n                  onClick={acceptAll}\n                  className=\"px-4 py-2 text-sm bg-accent text-primary rounded-lg hover:bg-accent/90 transition\"\n                >\n                  {t.acceptAll}\n                </button>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {showSettings && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50 backdrop-blur-sm\"\n          onClick={() => setShowSettings(false)}\n        >\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            className=\"bg-secondary rounded-xl max-w-2xl w-full max-h-[80vh] overflow-y-auto\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold\">{t.title}</h2>\n                <button\n                  onClick={() => setShowSettings(false)}\n                  className=\"p-2 hover:bg-primary/10 rounded-lg transition\"\n                >\n                  ✕\n                </button>\n              </div>\n\n              <p className=\"text-foreground/80 mb-6\">{t.description}</p>\n\n              <div className=\"space-y-4\">\n                {/* Necessary Cookies */}\n                <div className=\"flex items-start justify-between p-4 bg-primary/5 rounded-lg\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-medium mb-1\">{t.necessary}</h3>\n                    <p className=\"text-sm text-foreground/70\">{t.necessaryDesc}</p>\n                  </div>\n                  <div className=\"ml-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={true}\n                      disabled={true}\n                      className=\"w-4 h-4 text-accent\"\n                    />\n                  </div>\n                </div>\n\n                {/* Analytics Cookies */}\n                <div className=\"flex items-start justify-between p-4 bg-primary/5 rounded-lg\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-medium mb-1\">{t.analytics}</h3>\n                    <p className=\"text-sm text-foreground/70\">{t.analyticsDesc}</p>\n                  </div>\n                  <div className=\"ml-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={preferences.analytics}\n                      onChange={(e) => setPreferences(prev => ({ ...prev, analytics: e.target.checked }))}\n                      className=\"w-4 h-4 text-accent\"\n                    />\n                  </div>\n                </div>\n\n                {/* Marketing Cookies */}\n                <div className=\"flex items-start justify-between p-4 bg-primary/5 rounded-lg\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-medium mb-1\">{t.marketing}</h3>\n                    <p className=\"text-sm text-foreground/70\">{t.marketingDesc}</p>\n                  </div>\n                  <div className=\"ml-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={preferences.marketing}\n                      onChange={(e) => setPreferences(prev => ({ ...prev, marketing: e.target.checked }))}\n                      className=\"w-4 h-4 text-accent\"\n                    />\n                  </div>\n                </div>\n\n                {/* Preference Cookies */}\n                <div className=\"flex items-start justify-between p-4 bg-primary/5 rounded-lg\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-medium mb-1\">{t.preferences}</h3>\n                    <p className=\"text-sm text-foreground/70\">{t.preferencesDesc}</p>\n                  </div>\n                  <div className=\"ml-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={preferences.preferences}\n                      onChange={(e) => setPreferences(prev => ({ ...prev, preferences: e.target.checked }))}\n                      className=\"w-4 h-4 text-accent\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex flex-col-reverse sm:flex-row gap-3 mt-6\">\n                <button\n                  onClick={acceptNecessary}\n                  className=\"px-6 py-2 bg-secondary/50 rounded-lg hover:bg-secondary/70 transition\"\n                >\n                  {t.acceptNecessary}\n                </button>\n                <button\n                  onClick={saveCustomPreferences}\n                  className=\"px-6 py-2 bg-accent text-primary rounded-lg hover:bg-accent/90 transition\"\n                >\n                  {t.save}\n                </button>\n              </div>\n\n              <div className=\"mt-4 text-center\">\n                <a\n                  href=\"/legal/privacy\"\n                  className=\"text-sm text-accent hover:underline\"\n                  target=\"_blank\"\n                >\n                  {t.learnMore}\n                </a>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}\n\n// Cookie utility functions\nexport const cookieUtils = {\n  // Check if a specific cookie type is allowed\n  isAllowed: (type: keyof CookiePreferences): boolean => {\n    const preferences = localStorage.getItem(COOKIE_PREFERENCES_KEY);\n    if (!preferences) return false;\n    \n    try {\n      const parsed = JSON.parse(preferences);\n      return parsed[type] || false;\n    } catch {\n      return false;\n    }\n  },\n\n  // Set a cookie if the category is allowed\n  setCookie: (name: string, value: string, days: number = 365, category: keyof CookiePreferences = 'necessary') => {\n    if (!cookieUtils.isAllowed(category)) return false;\n    \n    const expires = new Date();\n    expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));\n    document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/;SameSite=Lax`;\n    return true;\n  },\n\n  // Get a cookie value\n  getCookie: (name: string): string | null => {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  },\n\n  // Delete a cookie\n  deleteCookie: (name: string) => {\n    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\n  }\n};\n\n// Extend window type for analytics\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}","size_bytes":15182},"client/src/components/FallbackCaseStudyAnimation.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface FallbackCaseStudyAnimationProps {\n  category: string;\n  className?: string;\n  height?: string;\n}\n\nconst FallbackCaseStudyAnimation: React.FC<FallbackCaseStudyAnimationProps> = ({\n  category,\n  className = \"h-64 my-8\",\n  height = \"300px\"\n}) => {\n  // Determine colors based on category\n  let mainColor = '#14b8a6'; // Default teal color\n  let gradientColor = '#0f766e';\n  let icon = '💻'; // Default icon\n  \n  if (category === 'Automatisering' || category === 'Automation') {\n    mainColor = '#0ea5e9';\n    gradientColor = '#0284c7';\n    icon = '⚡'; // Changed to lightning bolt icon for Fast Taxi\n  } else if (category === 'Webontwikkeling' || category === 'Web Development') {\n    mainColor = '#14b8a6';\n    gradientColor = '#0f766e';\n    icon = '🌐';\n  } else if (category === 'AI & Chatbots') {\n    mainColor = '#06b6d4';\n    gradientColor = '#0891b2';\n    icon = '🤖';\n  }\n  \n  return (\n    <div \n      className={`${className} rounded-lg overflow-hidden relative`} \n      style={{ height, backgroundColor: '#0f172a' }}\n    >\n      {/* Animated gradient background */}\n      <div \n        className=\"absolute inset-0 opacity-30\"\n        style={{ \n          background: `linear-gradient(135deg, ${mainColor}, ${gradientColor})`,\n          animation: 'pulse 6s ease-in-out infinite'\n        }}\n      />\n      \n      {/* Animated icons related to the category */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        {Array.from({ length: 15 }).map((_, i) => {\n          // Determine icon based on category\n          let itemIcon = '🔹';\n          if (category === 'Automatisering' || category === 'Automation') {\n            itemIcon = i % 3 === 0 ? '⚡' : (i % 3 === 1 ? '🚕' : '⚙️');\n          } else if (category === 'Webontwikkeling' || category === 'Web Development') {\n            itemIcon = i % 3 === 0 ? '🌐' : (i % 3 === 1 ? '💻' : '📱');\n          } else if (category === 'AI & Chatbots') {\n            itemIcon = i % 3 === 0 ? '🤖' : (i % 3 === 1 ? '💬' : '🧠');\n          }\n          \n          // Calculate random but fixed positions\n          const leftPos = `${(i * 6 + Math.sin(i) * 20) % 100}%`;\n          const topPos = `${(i * 7 + Math.cos(i) * 25) % 100}%`;\n          \n          return (\n            <motion.div\n              key={i}\n              className=\"absolute flex items-center justify-center text-xl\"\n              style={{ \n                left: leftPos,\n                top: topPos,\n                opacity: 0.7,\n                filter: `drop-shadow(0 0 10px ${mainColor})`,\n                zIndex: 5\n              }}\n              animate={{\n                y: [0, -15, 0],\n                scale: [1, 1.2, 1],\n                opacity: [0.4, 0.7, 0.4]\n              }}\n              transition={{\n                duration: 3 + (i % 3) * 2,\n                repeat: Infinity,\n                ease: \"easeInOut\",\n                delay: i * 0.2\n              }}\n            >\n              {itemIcon}\n            </motion.div>\n          );\n        })}\n      </div>\n      \n      {/* Central animated icon with glow effect */}\n      <motion.div \n        className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10\"\n        animate={{\n          scale: [1, 1.1, 1],\n          rotate: [0, 5, 0, -5, 0]\n        }}\n        transition={{\n          duration: 5,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      >\n        <div \n          className=\"relative flex items-center justify-center\"\n        >\n          {/* Glow effect */}\n          <div \n            className=\"absolute inset-0 rounded-full blur-xl\"\n            style={{ \n              backgroundColor: mainColor,\n              opacity: 0.5,\n              transform: 'scale(1.5)'\n            }}\n          />\n          \n          {/* Icon with animated border */}\n          <motion.div \n            className=\"relative flex items-center justify-center font-bold text-7xl rounded-full p-8\"\n            style={{ \n              boxShadow: `0 0 30px ${mainColor}`,\n              background: `radial-gradient(circle, ${mainColor}30, ${gradientColor}70)`,\n              borderRadius: '50%',\n            }}\n            animate={{\n              boxShadow: [\n                `0 0 20px ${mainColor}80`,\n                `0 0 40px ${mainColor}`,\n                `0 0 20px ${mainColor}80`\n              ]\n            }}\n            transition={{\n              duration: 3,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }}\n          >\n            {icon}\n          </motion.div>\n        </div>\n      </motion.div>\n      \n      {/* Category label */}\n      <motion.div \n        className=\"absolute bottom-4 left-0 right-0 text-center text-2xl font-semibold\"\n        animate={{ y: [5, 0, 5] }}\n        transition={{\n          duration: 3,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n        style={{ color: mainColor }}\n      >\n        {category}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default FallbackCaseStudyAnimation;","size_bytes":5111},"client/src/components/Footer.tsx":{"content":"import { useLanguage } from '@/lib/languageContext';\n\nconst Footer = () => {\n  const { t, language } = useLanguage();\n  const currentYear = new Date().getFullYear();\n  \n  return (\n    <footer className=\"bg-primary py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 mb-12\">\n          <div>\n            <a href=\"#\" className=\"flex items-center space-x-2 mb-6\">\n              <div className=\"w-10 h-10 rounded-lg bg-accent flex items-center justify-center overflow-hidden\">\n                <img src=\"/digimaatwerkLOGO.png\" alt=\"Digimaatwerk Logo\" className=\"w-full h-full object-cover\" />\n              </div>\n              <span className=\"text-xl font-header font-semibold text-foreground\">Digimaatwerk</span>\n            </a>\n            <p className=\"text-foreground/70 mb-4\">\n              {language === 'nl' \n                ? 'Experts op het gebied van digitale transformatie, gespecialiseerd in AI-chatbots, werkstroomautomatisering en webontwikkeling.'\n                : 'Digital transformation experts specializing in AI chatbots, workflow automation, and web development.'}\n            </p>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-header font-medium mb-4\">{t('footer.services')}</h4>\n            <ul className=\"space-y-2\">\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'AI Chatbots' : 'AI Chatbots'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Werkstroom Automatisering' : 'Workflow Automation'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Webontwikkeling' : 'Web Development'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'UI/UX Ontwerp' : 'UI/UX Design'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Technisch Advies' : 'Technical Consulting'}\n              </a></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-header font-medium mb-4\">{t('footer.company')}</h4>\n            <ul className=\"space-y-2\">\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Over Ons' : 'About Us'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Succesverhalen' : 'Case Studies'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Getuigenissen' : 'Testimonials'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Partners' : 'Partners'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Carrières' : 'Careers'}\n              </a></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h4 className=\"text-lg font-header font-medium mb-4\">{t('footer.legal')}</h4>\n            <ul className=\"space-y-2\">\n              <li><a href=\"/privacy-policy\" className=\"text-foreground/70 hover:text-accent\">{t('footer.privacy')}</a></li>\n              <li><a href=\"/google-privacy-policy\" className=\"text-foreground/70 hover:text-accent\">{t('footer.cookies')}</a></li>\n              <li><a href=\"/terms-of-service\" className=\"text-foreground/70 hover:text-accent\">{t('footer.terms')}</a></li>\n              <li><a href=\"/privacy-policy\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'AVG Compliance' : 'GDPR Compliance'}\n              </a></li>\n              <li><a href=\"#\" className=\"text-foreground/70 hover:text-accent\">\n                {language === 'nl' ? 'Site Credits' : 'Site Credits'}\n              </a></li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-secondary pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <div className=\"mb-4 md:mb-0 text-foreground/60 text-sm\">\n            &copy; {currentYear} Digimaatwerk. {t('footer.copyright')}. \n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-1\">\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n              <span className=\"text-xs text-foreground/60\">\n                {language === 'nl' ? 'Beveiliging Geverifieerd' : 'Security Verified'}\n              </span>\n            </div>\n            <div className=\"w-px h-4 bg-secondary\"></div>\n            <div className=\"flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 1024 1024\" fill=\"currentColor\" className=\"text-foreground/70 h-4\">\n                <path d=\"M407.7 926.7c-75.6-13.3-144.6-45.4-207-96.5-8.4-6.9-26.9-25.3-33.7-33.7-40.6-49.2-70.7-103.6-88.5-159.9-15.1-47.8-23.7-108.8-22-155.3 2.6-70.2 18.9-133.7 50.5-197.3 28.8-57.8 73.4-114.5 122.9-156 10.8-9 11.5-9.5 13.4-7.6 1.1 1.1 1.7 3.1 1.7 5.5 0 5.2-2.5 10.7-5.8 12.6-24.5 14.4-63.2 48.9-88 78.5-21.8 26.1-45.3 63.1-59.3 93.7-14.1 30.7-27.2 72.4-33.5 106.4-4.1 22.4-5.4 35.6-6.5 68.1-1.1 33.3.6 62.5 5.4 91.3 20.2 121.7 89.5 225 196.9 293.8 45.4 29.1 102.4 51.9 153.1 61.4 18.3 3.4 46.7 7.7 52.8 8 4.2.2 4.8.5 5.2 2.8.4 2.2-.1 2.8-3.9 4.2-13.3 4.9-42.4 11.3-58.5 12.8-24.5 2.4-70.3 2-95.2-.8z\"/>\n                <path d=\"M539.9 924.8c-10.7-2-11.3-2.2-11.3-4.8s.4-2.6 5.5-3.1c9.9-1.1 31.9-5.3 42.7-8.1 79.9-21.4 141.2-59.9 196.3-123.8 6.8-7.9 14.8-17.7 17.7-21.9 3-4.1 5.8-7.6 6.2-7.6.5 0 .7 26.5.6 58.7l-.3 58.7-2.1 2.1c-3.5 3.5-31.6 20.6-43 26.1-45.7 22.2-103.1 34.9-156 34.9-18.7 0-45.3-2.7-56.3-5.7zM595.7 772.9c-75.1-7.8-147.4-51.3-193.2-116.5-26.8-38.2-45.1-86.9-50.2-134-4.7-43.7 7.7-110.9 28.3-152.9 34.7-70.9 100.7-129 176.9-155.7 34.1-11.9 63.7-16.8 103-16.8 74.3 0 138 23 194.2 70.1 32.5 27.1 61.5 66.9 77.1 105.7 59.4 148.2-7.3 315.6-152.9 383.4-50.4 23.5-119.9 32.3-183.2 23.1zM849.8 691.5c.1-82.9.3-150.9.5-151 .2-.2 2.3 1.9 4.8 4.5 5.8 6.1 23.8 22.3 32.5 29.1 94.6 76 152 191.8 155.1 313.5 1.8 72.6-10.4 136.7-38.3 201.2-8.8 20.3-15.9 33.4-29.5 54.6-18.1 28.3-29.6 43.2-52.4 68-21.4 23.2-57.7 54.3-59.9 51.2-.2-.2-.4-1.7-.4-3.3 0-1.5 1.6-5.1 3.5-7.9 28.3-41.1 48.5-86.7 61.4-138.4 7.9-31.6 11.5-55.3 13.9-90.6 3.6-54 .7-106-8.6-154-11.6-60.7-33.7-121.6-62.6-172-6.1-10.7-13.9-23.1-17.3-27.4-3.4-4.4-6.2-8.3-6.2-8.7 0-.5 1.2-.8 2.6-.8 2.6 0 2.6-3.5 2.9 31.5z\"/>\n              </svg>\n              <span className=\"text-xs text-foreground/60 ml-1\">\n                {language === 'nl' ? 'W3C Gevalideerd' : 'W3C Validated'}\n              </span>\n            </div>\n            <div className=\"w-px h-4 bg-secondary\"></div>\n            <div className=\"flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 480\" className=\"h-3 w-5 mr-1\">\n                <path fill=\"#21468B\" d=\"M0 0h640v480H0z\"/>\n                <path fill=\"#FFF\" d=\"M0 0h640v320H0z\"/>\n                <path fill=\"#AE1C28\" d=\"M0 0h640v160H0z\"/>\n              </svg>\n              <span className=\"text-xs text-foreground/60\">\n                {language === 'nl' ? 'Gemaakt in Nederland' : 'Made in Netherlands'}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":7792},"client/src/components/Header.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { useLanguage } from '@/lib/languageContext';\nimport LanguageSwitcher from './LanguageSwitcher';\nimport MobileMenu from './MobileMenu';\nimport { Menu, ChevronDown } from 'lucide-react';\n\nconst Header = () => {\n  const [scrolled, setScrolled] = useState(false);\n  const [servicesDropdownOpen, setServicesDropdownOpen] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const { t } = useLanguage();\n  const [location, navigate] = useLocation();\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  \n  useEffect(() => {\n    const handleScroll = () => {\n      const isScrolled = window.scrollY > 10;\n      if (isScrolled !== scrolled) {\n        setScrolled(isScrolled);\n      }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setServicesDropdownOpen(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    document.addEventListener('mousedown', handleClickOutside);\n    \n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [scrolled]);\n\n  const toggleMobileMenu = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n  };\n  \n  const toggleServicesDropdown = () => {\n    setServicesDropdownOpen(!servicesDropdownOpen);\n  };\n\n  const scrollToSection = (sectionId: string) => {\n    // If we're not on the homepage, navigate there first\n    if (location !== '/') {\n      navigate('/');\n      // Wait for navigation to complete, then scroll\n      setTimeout(() => {\n        const element = document.getElementById(sectionId);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth' });\n        }\n      }, 100);\n    } else {\n      // We're already on homepage, just scroll\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  };\n\n  const handleContactClick = () => {\n    scrollToSection('contact');\n  };\n\n  const handleAboutClick = () => {\n    scrollToSection('testimonials');\n  };\n\n  return (\n    <header className={`fixed top-0 left-0 w-full z-50 transition-all duration-300 ${scrolled ? 'bg-primary/90 backdrop-blur-md shadow-md' : 'bg-transparent'}`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center py-4\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\n              <div className=\"w-10 h-10 rounded-lg bg-accent flex items-center justify-center overflow-hidden\">\n                <img src=\"/digimaatwerkLOGO.png\" alt=\"Digimaatwerk Logo\" className=\"w-full h-full object-cover\" />\n              </div>\n              <span className=\"text-xl font-header font-semibold text-foreground\">Digimaatwerk</span>\n            </Link>\n          </div>\n          \n          <nav className=\"hidden md:flex space-x-8\">\n            <div className=\"relative\" ref={dropdownRef}>\n              <button \n                onClick={toggleServicesDropdown}\n                className=\"text-foreground/80 hover:text-accent transition font-body flex items-center\"\n              >\n                {t('header.services')} <ChevronDown className={`ml-1 h-4 w-4 transition-transform ${servicesDropdownOpen ? 'rotate-180' : ''}`} />\n              </button>\n              \n              {servicesDropdownOpen && (\n                <div className=\"absolute mt-2 w-60 rounded-lg shadow-lg py-1 bg-primary/95 backdrop-blur-md border border-accent/20 z-20\">\n                  <Link href=\"/services/ai-chatbots\" className=\"block px-4 py-2 text-sm text-foreground/80 hover:bg-accent/10 hover:text-accent\">\n                    AI Chatbots\n                  </Link>\n                  <Link href=\"/services/workflow-automation\" className=\"block px-4 py-2 text-sm text-foreground/80 hover:bg-accent/10 hover:text-accent\">\n                    Workflow Automatisering\n                  </Link>\n                  <Link href=\"/services/web-development\" className=\"block px-4 py-2 text-sm text-foreground/80 hover:bg-accent/10 hover:text-accent\">\n                    Webontwikkeling\n                  </Link>\n                  <Link href=\"/services/microsoft-365\" className=\"block px-4 py-2 text-sm text-foreground/80 hover:bg-accent/10 hover:text-accent\">\n                    Microsoft 365\n                  </Link>\n                </div>\n              )}\n            </div>\n            <Link href=\"/portfolio\" className=\"text-foreground/80 hover:text-accent transition font-body\">{t('header.cases')}</Link>\n            <button \n              onClick={handleAboutClick} \n              className=\"text-foreground/80 hover:text-accent transition font-body cursor-pointer\"\n            >\n              {t('header.about')}\n            </button>\n            <Link href=\"/blogs\" className=\"text-foreground/80 hover:text-accent transition font-body\">{t('header.blogs')}</Link>\n          </nav>\n          \n          <div className=\"flex items-center space-x-4\">\n            <LanguageSwitcher />\n            <button \n              onClick={handleContactClick}\n              className=\"hidden md:block px-5 py-2 rounded-lg bg-accent text-primary font-header font-medium transition hover:bg-accent/90\"\n            >\n              {t('header.contact')}\n            </button>\n            <button\n              className=\"md:hidden text-foreground\"\n              id=\"mobile-menu-button\"\n              onClick={toggleMobileMenu}\n              aria-label=\"Open menu\"\n            >\n              <Menu className=\"h-6 w-6\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <MobileMenu isOpen={mobileMenuOpen} onClose={() => setMobileMenuOpen(false)} />\n    </header>\n  );\n};\n\nexport default Header;\n","size_bytes":5987},"client/src/components/HeroSection.tsx":{"content":"// HeroSection.tsx\nimport { useLanguage } from '@/lib/languageContext';\n\nconst HeroSection = () => {\n  const { t } = useLanguage();\n  \n  return (\n    <section className=\"hero-section relative overflow-hidden\">\n      {/* Background Animation */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-primary to-secondary\">\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 rounded-full bg-accent/30 blur-3xl animate-pulse\"></div>\n        <div className=\"absolute top-1/3 left-1/3 transform -translate-x-1/2 -translate-y-1/2 w-48 h-48 rounded-full bg-accent/20 blur-2xl animate-pulse\" style={{ animationDelay: '1s' }}></div>\n        <div className=\"absolute bottom-1/4 right-1/3 w-56 h-56 rounded-full bg-accent/25 blur-3xl animate-pulse\" style={{ animationDelay: '2s' }}></div>\n      </div>\n      \n      {/* Content Container */}\n      <div className=\"relative z-10 flex flex-col justify-center items-center px-4 sm:px-6 lg:px-8 py-24 md:py-32\">\n        {/* Main Content */}\n        <div className=\"text-center max-w-4xl mb-16 md:mb-20\">\n          <h1 className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-header font-bold mb-4 md:mb-6 text-foreground\">\n            {t('hero.title')}\n          </h1>\n          <p className=\"text-base sm:text-lg md:text-xl lg:text-2xl text-foreground/80 mb-8 md:mb-10 font-body max-w-2xl mx-auto\">\n            {t('hero.subtitle')}\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center gap-4 mb-12\">\n            <a href=\"#services\" className=\"px-8 py-3 bg-accent text-primary font-header font-medium rounded-lg shadow-lg transition-all duration-300 hover:bg-primary hover:text-accent hover:scale-105 hover:shadow-xl\">\n              {t('hero.cta')}\n            </a>\n            <a href=\"#contact\" className=\"px-8 py-3 bg-transparent border border-foreground/30 text-foreground font-header font-medium rounded-lg shadow-lg transition-all duration-300 hover:bg-accent hover:text-primary hover:border-accent hover:scale-105 hover:shadow-xl\">\n              {t('hero.contact')}\n            </a>\n          </div>\n        </div>\n        \n        {/* Service Icons */}\n        <div className=\"w-full max-w-7xl mx-auto\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6 items-stretch\">\n            <div className=\"bg-secondary/50 backdrop-blur-md rounded-lg p-6 flex flex-col text-center min-h-[280px] h-full\">\n              <div className=\"w-16 h-16 mb-4 flex items-center justify-center bg-accent/20 rounded-lg mx-auto flex-shrink-0\">\n                <svg className=\"w-8 h-8 text-accent\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M20 4H4C2.89543 4 2 4.89543 2 6V18C2 19.1046 2.89543 20 4 20H20C21.1046 20 22 19.1046 22 18V6C22 4.89543 21.1046 4 20 4Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M8 10H6V16H8V10Z\" fill=\"currentColor\"/>\n                  <path d=\"M14 10H12V16H14V10Z\" fill=\"currentColor\"/>\n                  <path d=\"M20 10H18V16H20V10Z\" fill=\"currentColor\"/>\n                  <path d=\"M10 12H14V14H10V12Z\" fill=\"currentColor\"/>\n                  <path d=\"M16 12H20V14H16V12Z\" fill=\"currentColor\"/>\n                </svg>\n              </div>\n              <div className=\"flex flex-col flex-grow\">\n                <h3 className=\"text-lg font-medium mb-2\">{t('hero.services.web.title')}</h3>\n                <p className=\"text-foreground/70 text-sm\">{t('hero.services.web.description')}</p>\n              </div>\n            </div>\n            \n            <div className=\"bg-secondary/50 backdrop-blur-md rounded-lg p-6 flex flex-col text-center min-h-[280px] h-full\">\n              <div className=\"w-16 h-16 mb-4 flex items-center justify-center bg-accent/20 rounded-lg mx-auto flex-shrink-0\">\n                <svg className=\"w-8 h-8 text-accent\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M12 16L16 12L12 8\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M8 12H16\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </div>\n              <div className=\"flex flex-col flex-grow\">\n                <h3 className=\"text-lg font-medium mb-2\">{t('hero.services.automation.title')}</h3>\n                <p className=\"text-foreground/70 text-sm\">{t('hero.services.automation.description')}</p>\n              </div>\n            </div>\n            \n            <div className=\"bg-secondary/50 backdrop-blur-md rounded-lg p-6 flex flex-col text-center min-h-[280px] h-full\">\n              <div className=\"w-16 h-16 mb-4 flex items-center justify-center bg-accent/20 rounded-lg mx-auto flex-shrink-0\">\n                <svg className=\"w-8 h-8 text-accent\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M21 15C21 16.6569 19.6569 18 18 18H17.2829C17.1241 18 16.9716 18.0636 16.8672 18.1769L15.7205 19.4323C14.9289 20.3064 13.5943 20.3064 12.8026 19.4323L11.6559 18.1769C11.5515 18.0636 11.399 18 11.2402 18H6C4.34315 18 3 16.6569 3 15V7C3 5.34315 4.34315 4 6 4H18C19.6569 4 21 5.34315 21 7V15Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M7 9H17\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M7 13H13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </div>\n              <div className=\"flex flex-col flex-grow\">\n                <h3 className=\"text-lg font-medium mb-2\">{t('hero.services.chatbot.title')}</h3>\n                <p className=\"text-foreground/70 text-sm\">{t('hero.services.chatbot.description')}</p>\n              </div>\n            </div>\n            \n            <div className=\"bg-secondary/50 backdrop-blur-md rounded-lg p-6 flex flex-col text-center min-h-[280px] h-full\">\n              <div className=\"w-16 h-16 mb-4 flex items-center justify-center bg-accent/20 rounded-lg mx-auto flex-shrink-0\">\n                <svg className=\"w-8 h-8 text-accent\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M17.5 19H16.5C15.1193 19 14 17.8807 14 16.5V7.5C14 6.11929 15.1193 5 16.5 5H17.5C18.8807 5 20 6.11929 20 7.5V16.5C20 17.8807 18.8807 19 17.5 19Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M6.5 19H7.5C8.88071 19 10 17.8807 10 16.5V7.5C10 6.11929 8.88071 5 7.5 5H6.5C5.11929 5 4 6.11929 4 7.5V16.5C4 17.8807 5.11929 19 6.5 19Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M14 8H10\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M14 12H10\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M14 16H10\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </div>\n              <div className=\"flex flex-col flex-grow\">\n                <h3 className=\"text-lg font-medium mb-2\">{t('hero.services.microsoft365.title')}</h3>\n                <p className=\"text-foreground/70 text-sm\">{t('hero.services.microsoft365.description')}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Scroll Indicator */}\n      <div className=\"absolute bottom-10 left-1/2 transform -translate-x-1/2 z-10\">\n        <a href=\"#services\" className=\"flex flex-col items-center justify-center text-foreground/70 hover:text-accent transition\">\n          <span className=\"text-sm mb-2\">{t('hero.cta')}</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 animate-bounce\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\n          </svg>\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroSection;\n","size_bytes":8534},"client/src/components/LanguageSwitcher.tsx":{"content":"import { useLanguage } from '@/lib/languageContext';\nimport { Button } from '@/components/ui/button';\nimport { \n  DropdownMenu, \n  DropdownMenuContent, \n  DropdownMenuItem, \n  DropdownMenuTrigger \n} from '@/components/ui/dropdown-menu';\nimport { GlobeIcon } from 'lucide-react';\n\nconst LanguageSwitcher = () => {\n  const { language, setLanguage, t } = useLanguage();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"sm\" className=\"flex items-center gap-1\">\n          <GlobeIcon className=\"h-4 w-4\" />\n          <span className=\"hidden md:inline\">{t('language')}</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem \n          onClick={() => setLanguage('nl')}\n          className={`${language === 'nl' ? 'bg-accent/10 font-medium' : ''}`}\n        >\n          🇳🇱 {t('language.dutch')}\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => setLanguage('en')}\n          className={`${language === 'en' ? 'bg-accent/10 font-medium' : ''}`}\n        >\n          🇬🇧 {t('language.english')}\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n\nexport default LanguageSwitcher;","size_bytes":1262},"client/src/components/MobileMenu.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { useLanguage } from '@/lib/languageContext';\nimport { X, ChevronDown, ChevronRight } from 'lucide-react';\n\ninterface MobileMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst MobileMenu = ({ isOpen, onClose }: MobileMenuProps) => {\n  const { t, language, setLanguage } = useLanguage();\n  const [servicesSubMenuOpen, setServicesSubMenuOpen] = useState(false);\n  const [location, navigate] = useLocation();\n  \n  const closeMobileMenu = () => {\n    onClose();\n  };\n\n  useEffect(() => {\n    const handleEscapeKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        closeMobileMenu();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, []);\n\n  // Prevent body scroll when menu is open\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n      document.body.style.position = 'fixed';\n      document.body.style.width = '100%';\n      document.body.style.height = '100%';\n    } else {\n      document.body.style.overflow = '';\n      document.body.style.position = '';\n      document.body.style.width = '';\n      document.body.style.height = '';\n    }\n\n    return () => {\n      document.body.style.overflow = '';\n      document.body.style.position = '';\n      document.body.style.width = '';\n      document.body.style.height = '';\n    };\n  }, [isOpen]);\n\n  const handleNavClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    closeMobileMenu();\n  };\n  \n  const toggleServicesSubMenu = () => {\n    setServicesSubMenuOpen(!servicesSubMenuOpen);\n  };\n\n  const scrollToSection = (sectionId: string) => {\n    closeMobileMenu();\n    // If we're not on the homepage, navigate there first\n    if (location !== '/') {\n      navigate('/');\n      // Wait for navigation to complete, then scroll\n      setTimeout(() => {\n        const element = document.getElementById(sectionId);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth' });\n        }\n      }, 100);\n    } else {\n      // We're already on homepage, just scroll\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  };\n\n  const handleContactClick = () => {\n    scrollToSection('contact');\n  };\n\n  const handleAboutClick = () => {\n    scrollToSection('testimonials');\n  };\n\n  return (\n    <>\n      {/* Backdrop overlay */}\n      {isOpen && (\n        <div \n          className=\"fixed inset-0 bg-black/50 md:hidden\"\n          style={{ \n            zIndex: 9998,\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          }}\n          onClick={closeMobileMenu}\n        />\n      )}\n      \n      {/* Mobile menu */}\n      <div \n        id=\"mobile-menu\" \n        className={`fixed inset-0 bg-primary transform transition-transform duration-300 ease-in-out md:hidden overflow-y-auto ${\n          isOpen ? 'translate-x-0' : 'translate-x-full'\n        }`}\n        style={{ \n          zIndex: 9999,\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          height: '100vh',\n          width: '100vw'\n        }}\n      >\n      <div className=\"flex justify-end p-4\">\n        <button\n          id=\"close-menu-button\"\n          className=\"text-foreground\"\n          onClick={closeMobileMenu}\n          aria-label=\"Close menu\"\n        >\n          <X className=\"h-6 w-6\" />\n        </button>\n      </div>\n      <nav className=\"flex flex-col items-center space-y-6 mt-16\">\n        <div className=\"flex flex-col items-center\">\n          <button\n            className=\"flex items-center text-xl text-foreground/80 hover:text-accent transition font-body\"\n            onClick={toggleServicesSubMenu}\n          >\n            {t('header.services')} \n            {servicesSubMenuOpen ? \n              <ChevronDown className=\"ml-1 h-5 w-5\" /> : \n              <ChevronRight className=\"ml-1 h-5 w-5\" />\n            }\n          </button>\n          \n          {servicesSubMenuOpen && (\n            <div className=\"mt-3 space-y-4 flex flex-col items-center\">\n              <Link \n                href=\"/services/ai-chatbots\" \n                className=\"text-lg text-foreground/80 hover:text-accent transition font-body\"\n                onClick={closeMobileMenu}\n              >\n                AI Chatbots\n              </Link>\n              <Link \n                href=\"/services/workflow-automation\" \n                className=\"text-lg text-foreground/80 hover:text-accent transition font-body\"\n                onClick={closeMobileMenu}\n              >\n                Workflow Automatisering\n              </Link>\n              <Link \n                href=\"/services/web-development\" \n                className=\"text-lg text-foreground/80 hover:text-accent transition font-body\"\n                onClick={closeMobileMenu}\n              >\n                Webontwikkeling\n              </Link>\n              <Link \n                href=\"/services/microsoft-365\" \n                className=\"text-lg text-foreground/80 hover:text-accent transition font-body\"\n                onClick={closeMobileMenu}\n              >\n                Microsoft 365\n              </Link>\n            </div>\n          )}\n        </div>\n        \n        <Link \n          href=\"/portfolio\" \n          className=\"text-xl text-foreground/80 hover:text-accent transition font-body\"\n          onClick={closeMobileMenu}\n        >\n          {t('header.cases')}\n        </Link>\n        <button \n          onClick={handleAboutClick}\n          className=\"text-xl text-foreground/80 hover:text-accent transition font-body\"\n        >\n          {t('header.about')}\n        </button>\n        <Link \n          href=\"/blogs\" \n          className=\"text-xl text-foreground/80 hover:text-accent transition font-body\"\n          onClick={closeMobileMenu}\n        >\n          {t('header.blogs')}\n        </Link>\n        \n        {/* Language switcher */}\n        <div className=\"flex space-x-4 mt-4\">\n          <button\n            onClick={() => setLanguage('nl')}\n            className={`px-4 py-2 rounded ${language === 'nl' ? 'bg-accent text-primary' : 'bg-primary/20 text-foreground'}`}\n          >\n            🇳🇱 NL\n          </button>\n          <button\n            onClick={() => setLanguage('en')}\n            className={`px-4 py-2 rounded ${language === 'en' ? 'bg-accent text-primary' : 'bg-primary/20 text-foreground'}`}\n          >\n            🇬🇧 EN\n          </button>\n        </div>\n        \n        <button \n          onClick={handleContactClick}\n          className=\"mt-4 px-6 py-3 rounded-lg bg-accent text-primary font-header font-medium transition hover:bg-accent/90\"\n        >\n          {t('header.contact')}\n        </button>\n      </nav>\n      </div>\n    </>\n  );\n};\n\nexport default MobileMenu;\n","size_bytes":7015},"client/src/components/MonitorFrame.tsx":{"content":"import React, { useState, useEffect } from 'react';\n\ninterface MonitorFrameProps {\n  imageUrl: string;\n  altText: string;\n  websiteUrl?: string;\n  className?: string;\n  isLoading?: boolean;\n}\n\nconst MonitorFrame: React.FC<MonitorFrameProps> = ({ \n  imageUrl, \n  altText, \n  websiteUrl,\n  className = '',\n  isLoading = false\n}) => {\n  // Gebruik direct de fallback als startpunt\n  const fallbackImage = '/images/portfolio/fasttaxi.png';\n  const [imageSrc, setImageSrc] = useState<string>(fallbackImage);\n  const [imageError, setImageError] = useState<boolean>(false);\n  \n  // Probeer de afbeelding te laden bij initialisatie of wanneer imageUrl wijzigt\n  useEffect(() => {\n    // Reset error state wanneer imageUrl verandert\n    setImageError(false);\n    \n    // Gebruik direct de imageUrl (indien beschikbaar) of fallback\n    if (imageUrl) {\n      setImageSrc(imageUrl);\n    } else {\n      setImageSrc(fallbackImage);\n    }\n  }, [imageUrl]);\n  \n  return (\n    <div className={`relative ${className}`}>\n      {isLoading ? (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black/10 rounded-md\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-accent border-t-transparent rounded-full\"></div>\n        </div>\n      ) : (\n        <>\n          {/* Monitor frame */}\n          <div className=\"relative w-full\">\n            {/* Monitor top bar with browser controls */}\n            <div className=\"bg-gray-900 rounded-t-xl p-2 flex items-center\">\n              <div className=\"flex space-x-1.5\">\n                <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n              </div>\n              {websiteUrl && (\n                <div className=\"mx-auto text-center text-xs text-gray-400 font-mono overflow-hidden text-ellipsis whitespace-nowrap max-w-[180px] md:max-w-full\">\n                  {websiteUrl}\n                </div>\n              )}\n            </div>\n            \n            {/* Monitor screen content */}\n            <div className=\"bg-white border-l-2 border-r-2 border-gray-900 relative overflow-hidden\">\n              <div className=\"absolute inset-0 bg-gray-100 flex items-center justify-center\">\n                <div className=\"w-full h-full overflow-hidden bg-white\">\n                  <img \n                    src={imageSrc} \n                    alt={altText} \n                    className=\"w-full h-full object-contain object-center\"\n                    onError={(e) => {\n                      console.error(\"Afbeelding kon niet worden geladen:\", imageSrc);\n                      setImageError(true);\n                      e.currentTarget.src = fallbackImage;\n                    }}\n                  />\n                </div>\n              </div>\n              \n              {/* Screen reflection overlay */}\n              <div className=\"absolute inset-0 bg-gradient-to-br from-white/5 to-transparent pointer-events-none\"></div>\n            </div>\n            \n            {/* Monitor base */}\n            <div className=\"bg-gray-900 h-3 rounded-b-md\"></div>\n            <div className=\"bg-gray-800 h-2 w-32 mx-auto rounded-b-md\"></div>\n            <div className=\"h-10 w-24 mx-auto border-b-[10px] border-l-[7px] border-r-[7px] border-transparent border-t-0 border-gray-800 rounded-b-lg\"></div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MonitorFrame;","size_bytes":3503},"client/src/components/N8nChatWidget.tsx":{"content":"import { useEffect } from 'react';\nimport '@n8n/chat/style.css';\nimport { createChat } from '@n8n/chat';\nimport mascotImage from '@assets/mascot_1750294453535.png';\n\nexport function N8nChatWidget() {\n  useEffect(() => {\n    // Add target element for n8n chat\n    const chatContainer = document.createElement('div');\n    chatContainer.id = 'n8n-chat';\n    document.body.appendChild(chatContainer);\n\n    // Initialize n8n chat widget\n    createChat({\n      webhookUrl: 'https://dcwerk.app.n8n.cloud/webhook/2261c842-887d-4a32-8ac7-ff81ae696e5f/chat',\n      target: '#n8n-chat',\n      mode: 'window',\n      showWelcomeScreen: false,\n      defaultLanguage: 'en',\n      initialMessages: [\n        'Welkom bij Digimaatwerk! 👋',\n        'Ik ben Maatje, uw digitale assistent. Hoe kan ik u vandaag helpen met uw digitale transformatie?'\n      ],\n      i18n: {\n        en: {\n          title: 'Maatje',\n          subtitle: 'Uw partner in digitale transformatie',\n          footer: 'Powered by Maatje',\n          getStarted: 'Start gesprek',\n          inputPlaceholder: 'Stel uw vraag over onze diensten...',\n          closeButtonTooltip: 'Chat sluiten',\n        },\n        nl: {\n          title: 'Maatje',\n          subtitle: 'Uw partner in digitale transformatie',\n          footer: 'Powered by Maatje',\n          getStarted: 'Start gesprek',\n          inputPlaceholder: 'Stel uw vraag over onze diensten...',\n          closeButtonTooltip: 'Chat sluiten',\n        },\n      },\n    });\n\n    // Add CSS to replace all images with Maatje logo\n    const style = document.createElement('style');\n    style.textContent = `\n      /* Replace ALL images in chat widget with Maatje logo */\n      .n8n-chat img:not(.maatje-logo) {\n        content: url('${mascotImage}') !important;\n        width: 40px !important;\n        height: 40px !important;\n        border-radius: 50% !important;\n        object-fit: cover !important;\n      }\n      \n      /* Replace toggle button with Maatje */\n      .n8n-chat button[class*=\"toggle\"],\n      .n8n-chat [class*=\"toggle\"] {\n        background-image: url('${mascotImage}') !important;\n        background-size: cover !important;\n        background-position: center !important;\n        background-repeat: no-repeat !important;\n        border-radius: 50% !important;\n        width: 60px !important;\n        height: 60px !important;\n      }\n      \n      /* Remove hover effects for toggle button */\n      .n8n-chat button[class*=\"toggle\"]:hover,\n      .n8n-chat [class*=\"toggle\"]:hover {\n        transform: none !important;\n        box-shadow: none !important;\n        background-image: url('${mascotImage}') !important;\n        background-size: cover !important;\n        background-position: center !important;\n      }\n      \n      /* Hide original toggle button content */\n      .n8n-chat button[class*=\"toggle\"] svg,\n      .n8n-chat [class*=\"toggle\"] svg,\n      .n8n-chat button[class*=\"toggle\"] img,\n      .n8n-chat [class*=\"toggle\"] img {\n        display: none !important;\n      }\n      \n      /* Style the custom Maatje logo */\n      .n8n-chat .maatje-logo {\n        width: 40px !important;\n        height: 40px !important;\n        border-radius: 50% !important;\n        object-fit: cover !important;\n        margin-right: 8px !important;\n        display: block !important;\n        visibility: visible !important;\n        opacity: 1 !important;\n        z-index: 1000 !important;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Function to replace all images with Maatje and style toggle button\n    const manageChatLogos = () => {\n      const chatWidget = document.querySelector('#n8n-chat');\n      if (chatWidget) {\n        // Replace all images with Maatje logo\n        const allImages = chatWidget.querySelectorAll('img:not(.maatje-logo)');\n        allImages.forEach(img => {\n          (img as HTMLImageElement).src = mascotImage;\n          (img as HTMLImageElement).alt = 'Maatje';\n          (img as HTMLImageElement).style.borderRadius = '50%';\n          (img as HTMLImageElement).style.objectFit = 'cover';\n          (img as HTMLImageElement).style.width = '40px';\n          (img as HTMLImageElement).style.height = '40px';\n        });\n        \n        // Style toggle button with Maatje background (no hover effects)\n        const toggleButtons = chatWidget.querySelectorAll('button[class*=\"toggle\"], [class*=\"toggle\"]');\n        toggleButtons.forEach(btn => {\n          const button = btn as HTMLElement;\n          button.style.backgroundImage = `url('${mascotImage}')`;\n          button.style.backgroundSize = 'cover';\n          button.style.backgroundPosition = 'center';\n          button.style.borderRadius = '50%';\n          button.style.width = '60px';\n          button.style.height = '60px';\n        });\n      }\n    };\n\n    // Add observer to manage logos when chat widget loads\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList') {\n          manageChatLogos();\n        }\n      });\n    });\n\n    // Check once after a delay to ensure widget is loaded\n    setTimeout(() => {\n      manageChatLogos();\n    }, 2000);\n\n    // Start observing\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n\n    // Cleanup function\n    return () => {\n      const existingContainer = document.getElementById('n8n-chat');\n      if (existingContainer) {\n        existingContainer.remove();\n      }\n      // Remove the custom style element\n      if (style && style.parentNode) {\n        style.parentNode.removeChild(style);\n      }\n      // Disconnect the observer\n      observer.disconnect();\n    };\n  }, []);\n\n  return null; // The chat widget is handled by n8n's createChat function\n}","size_bytes":5738},"client/src/components/PricingSection.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\n\nconst fadeIn = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { opacity: 1, y: 0 }\n};\n\ninterface PricingPlan {\n  title: {\n    nl: string;\n    en: string;\n  };\n  description: {\n    nl: string;\n    en: string;\n  };\n  price: string;\n  features: {\n    nl: string[];\n    en: string[];\n  };\n}\n\ninterface ServicePricing {\n  title: {\n    nl: string;\n    en: string;\n  };\n  description: {\n    nl: string;\n    en: string;\n  };\n  price: string;\n}\n\nconst PricingSection: React.FC = () => {\n  const { language, t } = useLanguage();\n\n  const services: ServicePricing[] = [\n    {\n      title: {\n        nl: 'Basis Website',\n        en: 'Basic Website'\n      },\n      description: {\n        nl: 'Tot 5 pagina\\'s, responsive design, basis SEO',\n        en: 'Up to 5 pages, responsive design, basic SEO'\n      },\n      price: '€650'\n    },\n    {\n      title: {\n        nl: 'Geavanceerde Website',\n        en: 'Advanced Website'\n      },\n      description: {\n        nl: 'Tot 10 pagina\\'s, CMS-integratie, custom design',\n        en: 'Up to 10 pages, CMS integration, custom design'\n      },\n      price: '€1.250'\n    },\n    {\n      title: {\n        nl: 'Maatwerk Applicatie',\n        en: 'Custom Application'\n      },\n      description: {\n        nl: 'Volledig op maat gemaakt, geavanceerde functionaliteit',\n        en: 'Fully customized, advanced functionality'\n      },\n      price: '€2.500+'\n    }\n  ];\n\n  const monthlyPlans: PricingPlan[] = [\n    {\n      title: {\n        nl: 'Basis Support',\n        en: 'Basic Support'\n      },\n      description: {\n        nl: 'Perfecte start voor kleine bedrijven.',\n        en: 'Perfect start for small businesses.'\n      },\n      price: '€29',\n      features: {\n        nl: [\n          '24/7 ticket support',\n          'Kleine updates en fixes',\n          'Maandelijkse backup',\n          'Response binnen 48 uur'\n        ],\n        en: [\n          '24/7 ticket support',\n          'Small updates and fixes',\n          'Monthly backup',\n          'Response within 48 hours'\n        ]\n      }\n    },\n    {\n      title: {\n        nl: 'Standaard Support',\n        en: 'Standard Support'\n      },\n      description: {\n        nl: 'Ideaal voor groeiende bedrijven.',\n        en: 'Ideal for growing businesses.'\n      },\n      price: '€69',\n      features: {\n        nl: [\n          'Snelle respons (24 uur)',\n          'Maandelijkse beveiligingscheck',\n          'Content updates',\n          'Technische ondersteuning',\n          'Toegang tot klantenportaal'\n        ],\n        en: [\n          'Fast response (24 hours)',\n          'Monthly security check',\n          'Content updates',\n          'Technical support',\n          'Access to customer portal'\n        ]\n      }\n    },\n    {\n      title: {\n        nl: 'Premium Support',\n        en: 'Premium Support'\n      },\n      description: {\n        nl: 'Complete dienstverlening voor veeleisende bedrijven.',\n        en: 'Complete service for demanding businesses.'\n      },\n      price: '€129',\n      features: {\n        nl: [\n          'Prioriteit respons (12 uur)',\n          'Uitgebreide SEO-monitoring',\n          'Wekelijkse beveiligingscheck',\n          'Doorlopende optimalisatie',\n          'Performance monitoring',\n          'Persoonlijke accountmanager'\n        ],\n        en: [\n          'Priority response (12 hours)',\n          'Extensive SEO monitoring',\n          'Weekly security check',\n          'Continuous optimization',\n          'Performance monitoring',\n          'Personal account manager'\n        ]\n      }\n    }\n  ];\n\n  return (\n    <section id=\"pricing\" className=\"bg-slate-900 py-20\">\n      <div className=\"container mx-auto px-4\">\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n          transition={{ staggerChildren: 0.1 }}\n          className=\"text-center mb-16\"\n        >\n          <motion.h2 \n            variants={fadeIn}\n            className=\"text-3xl md:text-4xl font-bold mb-4 text-white\"\n          >\n            {language === 'nl' ? 'Transparante Prijzen' : 'Transparent Pricing'}\n          </motion.h2>\n          <motion.p \n            variants={fadeIn}\n            className=\"text-slate-300 max-w-2xl mx-auto\"\n          >\n            {language === 'nl' \n              ? 'Bij Digimaatwerk geloven we in transparantie en kwaliteit. Wij bieden betaalbare maatwerkoplossingen die perfect aansluiten bij de behoeften van jouw bedrijf.'\n              : 'At Digimaatwerk, we believe in transparency and quality. We offer affordable custom solutions that perfectly match your business needs.'}\n          </motion.p>\n        </motion.div>\n        \n        {/* Services Pricing */}\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n          transition={{ staggerChildren: 0.1 }}\n          className=\"mb-16\"\n        >\n          <motion.h3 \n            variants={fadeIn}\n            className=\"text-2xl font-bold mb-8 text-white text-center\"\n          >\n            {language === 'nl' ? 'Diensten' : 'Services'}\n          </motion.h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {services.map((service, index) => (\n              <motion.div\n                key={index}\n                variants={fadeIn}\n                className=\"bg-slate-800 rounded-lg p-6 hover:bg-slate-700 transition-colors border border-slate-700\"\n              >\n                <div className=\"text-teal-400 text-2xl font-bold mb-2\">{service.price}</div>\n                <h4 className=\"text-xl font-bold text-white mb-3\">{service.title[language]}</h4>\n                <p className=\"text-slate-300 mb-4\">{service.description[language]}</p>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n        \n        {/* Monthly Support Plans */}\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n          transition={{ staggerChildren: 0.1 }}\n        >\n          <motion.h3 \n            variants={fadeIn}\n            className=\"text-2xl font-bold mb-8 text-white text-center\"\n          >\n            {language === 'nl' ? '24/7 Support Pakketten' : '24/7 Support Packages'}\n          </motion.h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {monthlyPlans.map((plan, index) => (\n              <motion.div\n                key={index}\n                variants={fadeIn}\n                className={`rounded-lg p-6 border flex flex-col h-full ${\n                  index === 1 \n                    ? 'bg-slate-700 border-teal-500' \n                    : 'bg-slate-800 border-slate-700 hover:bg-slate-700 transition-colors'\n                }`}\n              >\n                <div className=\"mb-4\">\n                  <div className=\"text-teal-400 text-2xl font-bold mb-2\">{plan.price}<span className=\"text-slate-400 text-sm font-normal\"> / {language === 'nl' ? 'maand' : 'month'}</span></div>\n                  <h4 className=\"text-xl font-bold text-white\">{plan.title[language]}</h4>\n                  <p className=\"text-slate-300 mt-1\">{plan.description[language]}</p>\n                </div>\n                \n                <ul className=\"space-y-2 flex-grow\">\n                  {plan.features[language].map((feature, i) => (\n                    <li key={i} className=\"flex items-start\">\n                      <svg className=\"h-5 w-5 text-teal-500 mr-2 mt-0.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span className=\"text-slate-300\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n              </motion.div>\n            ))}\n          </div>\n          \n          {/* Centralized contact button */}\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true, amount: 0.2 }}\n            variants={fadeIn}\n            className=\"flex justify-center mt-10\"\n          >\n            <a \n              href=\"#contact\" \n              className=\"px-8 py-4 bg-teal-500 hover:bg-teal-600 text-white font-medium rounded-md transition-colors shadow-lg inline-flex items-center\"\n            >\n              {language === 'nl' ? 'Neem contact op voor een offerte' : 'Contact us for a quote'}\n              <svg className=\"ml-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n              </svg>\n            </a>\n          </motion.div>\n        </motion.div>\n        \n        {/* Additional info */}\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n          variants={fadeIn}\n          className=\"text-center mt-16 text-slate-300 max-w-3xl mx-auto\"\n        >\n          <p>\n            {language === 'nl' \n              ? 'Alle maandelijkse pakketten omvatten toegang tot ons klantenportaal waar je eenvoudig hulp kunt krijgen en updates kunt volgen. Voor specifieke wensen of aangepaste oplossingen, neem contact met ons op voor een persoonlijk voorstel.'\n              : 'All monthly packages include access to our customer portal where you can easily get help and track updates. For specific requirements or custom solutions, please contact us for a personalized proposal.'}\n          </p>\n        </motion.div>\n        \n        {/* Scroll Indicator pointing to calculator section */}\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.2 }}\n          variants={{\n            hidden: { opacity: 0, y: 20 },\n            visible: { opacity: 1, y: 0, transition: { duration: 0.5 } }\n          }}\n          className=\"mt-16 flex justify-center\"\n        >\n          <a href=\"#calculator\" className=\"flex flex-col items-center justify-center text-foreground/70 hover:text-accent transition group\">\n            <span className=\"text-sm mb-2\">\n              {language === 'nl' \n                ? 'Of bereken de prijs van uw website met onze \"Project calculator\"' \n                : 'Or calculate the price of your website with our \"Project calculator\"'}\n            </span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 animate-bounce group-hover:text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\n            </svg>\n          </a>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default PricingSection;","size_bytes":10975},"client/src/components/ProjectCalculator.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\n\ntype ProjectType = 'chatbot' | 'automation' | 'web' | 'combined';\ntype ProjectScale = 'basic' | 'advanced' | 'custom';\ntype SupportPackage = 'none' | 'basic' | 'standard' | 'premium';\ntype TimelinePriority = 1 | 2 | 3;\n\ninterface Feature {\n  id: string;\n  nameNl: string;\n  nameEn: string;\n  priceImpact: number;\n}\n\ninterface SupportPackageInfo {\n  id: SupportPackage;\n  nameNl: string;\n  nameEn: string;\n  price: number;\n}\n\nconst ProjectCalculator = () => {\n  const { t, language } = useLanguage();\n  const [projectType, setProjectType] = useState<ProjectType>('web');\n  const [projectScale, setProjectScale] = useState<ProjectScale>('basic');\n  const [supportPackage, setSupportPackage] = useState<SupportPackage>('none');\n  const [timelinePriority, setTimelinePriority] = useState<TimelinePriority>(1);\n  const [selectedFeatures, setSelectedFeatures] = useState<string[]>([]);\n  \n  // Website/App features\n  const webFeatures: Feature[] = [\n    { \n      id: 'web_feature1', \n      nameNl: 'Contactformulier met email service', \n      nameEn: 'Contact form with email service', \n      priceImpact: 100 \n    },\n    { \n      id: 'web_feature2', \n      nameNl: 'Extra pagina\\'s (per 5)', \n      nameEn: 'Additional pages (per 5)', \n      priceImpact: 150 \n    },\n    { \n      id: 'web_feature3', \n      nameNl: 'Blog functionaliteit', \n      nameEn: 'Blog functionality', \n      priceImpact: 250 \n    },\n    { \n      id: 'web_feature4', \n      nameNl: 'Gebruikersauthenticatie', \n      nameEn: 'User Authentication', \n      priceImpact: 300 \n    },\n    { \n      id: 'web_feature5', \n      nameNl: 'Custom betalingsgateway', \n      nameEn: 'Custom payment gateway', \n      priceImpact: 250 \n    },\n    { \n      id: 'web_feature6', \n      nameNl: 'Verbinding met CMS', \n      nameEn: 'CMS integration', \n      priceImpact: 300 \n    },\n    { \n      id: 'web_feature7', \n      nameNl: 'Meertalige website', \n      nameEn: 'Multilingual website', \n      priceImpact: 100\n    },\n    { \n      id: 'web_feature8', \n      nameNl: 'Analytics integratie', \n      nameEn: 'Analytics integration', \n      priceImpact: 150 \n    },\n  ];\n\n  // AI & Chatbot features\n  const chatbotFeatures: Feature[] = [\n    { \n      id: 'ai_feature1', \n      nameNl: 'Basis chatbot (FAQ)', \n      nameEn: 'Basic chatbot (FAQ)', \n      priceImpact: 500 \n    },\n    { \n      id: 'ai_feature2', \n      nameNl: 'Meertalige chatbot', \n      nameEn: 'Multilingual chatbot', \n      priceImpact: 200 \n    },\n    { \n      id: 'ai_feature3', \n      nameNl: 'CRM-integratie', \n      nameEn: 'CRM integration', \n      priceImpact: 300 \n    },\n    { \n      id: 'ai_feature4', \n      nameNl: 'Geavanceerde AI-functionaliteit (NLU/NLP)', \n      nameEn: 'Advanced AI functionality (NLU/NLP)', \n      priceImpact: 750 \n    },\n    { \n      id: 'ai_feature5', \n      nameNl: 'Chatbot met betalingsverwerking', \n      nameEn: 'Chatbot with payment processing', \n      priceImpact: 600 \n    },\n    { \n      id: 'ai_feature6', \n      nameNl: 'Analytics dashboard', \n      nameEn: 'Analytics dashboard', \n      priceImpact: 350 \n    },\n  ];\n\n  // Automatisering features\n  const automationFeatures: Feature[] = [\n    { \n      id: 'auto_feature1', \n      nameNl: 'Workflow automatisering', \n      nameEn: 'Workflow automation', \n      priceImpact: 400 \n    },\n    { \n      id: 'auto_feature2', \n      nameNl: 'Integratie met bestaande tools (bijv. Trello, Zapier)', \n      nameEn: 'Integration with existing tools (e.g. Trello, Zapier)', \n      priceImpact: 300 \n    },\n    { \n      id: 'auto_feature3', \n      nameNl: 'Automatische e-mailflows', \n      nameEn: 'Automatic email flows', \n      priceImpact: 250 \n    },\n    { \n      id: 'auto_feature4', \n      nameNl: 'Data-analyse en rapportage', \n      nameEn: 'Data analysis and reporting', \n      priceImpact: 500 \n    },\n    { \n      id: 'auto_feature5', \n      nameNl: 'Realtime meldingen', \n      nameEn: 'Real-time notifications', \n      priceImpact: 200 \n    },\n  ];\n\n  // Gecombineerd Project features\n  // State voor webshop optie binnen website type\n  const [isWebshop, setIsWebshop] = useState<boolean>(false);\n\n  const combinedFeatures: Feature[] = [\n    { \n      id: 'comb_feature1', \n      nameNl: 'Website met chatbot integratie', \n      nameEn: 'Website with chatbot integration', \n      priceImpact: 1000 \n    },\n    { \n      id: 'comb_feature2', \n      nameNl: 'Automatisering gekoppeld aan website (bijv. leads naar CRM)', \n      nameEn: 'Automation linked to website (e.g. leads to CRM)', \n      priceImpact: 750 \n    },\n    { \n      id: 'comb_feature3', \n      nameNl: 'E-commerce met AI-aanbevelingen', \n      nameEn: 'E-commerce with AI recommendations', \n      priceImpact: 1200 \n    },\n    { \n      id: 'comb_feature4', \n      nameNl: 'Dynamische content op basis van AI', \n      nameEn: 'Dynamic content based on AI', \n      priceImpact: 900 \n    },\n    { \n      id: 'comb_feature5', \n      nameNl: 'Contactformulier met email service', \n      nameEn: 'Contact form with email service', \n      priceImpact: 100 \n    },\n    { \n      id: 'comb_feature6', \n      nameNl: 'Meertalige website', \n      nameEn: 'Multilingual website', \n      priceImpact: 100\n    },\n  ];\n\n  // Get the current features based on project type\n  const getFeaturesByType = (): Feature[] => {\n    switch(projectType) {\n      case 'chatbot':\n        return chatbotFeatures;\n      case 'automation':\n        return automationFeatures;\n      case 'web':\n        return webFeatures;\n      case 'combined':\n        return combinedFeatures;\n      default:\n        return webFeatures;\n    }\n  };\n\n  // Reset selected features and webshop option when changing project type\n  useEffect(() => {\n    setSelectedFeatures([]);\n    setIsWebshop(false);\n  }, [projectType]);\n\n  const features = getFeaturesByType();\n  \n  const supportPackages: SupportPackageInfo[] = [\n    {\n      id: 'none',\n      nameNl: 'Geen maandelijks pakket',\n      nameEn: 'No monthly package',\n      price: 0\n    },\n    {\n      id: 'basic',\n      nameNl: 'Basic (€29/maand)',\n      nameEn: 'Basic (€29/month)',\n      price: 29\n    },\n    {\n      id: 'standard',\n      nameNl: 'Standaard (€69/maand)',\n      nameEn: 'Standard (€69/month)',\n      price: 69\n    },\n    {\n      id: 'premium',\n      nameNl: 'Premium (€129/maand)',\n      nameEn: 'Premium (€129/month)',\n      price: 129\n    }\n  ];\n  \n  // Get the support package price\n  const getSupportPackagePrice = (): number => {\n    const packageInfo = supportPackages.find(pkg => pkg.id === supportPackage);\n    return packageInfo ? packageInfo.price : 0;\n  };\n\n  // Calculate base price based on project type and scale\n  const getBasePrice = (): number => {\n    // Website type prices based on the pricing section\n    if (projectType === 'web') {\n      let basePrice = 0;\n      \n      // Basis prijs voor website\n      if (projectScale === 'basic') {\n        basePrice = 650; // Basis website: €650\n      } else if (projectScale === 'advanced') {\n        basePrice = 1250; // Geavanceerde website: €1250\n      } else if (projectScale === 'custom') {\n        basePrice = 2500; // Maatwerk website: €2500\n      }\n      \n      return basePrice;\n    }\n    \n    // For other project types\n    const typeMultiplier = {\n      chatbot: 1.2,\n      automation: 1.3,\n      web: 1,\n      combined: 2.5\n    };\n    \n    const scaleBase = {\n      basic: 650,\n      advanced: 1250,\n      custom: 2500\n    };\n    \n    return scaleBase[projectScale] * typeMultiplier[projectType];\n  };\n  \n  // Calculate additional features cost\n  const getFeaturesCost = (): number => {\n    return features\n      .filter(feature => selectedFeatures.includes(feature.id))\n      .reduce((sum, feature) => sum + feature.priceImpact, 0);\n  };\n  \n  // Calculate rush multiplier\n  const getRushMultiplier = (): number => {\n    const multipliers = {\n      1: 1, // Standard\n      2: 1.25, // Expedited\n      3: 1.5 // Rush\n    };\n    \n    return multipliers[timelinePriority];\n  };\n  \n  // Total price calculation\n  const calculatePrice = (): { min: number; max: number; monthlySupport: number } => {\n    const basePrice = getBasePrice();\n    const featuresCost = getFeaturesCost();\n    const webshopCost = (projectType === 'web' && isWebshop) ? 500 : 0; // Extra kosten voor webshop\n    const rushMultiplier = getRushMultiplier();\n    const supportCost = getSupportPackagePrice();\n    \n    const total = (basePrice + featuresCost + webshopCost) * rushMultiplier;\n    \n    return {\n      min: Math.round(total * 0.95),\n      max: Math.round(total * 1.05),\n      monthlySupport: supportCost\n    };\n  };\n  \n  // Timeline calculation in weeks\n  const calculateTimeline = (): { min: number; max: number } => {\n    let baseTime;\n    \n    if (projectScale === 'basic') {\n      baseTime = 2; // 2 weeks for basic website\n    } else if (projectScale === 'advanced') {\n      baseTime = 4; // 4 weeks for advanced website\n    } else {\n      baseTime = 6; // 6 weeks for custom website\n    }\n    \n    const featureTime = Math.ceil(selectedFeatures.length / 2);\n    \n    // Extra tijd voor webshop functionaliteit\n    const webshopTime = (projectType === 'web' && isWebshop) ? 1.5 : 0;\n    \n    // Expedited reduces time by 20%, rush by 40%\n    const timeMultiplier = {\n      1: 1, // Standard\n      2: 0.8, // Expedited\n      3: 0.6 // Rush\n    }[timelinePriority];\n    \n    const totalTime = (baseTime + featureTime + webshopTime) * timeMultiplier;\n    \n    return {\n      min: Math.max(1, Math.floor(totalTime * 0.9)),\n      max: Math.ceil(totalTime * 1.1)\n    };\n  };\n  \n  const priceRange = calculatePrice();\n  const timelineRange = calculateTimeline();\n  \n  const handleFeatureToggle = (featureId: string) => {\n    if (selectedFeatures.includes(featureId)) {\n      setSelectedFeatures(selectedFeatures.filter(id => id !== featureId));\n    } else {\n      setSelectedFeatures([...selectedFeatures, featureId]);\n    }\n  };\n\n  return (\n    <section id=\"calculator\" className=\"py-24 bg-primary relative overflow-hidden\">\n      <div className=\"absolute top-0 left-0 w-full h-full opacity-5\" style={{ \n        backgroundImage: `url('https://images.unsplash.com/photo-1484417894907-623942c8ee29?ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80')` \n      }}></div>\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4\">{t('calculator.title')}</h2>\n          <p className=\"text-foreground/70 max-w-2xl mx-auto\">{t('calculator.subtitle')}</p>\n        </div>\n        \n        <motion.div \n          className=\"bg-secondary/80 backdrop-blur-md rounded-2xl p-8 lg:p-12 shadow-lg\"\n          initial={{ opacity: 0, y: 40 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          viewport={{ once: true }}\n        >\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <div>\n              <h3 className=\"text-xl font-header font-semibold mb-6\">\n                {language === 'nl' ? 'Configureer Uw Project' : 'Configure Your Project'}\n              </h3>\n              \n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-foreground/80 mb-2\">{t('calculator.type')}</label>\n                  <select \n                    className=\"w-full bg-primary border border-secondary p-3 rounded-lg text-foreground focus:outline-none focus:border-accent\"\n                    value={projectType}\n                    onChange={(e) => setProjectType(e.target.value as ProjectType)}\n                  >\n                    <option value=\"chatbot\">{t('calculator.type.chatbot')}</option>\n                    <option value=\"automation\">{t('calculator.type.automation')}</option>\n                    <option value=\"web\">{t('calculator.type.web')}</option>\n                    <option value=\"combined\">{t('calculator.type.combined')}</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-foreground/80 mb-2\">{t('calculator.scale')}</label>\n                  <div className=\"grid grid-cols-3 gap-2 sm:gap-4\">\n                    <button \n                      className={`${projectScale === 'basic' \n                        ? 'bg-primary border border-accent text-accent' \n                        : 'bg-primary border border-secondary hover:border-accent'} p-2 sm:p-3 rounded-lg transition-colors text-xs sm:text-sm`}\n                      onClick={() => setProjectScale('basic')}\n                    >\n                      {language === 'nl' ? 'Basis' : 'Basic'}\n                    </button>\n                    <button \n                      className={`${projectScale === 'advanced' \n                        ? 'bg-primary border border-accent text-accent' \n                        : 'bg-primary border border-secondary hover:border-accent'} p-2 sm:p-3 rounded-lg transition-colors text-xs sm:text-sm`}\n                      onClick={() => setProjectScale('advanced')}\n                    >\n                      {language === 'nl' ? 'Geavanceerd' : 'Advanced'}\n                    </button>\n                    <button \n                      className={`${projectScale === 'custom' \n                        ? 'bg-primary border border-accent text-accent' \n                        : 'bg-primary border border-secondary hover:border-accent'} p-2 sm:p-3 rounded-lg transition-colors text-xs sm:text-sm`}\n                      onClick={() => setProjectScale('custom')}\n                    >\n                      {language === 'nl' ? 'Maatwerk' : 'Custom'}\n                    </button>\n                  </div>\n                </div>\n                \n\n\n                <div>\n                  <label className=\"block text-foreground/80 mb-2\">{t('calculator.features')}</label>\n                  <div className=\"space-y-2\">\n                    {/* Webshop optie alleen tonen bij 'web' projecttype */}\n                    {projectType === 'web' && (\n                      <div className=\"flex items-center mb-3 py-2 border-b border-primary\">\n                        <input \n                          type=\"checkbox\" \n                          id=\"webshop_option\"\n                          className=\"mr-2\"\n                          checked={isWebshop}\n                          onChange={() => setIsWebshop(!isWebshop)}\n                        />\n                        <label htmlFor=\"webshop_option\" className=\"font-medium\">\n                          {language === 'nl' ? 'Webshop functionaliteit' : 'Webshop functionality'}\n                        </label>\n                      </div>\n                    )}\n                    {features.map((feature) => (\n                      <div className=\"flex items-center\" key={feature.id}>\n                        <input \n                          type=\"checkbox\" \n                          id={feature.id}\n                          className=\"mr-2\"\n                          checked={selectedFeatures.includes(feature.id)}\n                          onChange={() => handleFeatureToggle(feature.id)}\n                        />\n                        <label htmlFor={feature.id}>{language === 'nl' ? feature.nameNl : feature.nameEn}</label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                <div>\n                  <label className=\"block text-foreground/80 mb-2\">{language === 'nl' ? 'Support Pakket' : 'Support Package'}</label>\n                  <div className=\"mb-4\">\n                    <select \n                      className=\"w-full bg-primary border border-secondary p-3 rounded-lg text-foreground focus:outline-none focus:border-accent\"\n                      value={supportPackage}\n                      onChange={(e) => setSupportPackage(e.target.value as SupportPackage)}\n                    >\n                      {supportPackages.map((pkg) => (\n                        <option key={pkg.id} value={pkg.id}>\n                          {language === 'nl' ? pkg.nameNl : pkg.nameEn}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                \n                <div>\n                  <label className=\"block text-foreground/80 mb-2\">{t('calculator.timeline')}</label>\n                  <div className=\"relative pt-1\">\n                    <input \n                      type=\"range\" \n                      className=\"w-full appearance-none h-1 bg-primary rounded outline-none accent-accent\" \n                      min=\"1\" \n                      max=\"3\" \n                      step=\"1\"\n                      value={timelinePriority}\n                      onChange={(e) => setTimelinePriority(parseInt(e.target.value) as TimelinePriority)}\n                    />\n                    <div className=\"flex justify-between text-xs text-foreground/60 pt-2\">\n                      <span>{t('calculator.timeline.standard')}</span>\n                      <span>{t('calculator.timeline.expedited')}</span>\n                      <span>{t('calculator.timeline.rush')}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <h3 className=\"text-xl font-header font-semibold mb-6\">\n                {language === 'nl' ? 'Geschatte Resultaten' : 'Estimated Results'}\n              </h3>\n              \n              <div className=\"bg-primary/80 rounded-xl p-6 mb-4\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <span className=\"text-foreground/80\">{t('calculator.result.budget')}</span>\n                  <span className=\"text-2xl font-medium text-accent\">€{priceRange.min.toLocaleString()} - €{priceRange.max.toLocaleString()}</span>\n                </div>\n                \n                {priceRange.monthlySupport > 0 && (\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <span className=\"text-foreground/80\">{language === 'nl' ? 'Maandelijks support' : 'Monthly support'}</span>\n                    <span className=\"text-xl font-medium text-accent\">€{priceRange.monthlySupport.toLocaleString()}/mnd</span>\n                  </div>\n                )}\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-foreground/80\">{t('calculator.result.timeline')}</span>\n                  <span className=\"text-xl font-medium\">\n                    {timelineRange.min}-{timelineRange.max} {language === 'nl' ? 'weken' : 'weeks'}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"bg-primary/60 rounded-xl p-3 mb-4 text-center text-sm text-foreground/70\">\n                {language === 'nl' \n                  ? 'Disclaimer: Dit is een indicatieve prijsopgave. Het definitieve projectbedrag wordt vastgesteld na een persoonlijk gesprek.'\n                  : 'Disclaimer: This is an indicative price estimate. The final project amount will be determined after a personal consultation.'}\n              </div>\n              \n              <div className=\"bg-primary/80 rounded-xl p-6 mb-8\">\n                <h4 className=\"text-lg font-medium mb-4\">\n                  {language === 'nl' ? 'Inbegrepen in Schatting:' : 'Included in Estimate:'}\n                </h4>\n                <ul className=\"space-y-2\">\n                  <li className=\"flex items-start\">\n                    <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                    <span>\n                      {language === 'nl' ? 'Volledige projectplanning en ontwerp' : 'Complete project planning and design'}\n                    </span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                    <span>\n                      {language === 'nl' ? 'Ontwikkeling en implementatie' : 'Development and implementation'}\n                    </span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                    <span>\n                      {language === 'nl' ? 'Testen en kwaliteitsbewaking' : 'Testing and quality assurance'}\n                    </span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                    <span>\n                      {language === 'nl' ? 'Implementatie en ondersteuning na lancering' : 'Deployment and post-launch support'}\n                    </span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                    <span>\n                      {language === 'nl' ? 'Optimalisatie voor zoekmachines (SEO)' : 'Search engine optimization (SEO)'}\n                    </span>\n                  </li>\n                  \n                  {/* Geselecteerde features */}\n                  {(selectedFeatures.length > 0 || (projectType === 'web' && isWebshop)) && (\n                    <>\n                      <li className=\"pt-2 pb-1\">\n                        <span className=\"font-medium text-accent\">\n                          {language === 'nl' ? 'Geselecteerde opties:' : 'Selected options:'}\n                        </span>\n                      </li>\n                      {/* Webshop optie */}\n                      {projectType === 'web' && isWebshop && (\n                        <li className=\"flex items-start\">\n                          <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                          <span>{language === 'nl' ? 'Webshop functionaliteit' : 'Webshop functionality'}</span>\n                        </li>\n                      )}\n                      {/* Andere features */}\n                      {features\n                        .filter(feature => selectedFeatures.includes(feature.id))\n                        .map(feature => (\n                          <li key={feature.id} className=\"flex items-start\">\n                            <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                            <span>{language === 'nl' ? feature.nameNl : feature.nameEn}</span>\n                          </li>\n                        ))\n                      }\n                    </>\n                  )}\n                  \n\n                  \n                  {/* Support pakket */}\n                  {supportPackage !== 'none' && (\n                    <>\n                      <li className=\"pt-2 pb-1\">\n                        <span className=\"font-medium text-accent\">\n                          {language === 'nl' ? 'Support pakket:' : 'Support package:'}\n                        </span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <i className=\"ri-check-line text-accent text-xl mr-2 flex-shrink-0\"></i>\n                        <span>\n                          {supportPackages.find(pkg => pkg.id === supportPackage) \n                            ? (language === 'nl' \n                                ? supportPackages.find(pkg => pkg.id === supportPackage)!.nameNl \n                                : supportPackages.find(pkg => pkg.id === supportPackage)!.nameEn) \n                            : ''}\n                        </span>\n                      </li>\n                    </>\n                  )}\n                </ul>\n              </div>\n              \n              <div className=\"text-center\">\n                <a href=\"#contact\" className=\"inline-block w-full py-3 bg-accent text-primary font-header font-medium rounded-lg transition hover:bg-accent/90\">\n                  {language === 'nl' ? 'Gedetailleerde Offerte Aanvragen' : 'Get Detailed Quote'}\n                </a>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Scroll Indicator pointing to contact section */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n          viewport={{ once: true }}\n          className=\"mt-16 flex justify-center\"\n        >\n          <a href=\"#contact\" className=\"flex flex-col items-center justify-center text-foreground/70 hover:text-accent transition group\">\n            <span className=\"text-sm mb-2\">\n              {language === 'nl' \n                ? 'Neem contact met ons op voor een gratis adviesgesprek' \n                : 'Contact us for a free consultation'}\n            </span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 animate-bounce group-hover:text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\n            </svg>\n          </a>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectCalculator;\n","size_bytes":25528},"client/src/components/ServicesSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\nimport mascotImage from '@assets/mascot_1750294453535.png';\n\ninterface Service {\n  icon: string;\n  titleKey: string;\n  descriptionKey: string;\n  techKey: string;\n}\n\nconst services: Service[] = [\n  {\n    icon: \"ri-robot-line\",\n    titleKey: \"services.ai.title\",\n    descriptionKey: \"services.ai.description\",\n    techKey: \"services.ai.tech\"\n  },\n  {\n    icon: \"ri-settings-line\",\n    titleKey: \"services.automation.title\",\n    descriptionKey: \"services.automation.description\",\n    techKey: \"services.automation.tech\"\n  },\n  {\n    icon: \"ri-code-s-slash-line\",\n    titleKey: \"services.web.title\",\n    descriptionKey: \"services.web.description\",\n    techKey: \"services.web.tech\"\n  },\n  {\n    icon: \"ri-cloud-line\",\n    titleKey: \"services.microsoft365.title\",\n    descriptionKey: \"services.microsoft365.description\",\n    techKey: \"services.microsoft365.tech\"\n  }\n];\n\nconst ServicesSection = () => {\n  const { t, language } = useLanguage();\n\n  return (\n    <section id=\"services\" className=\"py-16 sm:py-24 bg-gradient-to-b from-primary to-secondary\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12 md:mb-16\">\n          <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-header font-bold mb-4 px-4\">{t('services.title')}</h2>\n          <p className=\"text-foreground/70 max-w-2xl mx-auto px-4\">{t('services.subtitle')}</p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 md:gap-8 items-stretch\">\n          {services.map((service, index) => {\n            // Map icons to paths for each category\n            const categoryPaths = {\n              \"ri-robot-line\": \"/services/ai-chatbots\",\n              \"ri-settings-line\": \"/services/workflow-automation\",\n              \"ri-code-s-slash-line\": \"/services/web-development\",\n              \"ri-cloud-line\": \"/services/microsoft-365\"\n            };\n            \n            return (\n              <motion.div \n                key={index}\n                className=\"relative bg-gradient-to-br from-secondary via-secondary/80 to-primary/80 p-6 rounded-2xl shadow-lg card-hover-effect overflow-hidden group h-full min-h-[280px] flex flex-col\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"absolute top-0 right-0 w-32 h-32 bg-accent/10 rounded-full -mr-16 -mt-16 transition-transform group-hover:scale-150 duration-500\"></div>\n                <div className=\"relative z-10 flex flex-col flex-grow\">\n                  <div className=\"w-14 h-14 rounded-xl bg-accent/20 flex items-center justify-center mb-6\">\n                    <i className={`${service.icon} text-2xl text-accent`}></i>\n                  </div>\n                  <h3 className=\"text-lg font-header font-semibold mb-3\">{t(service.titleKey)}</h3>\n                  <p className=\"text-foreground/70 mb-4 text-sm leading-relaxed\">{t(service.descriptionKey)}</p>\n                  <div className=\"mt-auto\">\n                    <p className=\"text-accent font-mono text-xs mb-4\">{t(service.techKey)}</p>\n                    <a \n                      href={categoryPaths[service.icon as keyof typeof categoryPaths]} \n                      className=\"inline-flex items-center text-accent group\"\n                    >\n                      <span className=\"group-hover:underline\">{t('services.view_details')}</span>\n                      <i className=\"ri-arrow-right-line ml-2 transition-transform group-hover:translate-x-1\"></i>\n                    </a>\n                  </div>\n                </div>\n              </motion.div>\n            );\n          })}\n        </div>\n        \n        {/* Service Feature (AI Chatbot Demo) */}\n        <div className=\"mt-24 bg-secondary/50 backdrop-blur-md rounded-2xl p-8 lg:p-12 overflow-hidden\">\n          <div className=\"asymmetric-grid\">\n            <div className=\"col-span-12 lg:col-span-5 flex flex-col justify-center\">\n              <h3 className=\"text-2xl md:text-3xl font-header font-bold mb-6\">{t('services.chatbot.title')}</h3>\n              <p className=\"text-foreground/70 mb-8\">{t('services.chatbot.subtitle')}</p>\n              <ul className=\"space-y-4 mb-8\">\n                <li className=\"flex items-start\">\n                  <i className=\"ri-check-line text-accent text-xl mr-2\"></i>\n                  <span>{t('services.chatbot.feature1')}</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <i className=\"ri-check-line text-accent text-xl mr-2\"></i>\n                  <span>{t('services.chatbot.feature2')}</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <i className=\"ri-check-line text-accent text-xl mr-2\"></i>\n                  <span>{t('services.chatbot.feature3')}</span>\n                </li>\n              </ul>\n              <a href=\"#contact\" className=\"inline-flex items-center text-accent group\">\n                <span className=\"group-hover:underline\">{t('services.chatbot.cta')}</span>\n                <i className=\"ri-arrow-right-line ml-2 transition-transform group-hover:translate-x-1\"></i>\n              </a>\n            </div>\n            <div className=\"col-span-12 lg:col-span-6 lg:col-start-7 mt-10 lg:mt-0\">\n              {/* Maatje Mascot Display */}\n              <div className=\"bg-gradient-to-br from-primary/20 to-secondary/20 rounded-2xl overflow-hidden shadow-2xl h-[400px] flex flex-col items-center justify-center p-8\">\n                <div className=\"text-center mb-6\">\n                  <div \n                    className=\"cursor-pointer transform transition-transform hover:scale-105\"\n                    onClick={() => {\n                      // Open the n8n chat widget\n                      const chatWidget = document.querySelector('.n8n-chat-toggle, [class*=\"toggle\"]') as HTMLElement;\n                      if (chatWidget) {\n                        chatWidget.click();\n                      }\n                    }}\n                  >\n                    <img \n                      src={mascotImage} \n                      alt=\"Maatje - Digimaatwerk Mascot\" \n                      className=\"w-48 h-48 mx-auto mb-4 object-contain\"\n                    />\n                    <h4 className=\"text-2xl font-header font-bold text-foreground mb-2\">\n                      {t('services.chatbot.meet_maatje')}\n                    </h4>\n                    <p className=\"text-foreground/70 text-lg\">\n                      {t('services.chatbot.click_to_chat')}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Scroll Indicator pointing to prices section */}\n        <div className=\"mt-16 flex justify-center\">\n          <a href=\"#pricing\" className=\"flex flex-col items-center justify-center text-foreground/70 hover:text-accent transition group\">\n            <span className=\"text-sm mb-2\">{language === 'nl' ? 'Zie onze prijzen en pakketten' : 'See our prices and packages'}</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 animate-bounce group-hover:text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\n            </svg>\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ServicesSection;\n","size_bytes":7695},"client/src/components/SimpleCaseStudyAnimation.tsx":{"content":"import React, { useRef, Suspense } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { setupReplitMock } from '@/lib/mockReplit';\n\n// Set up Replit mock to prevent errors\nsetupReplitMock();\n\n// Basic color scheme based on category\nconst getCategoryColor = (category: string): string => {\n  switch(category) {\n    case 'Automatisering':\n    case 'Automation':\n      return '#0ea5e9';\n    case 'Webontwikkeling':\n    case 'Web Development':\n      return '#14b8a6';\n    case 'AI & Chatbots':\n      return '#06b6d4';\n    default:\n      return '#14b8a6';\n  }\n};\n\n// Secondary color based on category\nconst getSecondaryColor = (category: string): string => {\n  switch(category) {\n    case 'Automatisering':\n    case 'Automation':\n      return '#0284c7';\n    case 'Webontwikkeling':\n    case 'Web Development':\n      return '#0f766e';\n    case 'AI & Chatbots':\n      return '#0891b2';\n    default:\n      return '#0f766e';\n  }\n};\n\n// Simple animation for webdev\nconst WebDevAnimation: React.FC<{ category: string }> = ({ category }) => {\n  const meshRef = useRef<THREE.Mesh>(null);\n  const primaryColor = getCategoryColor(category);\n  \n  useFrame(({ clock }) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x = Math.sin(clock.getElapsedTime() * 0.5) * 0.2;\n      meshRef.current.rotation.y += 0.01;\n    }\n  });\n  \n  return (\n    <mesh ref={meshRef} position={[0, 0, 0]} castShadow>\n      <boxGeometry args={[2, 2, 0.2]} />\n      <meshStandardMaterial color={primaryColor} metalness={0.5} roughness={0.2} />\n    </mesh>\n  );\n};\n\n// Simple animation for automation\nconst AutomationAnimation: React.FC<{ category: string }> = ({ category }) => {\n  const meshRef = useRef<THREE.Mesh>(null);\n  const primaryColor = getCategoryColor(category);\n  \n  useFrame(({ clock }) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.z += 0.01;\n    }\n  });\n  \n  return (\n    <mesh ref={meshRef} position={[0, 0, 0]} castShadow>\n      <torusGeometry args={[1.5, 0.3, 16, 50]} />\n      <meshStandardMaterial color={primaryColor} metalness={0.7} roughness={0.2} />\n    </mesh>\n  );\n};\n\n// Simple animation for AI\nconst AIAnimation: React.FC<{ category: string }> = ({ category }) => {\n  const meshRef = useRef<THREE.Group>(null);\n  const primaryColor = getCategoryColor(category);\n  const secondaryColor = getSecondaryColor(category);\n  \n  useFrame(({ clock }) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.y += 0.01;\n      meshRef.current.position.y = Math.sin(clock.getElapsedTime()) * 0.1;\n    }\n  });\n  \n  return (\n    <group ref={meshRef}>\n      <mesh position={[0, 0, 0]} castShadow>\n        <sphereGeometry args={[1, 16, 16]} />\n        <meshStandardMaterial color={primaryColor} wireframe />\n      </mesh>\n      \n      <mesh position={[0, 0, 0]} scale={0.8} castShadow>\n        <sphereGeometry args={[1, 16, 16]} />\n        <meshStandardMaterial \n          color={secondaryColor} \n          transparent \n          opacity={0.7}\n          metalness={0.3}\n          roughness={0.7}\n        />\n      </mesh>\n    </group>\n  );\n};\n\n// Main Scene component\nconst Scene: React.FC<{ category: string }> = ({ category }) => {\n  return (\n    <>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} intensity={1} castShadow />\n      \n      <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -2, 0]} receiveShadow>\n        <planeGeometry args={[100, 100]} />\n        <meshStandardMaterial color=\"#f1f5f9\" />\n      </mesh>\n      \n      {category === 'Automatisering' || category === 'Automation' ? (\n        <AutomationAnimation category={category} />\n      ) : category === 'Webontwikkeling' || category === 'Web Development' ? (\n        <WebDevAnimation category={category} />\n      ) : category === 'AI & Chatbots' ? (\n        <AIAnimation category={category} />\n      ) : (\n        <AutomationAnimation category={category} />\n      )}\n    </>\n  );\n};\n\ninterface SimpleCaseStudyAnimationProps {\n  category: string;\n  className?: string;\n  height?: string;\n}\n\nconst SimpleCaseStudyAnimation: React.FC<SimpleCaseStudyAnimationProps> = ({ \n  category,\n  className = \"h-64 my-8\",\n  height = \"300px\"\n}) => {\n  return (\n    <div className={`${className} rounded-lg overflow-hidden`} style={{ height }}>\n      <Suspense fallback={\n        <div className=\"w-full h-full flex items-center justify-center bg-secondary/30\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-accent border-t-transparent rounded-full\" />\n        </div>\n      }>\n        <Canvas \n          camera={{ position: [0, 0, 5], fov: 50 }}\n          shadows\n        >\n          <Scene category={category} />\n        </Canvas>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default SimpleCaseStudyAnimation;","size_bytes":4777},"client/src/components/TechStackSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\n\ninterface TechItem {\n  icon: string;\n  name: string;\n  descriptionKey: string;\n}\n\nconst getTechStack = (language: string): TechItem[] => [\n  {\n    icon: \"ri-reactjs-line\",\n    name: \"React\",\n    descriptionKey: \"tech.react\"\n  },\n  {\n    icon: \"ri-code-box-line\",\n    name: \"Next.js\",\n    descriptionKey: \"tech.nextjs\"\n  },\n  {\n    icon: \"svg\",\n    name: \"Three.js\",\n    descriptionKey: \"tech.threejs\"\n  },\n  {\n    icon: \"ri-robot-line\",\n    name: language === 'nl' ? \"Op maat\" : \"Custom\",\n    descriptionKey: \"tech.gpt4\"\n  }\n];\n\ninterface ComparisonItem {\n  featureKey: string;\n  traditional: string;\n  digimaatwerk: string;\n}\n\n\n\nconst TechStackSection = () => {\n  const { t, language } = useLanguage();\n  \n  const techStack = getTechStack(language);\n  \n  const comparisonDataWithTranslation: ComparisonItem[] = [\n    {\n      featureKey: \"tech.compare.performance\",\n      traditional: \"70-80%\",\n      digimaatwerk: \"95%+\"\n    },\n    {\n      featureKey: \"tech.compare.3d\",\n      traditional: \"Limited\",\n      digimaatwerk: \"Advanced\"\n    },\n    {\n      featureKey: \"tech.compare.ai\",\n      traditional: \"Basic\",\n      digimaatwerk: language === 'nl' ? \"Op maat & RAG\" : \"Custom & RAG\"\n    },\n    {\n      featureKey: \"tech.compare.scalability\",\n      traditional: \"Medium\",\n      digimaatwerk: \"Enterprise-grade\"\n    },\n    {\n      featureKey: \"tech.compare.timetomarket\",\n      traditional: \"3-6 months\",\n      digimaatwerk: \"4-8 weeks\"\n    }\n  ];\n  \n  return (\n    <section id=\"tech-stack\" className=\"py-24 bg-gradient-to-b from-secondary to-primary\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4\">{t('tech.title')}</h2>\n          <p className=\"text-foreground/70 max-w-2xl mx-auto\">{t('tech.subtitle')}</p>\n        </div>\n        \n        <motion.div \n          className=\"bg-primary/50 backdrop-blur-md rounded-2xl p-8 shadow-lg\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          viewport={{ once: true }}\n        >\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            {techStack.map((tech: TechItem, index: number) => (\n              <motion.div \n                key={index}\n                className=\"flex flex-col items-center\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.4, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"w-16 h-16 mb-4 flex items-center justify-center bg-secondary rounded-xl\">\n                  {tech.icon === \"svg\" ? (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" className=\"text-accent\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 17l1.5-2.5m-1.5 2.5l-1.5-2.5M17 14v-2m-5-5l-1.5-2.5m1.5 2.5l1.5-2.5M7 14v-2m3-5h4m-7 10h10a1 1 0 001-1V6a1 1 0 00-1-1H7a1 1 0 00-1 1v10a1 1 0 001 1z\" />\n                    </svg>\n                  ) : (\n                    <i className={`${tech.icon} text-3xl text-accent`}></i>\n                  )}\n                </div>\n                <h3 className=\"text-lg font-header font-medium mb-1\">{tech.name}</h3>\n                <p className=\"text-foreground/60 text-sm text-center\">{t(tech.descriptionKey)}</p>\n              </motion.div>\n            ))}\n          </div>\n          \n          <div className=\"mt-12\">\n            <h3 className=\"text-xl font-header font-semibold mb-6 text-center\">{t('tech.compare.title')}</h3>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full min-w-[800px]\">\n                <thead>\n                  <tr>\n                    <th className=\"text-left p-3 border-b border-secondary\">{t('tech.compare.feature')}</th>\n                    <th className=\"text-center p-3 border-b border-secondary\">{t('tech.compare.traditional')}</th>\n                    <th className=\"text-center p-3 border-b border-secondary\">{t('tech.compare.digimaatwerk')}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {comparisonDataWithTranslation.map((item: ComparisonItem, index: number) => (\n                    <motion.tr \n                      key={index}\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.3, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                    >\n                      <td className=\"p-3 border-b border-secondary/50\">{t(item.featureKey)}</td>\n                      <td className=\"text-center p-3 border-b border-secondary/50\">{item.traditional}</td>\n                      <td className=\"text-center p-3 border-b border-secondary/50 text-accent font-medium\">{item.digimaatwerk}</td>\n                    </motion.tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </motion.div>\n        \n        {/* Scroll Indicator pointing to contact section */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.3 }}\n          viewport={{ once: true }}\n          className=\"mt-16 flex justify-center\"\n        >\n          <a href=\"#contact\" className=\"flex flex-col items-center justify-center text-foreground/70 hover:text-accent transition group\">\n            <span className=\"text-sm mb-2\">\n              {language === 'nl' \n                ? 'Neem contact met ons op' \n                : 'Contact us'}\n            </span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 animate-bounce group-hover:text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\n            </svg>\n          </a>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default TechStackSection;\n","size_bytes":6350},"client/src/components/TestimonialsSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\n\nconst AboutDamianSection = () => {\n  const { language } = useLanguage();\n\n  const title = language === 'nl' \n    ? 'Damian Kessler: De Kracht achter Digimaatwerk' \n    : 'Damian Kessler: The Force Behind Digimaatwerk';\n\n  const paragraph1 = language === 'nl'\n    ? 'Wat mij drijft is de mogelijkheid om bedrijven te helpen groeien door middel van digitale transformatie. Ik vind het belangrijk om mijn kennis op niveau te houden en ben altijd op zoek naar nieuwe manieren om mijn klanten te ondersteunen.'\n    : 'What drives me is the opportunity to help businesses grow through digital transformation. I find it important to keep my knowledge up to date and I am always looking for new ways to support my clients.';\n\n  const paragraph2 = language === 'nl'\n    ? 'Naast mijn werk ben ik een trotse eigenaar van Elfie, mijn Australische herdershond. Elfie en ik brengen veel tijd door met activiteiten zoals wandelen, de bal apporteren en skateboarden'\n    : 'Besides my work, I am a proud owner of Elfie, my Australian shepherd dog. My Australian Shepherd, Elfie, and I spend a lot of time doing activities like walking, fetching the ball, and skateboarding. ';\n\n  const paragraph3 = language === 'nl'\n    ? 'Bij Digimaatwerk bied ik niet alleen technische expertise, maar ook een persoonlijke aanpak die gericht is op uw specifieke behoeften. Ik begeleid u van ontwerp tot lancering, zorg voor transparante prijzen en ben altijd bereid om over uw ideeën en wensen te praten. Mijn doel is om uw bedrijf te helpen groeien door middel van innovatieve, betaalbare en op maat gemaakte digitale oplossingen.'\n    : 'At Digimaatwerk, I offer not only technical expertise but also a personal approach that focuses on your specific needs. I guide you from design to launch, ensure transparent pricing, and am always willing to discuss your ideas and wishes. My goal is to help your business grow through innovative, affordable, and tailored digital solutions.';\n\n  const consultation = language === 'nl' ? 'Plan een gratis consult' : 'Schedule a free consultation';\n  const quote = language === 'nl' ? 'Vraag een offerte aan' : 'Request a quote';\n  const callToAction = language === 'nl' \n    ? 'Wilt u weten hoe ik uw bedrijf digitaal kan versterken?' \n    : 'Want to know how I can digitally strengthen your business?';\n\n  return (\n    <section id=\"testimonials\" className=\"py-24 bg-gradient-to-b from-primary to-secondary relative overflow-hidden\">\n      {/* Background elements */}\n      <div className=\"absolute inset-0 overflow-hidden z-0\">\n        <div className=\"absolute -top-20 -right-20 w-96 h-96 bg-accent/10 rounded-full blur-3xl\"></div>\n        <div className=\"absolute -bottom-32 -left-20 w-80 h-80 bg-accent/5 rounded-full blur-3xl\"></div>\n      </div>\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <div className=\"text-center mb-16\">\n          <motion.h2 \n            className=\"text-3xl md:text-4xl font-header font-bold mb-4\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            viewport={{ once: true }}\n          >\n            {title}\n          </motion.h2>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-12 items-start\">\n          {/* Left column with text content */}\n          <motion.div \n            className=\"lg:col-span-7 space-y-6\"\n            initial={{ opacity: 0, x: -30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5 }}\n            viewport={{ once: true }}\n          >\n            <p className=\"text-lg leading-relaxed text-foreground/90\">{paragraph1}</p>\n            <p className=\"text-lg leading-relaxed text-foreground/90\">{paragraph2}</p>\n            <p className=\"text-lg leading-relaxed text-foreground/90\">{paragraph3}</p>\n            \n            <div className=\"pt-6\">\n              <h3 className=\"text-xl font-header font-semibold mb-4 text-accent\">{callToAction}</h3>\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <a \n                  href=\"#contact\" \n                  className=\"inline-flex items-center justify-center px-6 py-3 bg-accent text-primary font-medium rounded-lg transition-all duration-300 hover:bg-accent/90 hover:shadow-lg hover:shadow-accent/20 hover:-translate-y-1\"\n                >\n                  {consultation}\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                </a>\n                <a \n                  href=\"#contact\" \n                  className=\"inline-flex items-center justify-center px-6 py-3 border border-accent/30 text-accent font-medium rounded-lg transition-all duration-300 hover:bg-accent/10 hover:border-accent hover:shadow-md hover:-translate-y-1\"\n                >\n                  {quote}\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </motion.div>\n          \n          {/* Right column with photos */}\n          <motion.div \n            className=\"lg:col-span-5 space-y-8\"\n            initial={{ opacity: 0, x: 30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n            viewport={{ once: true }}\n          >\n            {/* Damian's profile photo */}\n            <div className=\"bg-secondary/40 rounded-2xl p-6 shadow-lg backdrop-blur-sm\">\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-40 h-40 rounded-full overflow-hidden mb-6 border-2 border-accent\">\n                  <img \n                    src=\"/images/profile.jpg\" \n                    alt=\"Damian Kessler\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <h3 className=\"text-xl font-header font-semibold mb-1\">Damian Kessler</h3>\n                <p className=\"text-foreground/70 mb-4\">{language === 'nl' ? 'Oprichter & CEO' : 'Founder & CEO'}</p>\n                \n                <div className=\"flex space-x-4\">\n                  <a href=\"https://www.linkedin.com/in/damian-kessler/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center hover:bg-accent/30 transition\">\n                    <i className=\"ri-linkedin-fill text-accent\"></i>\n                  </a>\n                  <a href=\"https://twitter.com/DigiMaatwerk\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"w-10 h-10 rounded-lg bg-accent/20 flex items-center justify-center hover:bg-accent/30 transition\">\n                    <i className=\"ri-twitter-fill text-accent\"></i>\n                  </a>\n                </div>\n              </div>\n            </div>\n            \n            {/* Elfie's photo (placeholder) */}\n            <div className=\"bg-secondary/40 rounded-2xl p-6 shadow-lg backdrop-blur-sm\">\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-40 h-40 rounded-full overflow-hidden mb-6 border-2 border-accent/70\">\n                  <img \n                    src=\"/images/elfie.jpg\" \n                    alt=\"Elfie - Australische Herder\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <h3 className=\"text-xl font-header font-semibold mb-1\">Elfie</h3>\n                <p className=\"text-foreground/70\">{language === 'nl' ? 'Australische Herder' : 'Australian Shepherd'}</p>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n        \n        {/* Google Reviews Badge */}\n        <motion.div \n          className=\"mt-16 bg-secondary/30 rounded-2xl p-6 flex flex-col md:flex-row items-center justify-between\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4 }}\n          viewport={{ once: true }}\n        >\n          <div className=\"mb-6 md:mb-0 md:mr-8\">\n            <i className=\"ri-google-fill text-3xl text-foreground/80 mr-2\"></i>\n            <i className=\"ri-star-fill text-accent\"></i>\n            <i className=\"ri-star-fill text-accent\"></i>\n            <i className=\"ri-star-fill text-accent\"></i>\n            <i className=\"ri-star-fill text-accent\"></i>\n            <i className=\"ri-star-fill text-accent\"></i>\n            <div className=\"mt-2 text-foreground/70\">\n              <span className=\"font-medium\">4.9/5</span> {language === 'nl' ? 'uit 28 beoordelingen' : 'from 28 reviews'}\n            </div>\n          </div>\n          <a href=\"https://www.google.com/search?sca_esv=e2ac7e5363cb24f5&si=AMgyJEtREmoPL4P1I5IDCfuA8gybfVI2d5Uj7QMwYCZHKDZ-E3713MjyS1KhaYqNg0eXOBvuuRe8aT1gdFMBhJw2M9zHMCzewKtoi3na29h5VDMtrHcIXoArdM8R9PSzwae2Jy68-BdH&q=Digimaatwerk+Reviews&sa=X&ved=2ahUKEwjr8Y644YOOAxWG1QIHHSJ4FS4Q0bkNegQILhAD&biw=2133&bih=1012&dpr=0.9\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"inline-flex items-center text-accent group\">\n            <span className=\"group-hover:underline\">\n              {language === 'nl' ? 'Lees alle beoordelingen' : 'Read all reviews'}\n            </span>\n            <i className=\"ri-external-link-line ml-2\"></i>\n          </a>\n        </motion.div>\n        \n\n      </div>\n    </section>\n  );\n};\n\nexport default AboutDamianSection;\n","size_bytes":10045},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/languageContext.tsx":{"content":"import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\n\n// Available languages\nexport type Language = 'nl' | 'en';\n\n// Language context type\ntype LanguageContextType = {\n  language: Language;\n  setLanguage: (lang: Language) => void;\n  t: (key: string) => string;\n};\n\n// Create the context with default values\nconst LanguageContext = createContext<LanguageContextType>({\n  language: 'nl',\n  setLanguage: () => {},\n  t: (key: string) => key,\n});\n\n// Translations\nconst translations: Record<Language, Record<string, string>> = {\n  nl: {\n    // CodeAnimationLoader\n    'loader.initializing': 'Digimaatwerk Interface initialiseren...',\n    'loader.skip': 'Animatie overslaan',\n    'loader.code.comment1': '// Digimaatwerk Digitale Oplossingen',\n    'loader.code.comment2': '// Initialiseer digitale transformatie',\n    'loader.code.comment3': '// Pas intelligente oplossingen toe',\n    'loader.code.comment4': '// Digimaatwerk: De kracht achter uw digitale toekomst',\n    \n    // Header\n    'header.services': 'Diensten',\n    'header.cases': 'Projecten',\n    'header.about': 'Over ons',\n    'header.contact': 'Contact',\n    'header.calculator': 'Bereken prijs',\n    'header.blogs': 'Blogs',\n    \n    // Hero\n    'hero.title': 'Uw partner voor digitale transformatie',\n    'hero.subtitle': 'Web Development, AI & Automatisering',\n    'hero.cta': 'Ontdek onze diensten',\n    'hero.contact': 'Neem contact op',\n    'hero.services.web.title': 'Maatwerk websites',\n    'hero.services.web.description': 'Op maat gemaakte websites die perfect aansluiten bij uw merkidentiteit en zakelijke doelen',\n    'hero.services.automation.title': 'Workflow automatisering',\n    'hero.services.automation.description': 'Stroomlijn uw bedrijfsprocessen en verhoog de efficiëntie met intelligente automatisering',\n    'hero.services.chatbot.title': 'AI Chatbots',\n    'hero.services.chatbot.description': 'Verbeter uw klantenservice met 24/7 intelligente ondersteuning via AI-chatbots',\n    'hero.services.microsoft365.title': 'Microsoft 365',\n    'hero.services.microsoft365.description': 'Moderne werkplek oplossingen met AI-integratie en enterprise beveiliging',\n    \n    // Services\n    'services.title': 'Onze digitale diensten',\n    'services.subtitle': 'Op maat gemaakte oplossingen om uw bedrijfsprocessen en klantervaringen te transformeren',\n    'services.ai.title': 'AI Chatbots',\n    'services.ai.description': 'Intelligente gespreksagenten met een op maat AI model en RAG-technologie voor verbeterd contextbegrip',\n    'services.ai.tech': 'NLP · Custom AI Model · RAG',\n    'services.automation.title': 'Workflow Automatisering',\n    'services.automation.description': 'Gestroomlijnde procesautomatiseringsoplossingen die handmatige taken verminderen en operaties optimaliseren',\n    'services.automation.tech': 'AWS · Azure · GCP',\n    'services.web.title': 'Webontwikkeling',\n    'services.web.description': 'Moderne, hoogwaardige webapplicaties gebouwd met de nieuwste technologieën en frameworks',\n    'services.web.tech': 'React · Next.js · Three.js',\n    'services.microsoft365.title': 'Microsoft 365 & Modern Workplace',\n    'services.microsoft365.description': 'Intelligente cloud oplossingen voor de moderne werkplek met geavanceerde AI-integratie en enterprise-security',\n    'services.microsoft365.tech': 'Copilot · Azure AD · Power Platform',\n    'services.chatbot.title': 'Ervaar onze AI Chatbot',\n    'services.chatbot.subtitle': 'Probeer onze interactieve chatbot om te zien hoe we intelligente gespreksinterfaces kunnen implementeren voor uw bedrijf',\n    'services.chatbot.feature1': 'Aangepast aan uw merkidentiteit en richtlijnen',\n    'services.chatbot.feature2': 'Integreert met uw kennisbank en CRM',\n    'services.chatbot.feature3': '24/7 ondersteuning voor uw klanten',\n    'services.chatbot.cta': 'Ontdek hoe we dit kunnen implementeren voor uw bedrijf',\n    'services.chatbot.greeting': 'Hallo! Ik ben de AI-assistent van Digimaatwerk. Hoe kan ik u vandaag helpen?',\n    'services.chatbot.user1': 'Ik ben geïnteresseerd in het maken van een chatbot voor mijn bedrijf.',\n    'services.chatbot.bot1': 'Geweldig! We zijn gespecialiseerd in aangepaste AI-chatbots die kunnen helpen bij klantenservice, leadgeneratie en interne processen. Wat is uw belangrijkste doel voor deze chatbot?',\n    'services.chatbot.bot2': 'Dat is een goede vraag! Ons team bespreekt dit graag in meer detail met u. Wilt u dat we contact met u opnemen voor een persoonlijke demo?',\n    'services.chatbot.placeholder': 'Typ hier uw bericht...',\n    'services.chatbot.meet_maatje': 'Ontmoet Maatje!',\n    'services.chatbot.click_to_chat': 'Klik om te chatten met onze AI-assistent',\n    'services.view_details': 'Bekijk details',\n    \n    // Service Category Pages\n    'service.ai.title': 'AI Chatbots',\n    'service.ai.subtitle': 'Intelligente gesprekspartners voor uw klanten',\n    'service.ai.description': 'Onze AI-gestuurde chatbots bieden 24/7 ondersteuning voor uw klanten. Ze leren van elk gesprek, begrijpen complexe vragen en geven relevante antwoorden. Verhoog de klanttevredenheid en verminder de werkdruk van uw team met onze slimme chatbot-oplossingen.',\n    'service.automation.title': 'Workflow Automatisering',\n    'service.automation.subtitle': 'Efficiëntere processen, minder handwerk',\n    'service.automation.description': 'Transformeer uw bedrijfsprocessen met onze automatiseringsoplossingen. We identificeren repetitieve taken en stroomlijnen deze met slimme digitale workflows. Bespaar tijd, verminder fouten en laat uw team focussen op wat echt belangrijk is.',\n    'service.web.title': 'Webontwikkeling',\n    'service.web.subtitle': 'Moderne websites en webapplicaties',\n    'service.web.description': 'Van eenvoudige websites tot complexe webapplicaties - wij bouwen digitale ervaringen die uw doelgroep betrekken en converteren. Onze websites zijn snel, veilig en volledig geoptimaliseerd voor alle apparaten.',\n    'service.microsoft365.title': 'Microsoft 365 & Modern Workplace',\n    'service.microsoft365.subtitle': 'Toekomstbestendige cloudoplossingen voor uw organisatie',\n    'service.microsoft365.description': 'Transformeer uw werkplek met Microsoft 365 en geavanceerde AI-integratie. Wij helpen organisaties bij het implementeren van moderne werkplekoplossingen die productiviteit verhogen, samenwerking verbeteren en enterprise-niveau beveiliging bieden. Van migratie tot optimalisatie, wij begeleiden uw digitale transformatie.',\n    \n    // Service features and technical details\n    'service.ai.features.1': 'Integratie met uw huidige systemen en databases',\n    'service.ai.features.2': 'Meertalige ondersteuning voor internationale klanten',\n    'service.ai.features.3': 'Aanpasbare persoonlijkheid en huisstijl',\n    'service.ai.features.4': 'Gedetailleerde rapportages en inzichten',\n    'service.ai.features.5': 'Naadloze overdracht naar menselijke medewerkers indien nodig',\n    'service.ai.technical': 'We gebruiken de nieuwste ontwikkelingen in natuurlijke taalverwerking (NLP) en machine learning. Onze chatbots worden gebouwd met GPT-technologie en kunnen worden geïntegreerd met uw CRM, helpdesk of website.',\n    \n    'service.automation.features.1': 'Visuele workflow-ontwerpen zonder programmeerkennis',\n    'service.automation.features.2': 'Integratie met populaire applicaties en services',\n    'service.automation.features.3': 'Real-time monitoring en rapportage',\n    'service.automation.features.4': 'Schaalbaarheid voor groeiende bedrijven',\n    'service.automation.features.5': 'Veilige en betrouwbare uitvoering',\n    'service.automation.technical': 'We bouwen automatiseringsoplossingen met tools zoals Zapier, Microsoft Power Automate en n8n. Onze workflows kunnen verbinding maken met honderden populaire applicaties en services.',\n    \n    'service.web.features.1': 'Mobiel-vriendelijk ontwerp voor alle apparaten',\n    'service.web.features.2': 'Zoekmachinevriendelijke structuur (SEO)',\n    'service.web.features.3': 'Snelle laadtijden en optimale performance',\n    'service.web.features.4': 'Gebruiksvriendelijk content management',\n    'service.web.features.5': 'Veilige betalingsintegraties indien nodig',\n    'service.web.technical': 'We werken met moderne technologieën zoals React, Next.js en Node.js. Voor e-commerce projecten gebruiken we Shopify of WooCommerce, afhankelijk van uw specifieke behoeften.',\n    \n    'service.microsoft365.features.1': 'Microsoft Copilot implementatie en training',\n    'service.microsoft365.features.2': 'Teams Phone en communicatie-oplossingen',\n    'service.microsoft365.features.3': 'Power Platform automatisering (Power Apps, Power Automate)',\n    'service.microsoft365.features.4': 'SharePoint en OneDrive optimalisatie',\n    'service.microsoft365.features.5': 'Advanced Security en Compliance configuratie',\n    'service.microsoft365.features.6': 'Intune device management en Mobile Device Management',\n    'service.microsoft365.features.7': 'Exchange Online migratie en beheer',\n    'service.microsoft365.features.8': 'Azure Active Directory configuratie en SSO',\n    'service.microsoft365.technical': 'Met jarenlange ervaring in de ICT-sector en uitgebreide expertise in Microsoft enterprise werkomgevingen begeleiden wij organisaties bij elke stap van hun digitale transformatie. Onze aanpak bestaat uit een grondige analyse, doordachte migratieplanning, zorgvuldige implementatie en voortdurende optimalisatie van uw Microsoft 365 omgeving. Zo zorgen wij voor een toekomstbestendige, efficiënte en veilige digitale werkplek die aansluit bij uw bedrijfsdoelen.',\n    \n    // Case Studies\n    'cases.title': 'Projecten',\n    'cases.subtitle': 'Ontdek hoe we bedrijven hebben geholpen',\n    'cases.cta': 'Bekijk alle projecten',\n    'cases.filter.all': 'Alle',\n    'cases.filter.ai': 'AI & Chatbots',\n    'cases.filter.automation': 'Automatisering',\n    'cases.filter.web': 'Webontwikkeling',\n    \n    // Contact\n    'contact.title': 'Neem contact op',\n    'contact.subtitle': 'We staan klaar om u te helpen',\n    'contact.form.name': 'Naam',\n    'contact.form.email': 'E-mail',\n    'contact.form.company': 'Bedrijf',\n    'contact.form.project': 'Type project',\n    'contact.form.message': 'Bericht',\n    'contact.form.consent': 'Ik ga akkoord met het privacybeleid',\n    'contact.form.submit': 'Versturen',\n    \n    // Calculator\n    'calculator.title': 'Project calculator',\n    'calculator.subtitle': 'Schat de kosten en tijdlijn van uw project',\n    'calculator.type': 'Project type',\n    'calculator.type.chatbot': 'AI & Chatbot',\n    'calculator.type.automation': 'Automatisering',\n    'calculator.type.web': 'Website / App',\n    'calculator.type.combined': 'Gecombineerd',\n    'calculator.scale': 'Schaal',\n    'calculator.scale.small': 'Klein',\n    'calculator.scale.medium': 'Middel',\n    'calculator.scale.large': 'Groot',\n    'calculator.features': 'Kenmerken',\n    'calculator.timeline': 'Tijdlijn prioriteit',\n    'calculator.timeline.standard': 'Standaard',\n    'calculator.timeline.expedited': 'Versneld',\n    'calculator.timeline.rush': 'Spoed',\n    'calculator.calculate': 'Bereken',\n    'calculator.result.budget': 'Geschatte budget',\n    'calculator.result.timeline': 'Geschatte tijdlijn',\n    \n    // Tech Stack\n    'tech.title': 'Onze Technologie Stack',\n    'tech.subtitle': 'We gebruiken geavanceerde technologieën om hoogwaardige, schaalbare oplossingen te leveren',\n    'tech.react': 'Front-end UI bibliotheek',\n    'tech.nextjs': 'React framework',\n    'tech.threejs': '3D visualisaties',\n    'tech.gpt4': 'AI taalmodel',\n    'tech.compare.title': 'Vergelijk onze technologische mogelijkheden',\n    'tech.compare.feature': 'Functie',\n    'tech.compare.traditional': 'Traditionele Stack',\n    'tech.compare.digimaatwerk': 'Digimaatwerk Stack',\n    'tech.compare.performance': 'Prestatie Score',\n    'tech.compare.3d': '3D Mogelijkheden',\n    'tech.compare.ai': 'AI Integratie',\n    'tech.compare.scalability': 'Schaalbaarheid',\n    'tech.compare.timetomarket': 'Time to Market',\n\n    // Testimonials\n    'testimonials.title': 'Klantgetuigenissen',\n    'testimonials.subtitle': 'Zie wat onze klanten zeggen over samenwerken met Digimaatwerk',\n    'testimonials.reviews': 'uit 28 beoordelingen',\n    'testimonials.read': 'Bekijk alle Google reviews',\n    \n    // Footer\n    'footer.company': 'Bedrijf',\n    'footer.services': 'Diensten',\n    'footer.contact': 'Contact',\n    'footer.legal': 'Juridisch',\n    'footer.privacy': 'Privacybeleid',\n    'footer.terms': 'Algemene voorwaarden',\n    'footer.cookies': 'Cookiebeleid',\n    'footer.copyright': 'Alle rechten voorbehouden',\n    \n    // Misc\n    'language': 'Taal',\n    'language.dutch': 'Nederlands',\n    'language.english': 'Engels',\n  },\n  en: {\n    // CodeAnimationLoader\n    'loader.initializing': 'Initializing Digimaatwerk Interface...',\n    'loader.skip': 'Skip Animation',\n    'loader.code.comment1': '// Digimaatwerk Digital Solutions',\n    'loader.code.comment2': '// Initialize digital transformation',\n    'loader.code.comment3': '// Apply intelligent solutions',\n    'loader.code.comment4': '// Digimaatwerk: Powering your digital future',\n    \n    // Header\n    'header.services': 'Services',\n    'header.cases': 'Projects',\n    'header.about': 'About',\n    'header.contact': 'Contact',\n    'header.calculator': 'Price Calculator',\n    'header.blogs': 'Blogs',\n    \n    // Hero\n    'hero.title': 'Your Digital Transformation Partner',\n    'hero.subtitle': 'Web Development, AI & Automation',\n    'hero.cta': 'Discover our services',\n    'hero.contact': 'Contact us',\n    'hero.services.web.title': 'Custom Websites',\n    'hero.services.web.description': 'Tailor-made websites that perfectly align with your brand identity and business goals',\n    'hero.services.automation.title': 'Workflow Automation',\n    'hero.services.automation.description': 'Streamline your business processes and increase efficiency with intelligent automation',\n    'hero.services.chatbot.title': 'AI Chatbots',\n    'hero.services.chatbot.description': 'Enhance your customer service with 24/7 intelligent support through AI chatbots',\n    'hero.services.microsoft365.title': 'Microsoft 365',\n    'hero.services.microsoft365.description': 'Modern workplace solutions with AI integration and enterprise security',\n    \n    // Services\n    'services.title': 'Our Digital Services',\n    'services.subtitle': 'Tailored solutions designed to transform your business operations and customer experiences',\n    'services.ai.title': 'AI Chatbots',\n    'services.ai.description': 'Intelligent conversational agents powered by custom AI model with RAG technology for enhanced context understanding',\n    'services.ai.tech': 'NLP · Custom AI Model · RAG',\n    'services.automation.title': 'Workflow Automation',\n    'services.automation.description': 'Streamlined process automation solutions that reduce manual tasks and optimize operations',\n    'services.automation.tech': 'AWS · Azure · GCP',\n    'services.web.title': 'Web Development',\n    'services.web.description': 'Modern, high-performance web applications built with cutting-edge technologies and frameworks',\n    'services.web.tech': 'React · Next.js · Three.js',\n    'services.microsoft365.title': 'Microsoft 365 & Modern Workplace',\n    'services.microsoft365.description': 'Intelligent cloud solutions for the modern workplace with advanced AI integration and enterprise security',\n    'services.microsoft365.tech': 'Copilot · Azure AD · Power Platform',\n    'services.chatbot.title': 'Experience our AI Chatbot',\n    'services.chatbot.subtitle': 'Try our interactive chatbot to see how we can implement intelligent conversational interfaces for your business',\n    'services.chatbot.feature1': 'Customized to your brand voice and guidelines',\n    'services.chatbot.feature2': 'Integrates with your knowledge base and CRM',\n    'services.chatbot.feature3': '24/7 support for your customers',\n    'services.chatbot.cta': 'Learn how we can implement this for your business',\n    'services.chatbot.greeting': \"Hello! I'm Digimaatwerk's AI assistant. How can I help you today?\",\n    'services.chatbot.user1': \"I'm interested in creating a chatbot for my business.\",\n    'services.chatbot.bot1': \"Great! We specialize in custom AI chatbots that can help with customer service, lead generation, and internal processes. What's your main goal for this chatbot?\",\n    'services.chatbot.bot2': \"That's a great question! Our team would be happy to discuss this in more detail. Would you like us to contact you for a personalized demo?\",\n    'services.chatbot.placeholder': 'Type your message here...',\n    'services.chatbot.meet_maatje': 'Meet Maatje!',\n    'services.chatbot.click_to_chat': 'Click to chat with our AI assistant',\n    'services.view_details': 'View details',\n    \n    // Service Category Pages\n    'service.ai.title': 'AI Chatbots',\n    'service.ai.subtitle': 'Intelligent conversation partners for your customers',\n    'service.ai.description': 'Our AI-powered chatbots provide 24/7 support for your customers. They learn from every conversation, understand complex questions and provide relevant answers. Increase customer satisfaction and reduce your team workload with our smart chatbot solutions.',\n    'service.automation.title': 'Workflow Automation',\n    'service.automation.subtitle': 'More efficient processes, less manual work',\n    'service.automation.description': 'Transform your business processes with our automation solutions. We identify repetitive tasks and streamline them with smart digital workflows. Save time, reduce errors and let your team focus on what really matters.',\n    'service.web.title': 'Web Development',\n    'service.web.subtitle': 'Modern websites and web applications',\n    'service.web.description': 'From simple websites to complex web applications - we build digital experiences that engage and convert your target audience. Our websites are fast, secure and fully optimized for all devices.',\n    'service.microsoft365.title': 'Microsoft 365 & Modern Workplace',\n    'service.microsoft365.subtitle': 'Future-proof cloud solutions for your organization',\n    'service.microsoft365.description': 'Transform your workplace with Microsoft 365 and advanced AI integration. We help organizations implement modern workplace solutions that increase productivity, improve collaboration and provide enterprise-level security. From migration to optimization, we guide your digital transformation.',\n    \n    // Service features and technical details\n    'service.ai.features.1': 'Integration with your current systems and databases',\n    'service.ai.features.2': 'Multilingual support for international customers',\n    'service.ai.features.3': 'Customizable personality and brand voice',\n    'service.ai.features.4': 'Detailed reporting and insights',\n    'service.ai.features.5': 'Seamless handover to human agents when needed',\n    'service.ai.technical': 'We use the latest developments in natural language processing (NLP) and machine learning. Our chatbots are built with GPT technology and can be integrated with your CRM, helpdesk or website.',\n    \n    'service.automation.features.1': 'Visual workflow design without programming knowledge',\n    'service.automation.features.2': 'Integration with popular applications and services',\n    'service.automation.features.3': 'Real-time monitoring and reporting',\n    'service.automation.features.4': 'Scalability for growing businesses',\n    'service.automation.features.5': 'Secure and reliable execution',\n    'service.automation.technical': 'We build automation solutions with tools like Zapier, Microsoft Power Automate and n8n. Our workflows can connect to hundreds of popular applications and services.',\n    \n    'service.web.features.1': 'Mobile-friendly design for all devices',\n    'service.web.features.2': 'Search engine friendly structure (SEO)',\n    'service.web.features.3': 'Fast loading times and optimal performance',\n    'service.web.features.4': 'User-friendly content management',\n    'service.web.features.5': 'Secure payment integrations when needed',\n    'service.web.technical': 'We work with modern technologies like React, Next.js and Node.js. For e-commerce projects we use Shopify or WooCommerce, depending on your specific needs.',\n    \n    'service.microsoft365.features.1': 'Microsoft Copilot implementation and training',\n    'service.microsoft365.features.2': 'Teams Phone and communication solutions',\n    'service.microsoft365.features.3': 'Power Platform automation (Power Apps, Power Automate)',\n    'service.microsoft365.features.4': 'SharePoint and OneDrive optimization',\n    'service.microsoft365.features.5': 'Advanced Security and Compliance configuration',\n    'service.microsoft365.features.6': 'Intune device management and Mobile Device Management',\n    'service.microsoft365.features.7': 'Exchange Online migration and management',\n    'service.microsoft365.features.8': 'Azure Active Directory configuration and SSO',\n    'service.microsoft365.technical': 'With years of experience in the ICT sector and extensive expertise in Microsoft enterprise environments, we guide organizations through every step of their digital transformation. Our approach consists of thorough analysis, thoughtful migration planning, careful implementation and continuous optimization of your Microsoft 365 environment. This ensures a future-proof, efficient and secure digital workplace that aligns with your business goals.',\n    \n    // Case Studies\n    'cases.title': 'Projects',\n    'cases.subtitle': 'Discover how we helped businesses',\n    'cases.cta': 'View all projects',\n    'cases.filter.all': 'All',\n    'cases.filter.ai': 'AI & Chatbots',\n    'cases.filter.automation': 'Automation',\n    'cases.filter.web': 'Web Development',\n    \n    // Contact\n    'contact.title': 'Get in Touch',\n    'contact.subtitle': 'We\\'re ready to help you',\n    'contact.form.name': 'Name',\n    'contact.form.email': 'Email',\n    'contact.form.company': 'Company',\n    'contact.form.project': 'Project Type',\n    'contact.form.message': 'Message',\n    'contact.form.consent': 'I agree to the privacy policy',\n    'contact.form.submit': 'Submit',\n    \n    // Calculator\n    'calculator.title': 'Project Calculator',\n    'calculator.subtitle': 'Estimate the cost and timeline of your project',\n    'calculator.type': 'Project type',\n    'calculator.type.chatbot': 'AI & Chatbot',\n    'calculator.type.automation': 'Automation',\n    'calculator.type.web': 'Website / App',\n    'calculator.type.combined': 'Combined',\n    'calculator.scale': 'Scale',\n    'calculator.scale.small': 'Small',\n    'calculator.scale.medium': 'Medium',\n    'calculator.scale.large': 'Large',\n    'calculator.features': 'Features',\n    'calculator.timeline': 'Timeline priority',\n    'calculator.timeline.standard': 'Standard',\n    'calculator.timeline.expedited': 'Expedited',\n    'calculator.timeline.rush': 'Rush',\n    'calculator.calculate': 'Calculate',\n    'calculator.result.budget': 'Estimated budget',\n    'calculator.result.timeline': 'Estimated timeline',\n    \n    // Tech Stack\n    'tech.title': 'Our Technology Stack',\n    'tech.subtitle': 'We use cutting-edge technologies to deliver high-performance, scalable solutions',\n    'tech.react': 'Front-end UI library',\n    'tech.nextjs': 'React framework',\n    'tech.threejs': '3D visualizations',\n    'tech.gpt4': 'AI language model',\n    'tech.compare.title': 'Compare Our Technology Capabilities',\n    'tech.compare.feature': 'Feature',\n    'tech.compare.traditional': 'Traditional Stack',\n    'tech.compare.digimaatwerk': 'Digimaatwerk Stack',\n    'tech.compare.performance': 'Performance Score',\n    'tech.compare.3d': '3D Capabilities',\n    'tech.compare.ai': 'AI Integration',\n    'tech.compare.scalability': 'Scalability',\n    'tech.compare.timetomarket': 'Time to Market',\n    \n    // Testimonials\n    'testimonials.title': 'Client Testimonials',\n    'testimonials.subtitle': 'See what our clients say about working with Digimaatwerk',\n    'testimonials.reviews': 'from 28 reviews',\n    'testimonials.read': 'Read all Google reviews',\n    \n    // Footer\n    'footer.company': 'Company',\n    'footer.services': 'Services',\n    'footer.contact': 'Contact',\n    'footer.legal': 'Legal',\n    'footer.privacy': 'Privacy Policy',\n    'footer.terms': 'Terms of Service',\n    'footer.cookies': 'Cookie Policy',\n    'footer.copyright': 'All rights reserved',\n    \n    // Misc\n    'language': 'Language',\n    'language.dutch': 'Dutch',\n    'language.english': 'English',\n  }\n};\n\n// Provider component\ninterface LanguageProviderProps {\n  children: ReactNode;\n}\n\nexport const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {\n  // Get the initial language from localStorage or use Dutch as default\n  const [language, setLanguageState] = useState<Language>(() => {\n    const savedLanguage = localStorage.getItem('language');\n    return (savedLanguage === 'en' ? 'en' : 'nl') as Language;\n  });\n\n  // Function to set the language and save it to localStorage\n  const setLanguage = (lang: Language) => {\n    localStorage.setItem('language', lang);\n    setLanguageState(lang);\n  };\n\n  // Translation function\n  const t = (key: string): string => {\n    if (!translations[language][key]) {\n      console.warn(`Translation key \"${key}\" not found in language \"${language}\"`);\n      return key;\n    }\n    return translations[language][key];\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\n// Custom hook to use the language context\nexport const useLanguage = () => useContext(LanguageContext);","size_bytes":25721},"client/src/lib/mockReplit.ts":{"content":"// Mock for the Replit object that Three.js tries to use\n// This prevents the 'Cannot read properties of undefined (reading 'replit')' error\n// Note: This is a workaround specifically for running Three.js in Replit\n\ndeclare global {\n  interface Window {\n    replit?: any;\n    OffscreenCanvas?: any;\n  }\n}\n\nexport function setupReplitMock() {\n  if (typeof window !== 'undefined') {\n    // Create Replit mock if it doesn't exist\n    if (!window.replit) {\n      window.replit = {\n        // Mock functions and properties needed by Three.js\n        getToken: () => 'mock-token',\n        environment: {\n          isDesktop: false,\n          isMobile: false,\n          isEmbed: false,\n        },\n        // Add other properties Three.js/Drei might use\n        auth: {\n          currentUser: null,\n        },\n      };\n    }\n    \n    // Add OffscreenCanvas mock if needed\n    if (!window.OffscreenCanvas) {\n      class MockOffscreenCanvas {\n        width: number;\n        height: number;\n        \n        constructor(width: number, height: number) {\n          this.width = width;\n          this.height = height;\n        }\n        \n        getContext(): any {\n          return null;\n        }\n      }\n      \n      window.OffscreenCanvas = MockOffscreenCanvas;\n    }\n    \n    // Add other polyfills for Three.js if needed\n    if (!window.HTMLCanvasElement.prototype.transferControlToOffscreen) {\n      window.HTMLCanvasElement.prototype.transferControlToOffscreen = function() {\n        return new window.OffscreenCanvas(this.width, this.height);\n      };\n    }\n  }\n}","size_bytes":1557},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey[0] as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1376},"client/src/lib/store.ts":{"content":"import { useState, useEffect } from 'react';\n\n// Simple chat storage for persistence across page navigation\nlet storedChatMessages: any[] = [];\n\nexport const useChatStore = () => {\n  const [messages, setMessages] = useState(storedChatMessages);\n  \n  useEffect(() => {\n    storedChatMessages = messages;\n  }, [messages]);\n  \n  const addMessage = (message: { sender: 'bot' | 'user'; message: string }) => {\n    setMessages((prev) => [...prev, message]);\n  };\n  \n  const clearMessages = () => {\n    setMessages([]);\n    storedChatMessages = [];\n  };\n  \n  return {\n    messages,\n    addMessage,\n    clearMessages\n  };\n};\n\n// Cookie consent preferences\nexport const useCookieConsent = () => {\n  const [consent, setConsent] = useState<'accepted' | 'customized' | null>(null);\n  \n  useEffect(() => {\n    const storedConsent = localStorage.getItem('cookie-consent') as 'accepted' | 'customized' | null;\n    setConsent(storedConsent);\n  }, []);\n  \n  const acceptAll = () => {\n    localStorage.setItem('cookie-consent', 'accepted');\n    setConsent('accepted');\n  };\n  \n  const customize = () => {\n    localStorage.setItem('cookie-consent', 'customized');\n    setConsent('customized');\n  };\n  \n  return {\n    consent,\n    acceptAll,\n    customize\n  };\n};\n","size_bytes":1244},"client/src/lib/types.ts":{"content":"export interface ContactFormData {\n  name: string;\n  email: string;\n  company: string;\n  projectType: string;\n  message: string;\n  consent: boolean;\n}\n\nexport interface ChatMessage {\n  sender: 'bot' | 'user';\n  message: string;\n  timestamp?: Date;\n}\n\nexport interface ProjectEstimate {\n  id: string;\n  projectType: 'chatbot' | 'automation' | 'web' | 'combined';\n  scale: 'small' | 'medium' | 'large';\n  features: string[];\n  timelinePriority: number;\n  estimatedBudgetMin: number;\n  estimatedBudgetMax: number;\n  estimatedTimelineMin: number;\n  estimatedTimelineMax: number;\n  createdAt: Date;\n}\n\nexport interface Testimonial {\n  name: string;\n  position: string;\n  company: string;\n  quote: string;\n  rating: number;\n}\n\nexport interface CaseStudy {\n  id: string;\n  title: string;\n  category: string;\n  description: string;\n  challenge: string;\n  solution: string;\n  result: string;\n  metrics: {\n    label: string;\n    value: string;\n  }[];\n  imageUrl: string;\n  client: string;\n  industry: string;\n  featured: boolean;\n}\n","size_bytes":1022},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n */\nexport function getRandomInt(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","size_bytes":423},"client/src/pages/Blogs.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useLanguage } from '@/lib/languageContext';\nimport { Button } from '@/components/ui/button';\nimport { \n  Card, \n  CardContent, \n  CardDescription, \n  CardFooter, \n  CardHeader, \n  CardTitle \n} from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\nconst Blogs = () => {\n  const { language } = useLanguage();\n  const [activeTab, setActiveTab] = useState('case-studies');\n  const [caseStudies, setCaseStudies] = useState<any[]>([]);\n  const [blogPosts, setBlogPosts] = useState<any[]>([]);\n  const [services, setServices] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchCmsContent = async () => {\n      setLoading(true);\n      try {\n        // Case Studies\n        const caseStudiesRes = await fetch(`/api/case-studies?lang=${language}`);\n        const caseStudiesData = await caseStudiesRes.json();\n        if (caseStudiesData.success) {\n          setCaseStudies(caseStudiesData.data);\n        }\n\n        // Blog Posts\n        const blogRes = await fetch(`/api/blog?lang=${language}`);\n        const blogData = await blogRes.json();\n        if (blogData.success) {\n          setBlogPosts(blogData.data);\n        }\n\n        // Services\n        const servicesRes = await fetch(`/api/services?lang=${language}`);\n        const servicesData = await servicesRes.json();\n        if (servicesData.success) {\n          setServices(servicesData.data);\n        }\n      } catch (err) {\n        console.error('Error fetching CMS content:', err);\n        setError('Failed to load CMS content. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCmsContent();\n  }, [language]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto py-8\">\n        <div className=\"bg-red-50 border border-red-200 text-red-800 rounded-md p-4\">\n          <p>{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">{language === 'nl' ? 'Blogs & Case Studies' : 'Blogs & Case Studies'}</h1>\n      \n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"mb-6\">\n          <TabsTrigger value=\"case-studies\">{language === 'nl' ? 'Case Studies' : 'Case Studies'} ({caseStudies.length})</TabsTrigger>\n          <TabsTrigger value=\"blog\">{language === 'nl' ? 'Blog Berichten' : 'Blog Posts'} ({blogPosts.length})</TabsTrigger>\n          <TabsTrigger value=\"services\">{language === 'nl' ? 'Diensten' : 'Services'} ({services.length})</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"case-studies\">\n          <h2 className=\"text-2xl font-semibold mb-4\">{language === 'nl' ? 'Case Studies' : 'Case Studies'}</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {caseStudies.map((study) => (\n              <a \n                key={study.slug} \n                href={`/case-studies/${study.slug}`} \n                className=\"block transition-transform hover:scale-[1.02] duration-300\"\n              >\n                <Card className=\"h-full flex flex-col hover:shadow-md transition-shadow cursor-pointer\">\n                  <CardHeader>\n                    <div className=\"text-sm text-muted-foreground mb-2\">{study.category}</div>\n                    <CardTitle>{study.title}</CardTitle>\n                    <CardDescription>{study.client} • {study.industry}</CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"flex-grow\">\n                    <p>{study.description}</p>\n                  </CardContent>\n                  <CardFooter className=\"flex justify-between\">\n                    {study.featured && (\n                      <span className=\"inline-flex items-center rounded-md bg-blue-50 px-2 py-1 text-xs font-medium text-blue-700 ring-1 ring-inset ring-blue-700/10\">\n                        {language === 'nl' ? 'Uitgelicht' : 'Featured'}\n                      </span>\n                    )}\n                    <div className=\"text-sm text-muted-foreground\">\n                      {new Date(study.date).toLocaleDateString()}\n                    </div>\n                    <span className=\"text-accent text-sm font-medium inline-flex items-center\">\n                      {language === 'nl' ? 'Bekijk Project' : 'View Case'}\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                      </svg>\n                    </span>\n                  </CardFooter>\n                </Card>\n              </a>\n            ))}\n          </div>\n        </TabsContent>\n        \n        <TabsContent value=\"blog\">\n          <h2 className=\"text-2xl font-semibold mb-4\">{language === 'nl' ? 'Blog Berichten' : 'Blog Posts'}</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {blogPosts.map((post) => (\n              <a \n                key={post.slug} \n                href={`/blog/${post.slug}`} \n                className=\"block transition-transform hover:scale-[1.02] duration-300\"\n              >\n                <Card className=\"h-full flex flex-col hover:shadow-md transition-shadow cursor-pointer\">\n                  <CardHeader>\n                    <CardTitle>{post.title}</CardTitle>\n                    <CardDescription>{language === 'nl' ? 'Door' : 'By'} {post.author} • {new Date(post.date).toLocaleDateString()}</CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"flex-grow\">\n                    <p>{post.excerpt}</p>\n                  </CardContent>\n                  <CardFooter className=\"flex justify-between\">\n                    <div className=\"flex flex-wrap gap-2\">\n                      {post.tags?.slice(0, 2).map((tag: string) => (\n                        <span key={tag} className=\"inline-flex items-center rounded-md bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10\">\n                          {tag}\n                        </span>\n                      ))}\n                    </div>\n                    <span className=\"text-accent text-sm font-medium inline-flex items-center\">\n                      {language === 'nl' ? 'Lees meer' : 'Read more'}\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                      </svg>\n                    </span>\n                  </CardFooter>\n                </Card>\n              </a>\n            ))}\n          </div>\n        </TabsContent>\n        \n        <TabsContent value=\"services\">\n          <h2 className=\"text-2xl font-semibold mb-4\">{language === 'nl' ? 'Diensten' : 'Services'}</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {services.map((service) => (\n              <a \n                key={service.slug} \n                href={`/services/${service.slug}`} \n                className=\"block transition-transform hover:scale-[1.02] duration-300\"\n              >\n                <Card className=\"h-full flex flex-col hover:shadow-md transition-shadow cursor-pointer\">\n                  <CardHeader>\n                    <CardTitle>{service.title}</CardTitle>\n                    <CardDescription>\n                      <i className={service.icon}></i>\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"flex-grow\">\n                    <p className=\"mb-4\">{service.short_description}</p>\n                    {service.features && Array.isArray(service.features) && (\n                      <div className=\"mb-4\">\n                        <h4 className=\"font-medium mb-2\">{language === 'nl' ? 'Kenmerken:' : 'Features:'}</h4>\n                        <ul className=\"list-disc list-inside\">\n                          {service.features.slice(0, 3).map((feature: any, index: number) => (\n                            <li key={index}>{feature.name}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n                  </CardContent>\n                  <CardFooter className=\"flex justify-between\">\n                    <div className=\"text-sm text-muted-foreground\">\n                      {service.tech_stack && Array.isArray(service.tech_stack) && service.tech_stack.length > 0 ? (\n                        <span>\n                          {language === 'nl' ? 'Technologie: ' : 'Technology: '} \n                          {service.tech_stack[0].name}\n                          {service.tech_stack.length > 1 ? '...' : ''}\n                        </span>\n                      ) : null}\n                    </div>\n                    <span className=\"text-accent text-sm font-medium inline-flex items-center\">\n                      {language === 'nl' ? 'Bekijk Service' : 'View Service'}\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                      </svg>\n                    </span>\n                  </CardFooter>\n                </Card>\n              </a>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Blogs;","size_bytes":10045},"client/src/pages/CaseStudy.tsx":{"content":"import { useParams } from 'wouter';\nimport { useQuery } from '@tanstack/react-query';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\nimport { useRef, useEffect } from 'react';\n\n// Enhanced helper function to format the HTML content for case studies\nfunction formatCaseStudyContent(content: string): string {\n  // Add section dividers to create better readable content\n  let formatted = content;\n  \n  // Replace Markdown heading syntax with proper HTML headings and add section classes\n  formatted = formatted.replace(/\\n# (.*?)\\n/g, '<div class=\"content-section\"><h1 class=\"section-heading\">$1</h1>');\n  formatted = formatted.replace(/\\n## (.*?)\\n/g, '<h2 class=\"subsection-heading\">$1</h2>');\n  formatted = formatted.replace(/\\n### (.*?)\\n/g, '<h3 class=\"mini-heading\">$1</h3>');\n  \n  // Close previous section before starting a new one\n  formatted = formatted.replace(/<div class=\"content-section\"><h1/g, '</div><div class=\"content-section\"><h1');\n  \n  // Fix bullet points that might be simple dashes\n  formatted = formatted.replace(/\\n- (.*?)(?=\\n)/g, '<ul class=\"fancy-list\"><li>$1</li></ul>');\n  formatted = formatted.replace(/<\\/ul>\\n<ul class=\"fancy-list\">/g, '');\n  \n  // Fix numbered lists\n  formatted = formatted.replace(/\\n\\d+\\. (.*?)(?=\\n)/g, '<ol class=\"numbered-list\"><li>$1</li></ol>');\n  formatted = formatted.replace(/<\\/ol>\\n<ol class=\"numbered-list\">/g, '');\n  \n  // Enhance blockquotes\n  formatted = formatted.replace(/\\n> (.*?)(?=\\n)/g, '<blockquote class=\"highlight-quote\">$1</blockquote>');\n  \n  // Enhance strong text with accent color\n  formatted = formatted.replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"accent-text\">$1</strong>');\n  \n  // Add paragraph styling\n  formatted = formatted.replace(/\\n([^<\\n].*?)(?=\\n)/g, '<p class=\"content-paragraph\">$1</p>');\n  \n  // Add final section closing tag if needed\n  if (formatted.includes('<div class=\"content-section\">') && !formatted.endsWith('</div>')) {\n    formatted += '</div>';\n  }\n  \n  // Fix any duplicate paragraph tags or improper nesting\n  formatted = formatted.replace(/<p class=\"content-paragraph\"><p class=\"content-paragraph\">/g, '<p class=\"content-paragraph\">');\n  formatted = formatted.replace(/<\\/p><\\/p>/g, '</p>');\n  \n  // Remove the first </div> tag if it exists at the beginning\n  if (formatted.startsWith('</div>')) {\n    formatted = formatted.substring(5);\n  }\n  \n  return formatted;\n}\n\ninterface CaseStudy {\n  slug: string;\n  title: string;\n  featured_image: string;\n  category: string;\n  client: string;\n  industry: string;\n  date: string;\n  description: string;\n  challenge: string;\n  solution: string;\n  result: string;\n  metrics: Array<{ label: string; value: string }>;\n  live_url?: string;\n  featured: boolean;\n  content: string;\n}\n\nconst CaseStudyPage = () => {\n  const { slug } = useParams();\n  const { language } = useLanguage();\n  \n  // Fetch case study data from API\n  const { data: caseStudy, isLoading, error } = useQuery({\n    queryKey: ['/api/case-studies', slug, language],\n    queryFn: async () => {\n      const response = await fetch(`/api/case-studies/${slug}?lang=${language}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch case study');\n      }\n      const data = await response.json();\n      // Format the content for better rendering using our helper function\n      if (data.data && data.data.content) {\n        data.data.content = formatCaseStudyContent(data.data.content);\n      }\n      return data.data as CaseStudy;\n    }\n  });\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-primary flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-accent\"></div>\n      </div>\n    );\n  }\n\n  // Error state\n  if (error || !caseStudy) {\n    return (\n      <div className=\"min-h-screen bg-primary flex flex-col items-center justify-center p-4\">\n        <h1 className=\"text-2xl font-header mb-4\">\n          {language === 'nl' ? 'Case study niet gevonden' : 'Case study not found'}\n        </h1>\n        <p className=\"text-foreground/70 mb-6\">\n          {language === 'nl' \n            ? 'De case study die je zoekt kon niet worden gevonden.' \n            : 'The case study you are looking for could not be found.'}\n        </p>\n        <a \n          href=\"/#case-studies\" \n          className=\"px-6 py-3 bg-accent text-primary rounded-lg hover:bg-accent/90 transition inline-block\"\n        >\n          {language === 'nl' ? 'Terug naar case studies' : 'Back to case studies'}\n        </a>\n      </div>\n    );\n  }\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(language === 'nl' ? 'nl-NL' : 'en-US', {\n      year: 'numeric',\n      month: 'long',\n    }).format(date);\n  };\n\n  return (\n    <div className=\"bg-primary min-h-screen relative\">\n      {/* Background gradient */}\n      <div className=\"absolute inset-0 -z-10 bg-gradient-to-b from-primary to-secondary opacity-30\"></div>\n      \n      {/* Hero section */}\n      <div className=\"relative h-[40vh] md:h-[50vh] overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black/60 z-10\"></div>\n        <img \n          src={caseStudy.featured_image} \n          alt={caseStudy.title}\n          className=\"absolute w-full h-full object-cover\"\n        />\n        <div className=\"relative z-20 container mx-auto px-4 h-full flex flex-col justify-end pb-8 md:pb-12 pt-20 md:pt-0\">\n          <div className=\"inline-block px-3 py-1 text-accent text-sm font-semibold mb-4 bg-accent/10 rounded\">\n            {caseStudy.category}\n          </div>\n          <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-header font-bold mb-4 text-white leading-tight\">\n            {caseStudy.title}\n          </h1>\n          <p className=\"text-white/80 max-w-3xl mb-4 md:mb-6 text-sm md:text-base leading-relaxed\">\n            {caseStudy.description}\n          </p>\n          <div className=\"flex flex-wrap gap-4 text-sm text-white/70\">\n            <div>\n              <span className=\"font-medium\">{language === 'nl' ? 'Klant: ' : 'Client: '}</span>\n              {caseStudy.client}\n            </div>\n            <div>\n              <span className=\"font-medium\">{language === 'nl' ? 'Industrie: ' : 'Industry: '}</span>\n              {caseStudy.industry}\n            </div>\n            <div>\n              <span className=\"font-medium\">{language === 'nl' ? 'Datum: ' : 'Date: '}</span>\n              {formatDate(caseStudy.date)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 py-10\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          {/* Sticky sidebar with navigation and metrics */}\n          <div className=\"col-span-1\">\n            <div className=\"sticky top-24 space-y-6\">\n              {/* Navigation links that stay visible */}\n              <div className=\"bg-secondary/20 rounded-xl p-5 border border-accent/10 shadow-md\">\n                <h3 className=\"text-lg font-header font-semibold mb-4 text-accent\">\n                  {language === 'nl' ? 'Navigatie' : 'Navigation'}\n                </h3>\n                \n                <a \n                  href=\"/\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    window.location.href = '/#case-studies';\n                  }}\n                  className=\"flex items-center mb-4 px-3 py-2 rounded-lg bg-secondary/40 hover:bg-secondary/60 transition group\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n                  </svg>\n                  <span className=\"text-sm group-hover:text-accent transition\">\n                    {language === 'nl' ? 'Alle Case Studies' : 'All Case Studies'}\n                  </span>\n                </a>\n                \n                {caseStudy.live_url && (\n                  <a \n                    href={caseStudy.live_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"flex items-center px-3 py-2 rounded-lg bg-accent text-primary hover:bg-accent/90 transition\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                    </svg>\n                    <span className=\"text-sm\">\n                      {language === 'nl' ? 'Bekijk Live Website' : 'View Live Website'}\n                    </span>\n                  </a>\n                )}\n              </div>\n              \n              {/* Metrics section that sticks with navigation */}\n              <div className=\"bg-secondary/20 rounded-xl p-5 border border-accent/10 shadow-md\">\n                <h3 className=\"text-lg font-header font-semibold mb-4 text-accent\">\n                  {language === 'nl' ? 'Project Statistieken' : 'Project Statistics'}\n                </h3>\n                \n                <div className=\"space-y-4\">\n                  {caseStudy.metrics.map((metric, index) => (\n                    <motion.div \n                      key={index}\n                      initial={{ opacity: 0, x: -10 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.4, delay: index * 0.1 }}\n                      className=\"flex items-start gap-3\"\n                    >\n                      <div className=\"bg-accent/20 p-1.5 rounded-full flex-shrink-0\">\n                        {metric.label.toLowerCase().includes('tijd') || metric.label.toLowerCase().includes('time') ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                          </svg>\n                        ) : metric.label.toLowerCase().includes('besparing') || metric.label.toLowerCase().includes('saving') || metric.label.toLowerCase().includes('kosten') || metric.label.toLowerCase().includes('cost') ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                          </svg>\n                        ) : metric.label.toLowerCase().includes('efficiënt') || metric.label.toLowerCase().includes('efficient') ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                          </svg>\n                        ) : (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                          </svg>\n                        )}\n                      </div>\n                      <div>\n                        <div className=\"text-base font-header font-bold text-accent\">\n                          {metric.value}\n                        </div>\n                        <div className=\"text-xs text-foreground\">\n                          {metric.label}\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))}\n                </div>\n              </div>\n              \n              {/* Project overview in the sidebar */}\n              <div className=\"bg-secondary/20 rounded-xl p-5 border border-accent/10 shadow-md space-y-5\">\n                <h3 className=\"text-lg font-header font-semibold mb-2 text-accent\">\n                  {language === 'nl' ? 'Projectoverzicht' : 'Project Overview'}\n                </h3>\n                \n                {/* Challenge section */}\n                <div>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <div className=\"bg-accent/20 p-1.5 rounded-full flex-shrink-0\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\n                      </svg>\n                    </div>\n                    <h4 className=\"text-base font-header font-semibold text-accent\">\n                      {language === 'nl' ? 'De Uitdaging' : 'The Challenge'}\n                    </h4>\n                  </div>\n                  <div className=\"pl-2 border-l-2 border-accent/20 text-sm text-foreground\">\n                    <p>{caseStudy.challenge}</p>\n                  </div>\n                </div>\n                \n                {/* Solution section */}\n                <div>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <div className=\"bg-accent/20 p-1.5 rounded-full flex-shrink-0\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                      </svg>\n                    </div>\n                    <h4 className=\"text-base font-header font-semibold text-accent\">\n                      {language === 'nl' ? 'Onze Oplossing' : 'Our Solution'}\n                    </h4>\n                  </div>\n                  <div className=\"pl-2 border-l-2 border-accent/20 text-sm text-foreground\">\n                    <p>{caseStudy.solution}</p>\n                  </div>\n                </div>\n                \n                {/* Result section */}\n                <div>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <div className=\"bg-accent/20 p-1.5 rounded-full flex-shrink-0\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-accent\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" />\n                      </svg>\n                    </div>\n                    <h4 className=\"text-base font-header font-semibold text-accent\">\n                      {language === 'nl' ? 'Het Resultaat' : 'The Result'}\n                    </h4>\n                  </div>\n                  <div className=\"pl-2 border-l-2 border-accent/20 text-sm text-foreground\">\n                    <p>{caseStudy.result}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Main content area */}\n          <div className=\"col-span-1 md:col-span-3\">\n            {/* Case study content with scroll animations - removed space-y-12 class */}\n            <div className=\"mt-[-2rem]\">\n              {/* Main content section with motion div moved up and negative margin applied */}\n              <section>\n                <motion.div \n                  initial={{ opacity: 0 }}\n                  whileInView={{ opacity: 1 }}\n                  transition={{ duration: 0.7 }}\n                  viewport={{ once: true, margin: \"-50px\" }}\n                  className=\"bg-gradient-to-r from-secondary/30 to-secondary/10 rounded-xl overflow-hidden shadow-lg border border-accent/10 p-8\"\n                >\n                  <div className=\"case-study-content prose prose-lg max-w-none \n                    prose-headings:text-accent prose-headings:font-header prose-headings:font-bold \n                    prose-p:text-foreground prose-p:font-medium prose-p:mb-4\n                    prose-strong:text-accent prose-strong:font-medium \n                    prose-a:text-accent prose-a:no-underline hover:prose-a:underline \n                    prose-code:text-accent prose-code:bg-accent/10 prose-code:px-1 prose-code:py-0.5 prose-code:rounded \n                    prose-code:before:content-none prose-code:after:content-none \n                    prose-blockquote:border-l-4 prose-blockquote:border-l-accent prose-blockquote:bg-accent/10 prose-blockquote:py-3 prose-blockquote:px-5 prose-blockquote:not-italic \n                    prose-blockquote:text-foreground prose-blockquote:font-medium prose-blockquote:text-lg\n                    prose-ul:pl-5 prose-ol:pl-5 prose-li:text-foreground prose-li:font-medium prose-li:marker:text-accent prose-li:my-1\n                    prose-img:rounded-lg prose-img:shadow-md prose-img:my-6 prose-img:mx-auto prose-img:max-w-full prose-img:h-auto\n                    [&_img]:rounded-lg [&_img]:shadow-md [&_img]:my-6 [&_img]:mx-auto [&_img]:max-w-full [&_img]:h-auto [&_img]:block\n                    [&_em]:text-foreground/70 [&_em]:text-sm [&_em]:italic [&_em]:text-center [&_em]:block [&_em]:mt-2\n                    [&_ul_li]:text-foreground [&_ol_li]:text-foreground [&_li]:text-foreground \n                    [&_ul]:text-foreground [&_ol]:text-foreground \n                    [&_*:not(svg):not(path):not(g)]:text-foreground [&_.text-gray-500]:text-foreground \n                    [&_.text-gray-600]:text-foreground [&_.text-gray-400]:text-foreground\n                    \n                    [&_.content-section]:mb-8 [&_.section-heading]:text-2xl [&_.section-heading]:mb-4 \n                    [&_.subsection-heading]:text-xl [&_.subsection-heading]:mb-3 [&_.subsection-heading]:text-accent/90\n                    [&_.mini-heading]:text-lg [&_.mini-heading]:mb-2 \n                    [&_.content-paragraph]:mb-4 [&_.content-paragraph]:text-foreground [&_.content-paragraph]:font-medium [&_.content-paragraph:last-child]:mb-0 \n                    [&_.fancy-list]:ml-4 [&_.fancy-list>li]:ml-2 [&_.fancy-list>li]:mb-2 [&_.fancy-list>li]:font-medium\n                    [&_.numbered-list]:ml-4 [&_.numbered-list>li]:ml-2 [&_.numbered-list>li]:mb-2 [&_.numbered-list>li]:font-medium\n                    [&_.highlight-quote]:border-l-4 [&_.highlight-quote]:italic [&_.highlight-quote]:text-foreground/80 \n                    [&_.accent-text]:text-accent [&_.accent-text]:font-semibold\n\n                    before:content-[attr(data-before)] after:content-[attr(data-after)]\"\n                    dangerouslySetInnerHTML={{ __html: caseStudy.content }} \n                  />\n                </motion.div>\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Contact CTA */}\n      <div className=\"bg-secondary py-12\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-2xl md:text-3xl font-header font-bold mb-4\">\n            {language === 'nl' ? 'Klaar om jouw project te bespreken?' : 'Ready to discuss your project?'}\n          </h2>\n          <p className=\"text-foreground max-w-2xl mx-auto mb-8\">\n            {language === 'nl' \n              ? 'Wij helpen je graag bij het realiseren van jouw digitale ambities. Neem contact met ons op voor een vrijblijvend gesprek.' \n              : \"We're here to help you achieve your digital ambitions. Contact us for a no-obligation conversation.\"}\n          </p>\n          <a \n            href=\"/#contact\" \n            className=\"inline-flex items-center px-6 py-3 bg-accent text-primary rounded-lg hover:bg-accent/80 hover:shadow-lg hover:-translate-y-1 transition-all duration-300\"\n          >\n            {language === 'nl' ? 'Neem Contact Op' : 'Contact Us'}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n            </svg>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CaseStudyPage;","size_bytes":21472},"client/src/pages/Home.tsx":{"content":"import HeroSection from \"@/components/HeroSection\";\nimport ServicesSection from \"@/components/ServicesSection\";\nimport CaseStudiesSection from \"@/components/CaseStudiesSection\";\nimport TechStackSection from \"@/components/TechStackSection\";\nimport PricingSection from \"@/components/PricingSection\";\nimport ProjectCalculator from \"@/components/ProjectCalculator\";\nimport TestimonialsSection from \"@/components/TestimonialsSection\";\nimport ContactSection from \"@/components/ContactSection\";\n\nconst Home = () => {\n  return (\n    <>\n      <HeroSection />\n      <ServicesSection />\n      <CaseStudiesSection />\n      <TechStackSection />\n      <PricingSection />\n      <ProjectCalculator />\n      <TestimonialsSection />\n      <ContactSection />\n    </>\n  );\n};\n\nexport default Home;","size_bytes":777},"client/src/pages/Portfolio.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\nimport { Loader2 } from 'lucide-react';\nimport { apiRequest } from '@/lib/queryClient';\nimport BubblePortfolioAnimation from '@/components/BubblePortfolioAnimation';\n\ninterface PortfolioItem {\n  id: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n  websiteUrl: string;\n  category: 'web' | 'automation' | 'chatbot';\n  websiteScreenshot?: string;\n  displayType?: 'default' | 'bubble' | 'minimal';\n  hoverColor?: string;\n}\n\n// Portfolio data wordt geladen via de API in de Portfolio component\n\nconst PortfolioBlock = ({ \n  item, \n  onClick,\n  screenshotUrl,\n  isLoading\n}: { \n  item: PortfolioItem, \n  onClick: () => void,\n  screenshotUrl?: string,\n  isLoading?: boolean\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  \n  const getCategoryColors = (category: string, itemId?: string, hoverColor?: string) => {\n    // Use CMS-defined hover color if available\n    if (hoverColor) {\n      const colorMap: Record<string, string> = {\n        'pink-rose': 'from-pink-400 to-rose-600',\n        'yellow-yellow': 'from-yellow-400 to-yellow-600',\n        'amber-yellow': 'from-amber-700 to-yellow-600',\n        'purple-indigo': 'from-purple-400 to-indigo-600',\n        'blue-blue': 'from-blue-400 to-blue-700',\n        'green-emerald': 'from-green-400 to-emerald-600',\n        'red-red': 'from-red-400 to-red-600',\n        'orange-orange': 'from-orange-400 to-orange-600',\n        'cyan-teal': 'from-cyan-400 to-teal-600',\n        'violet-purple': 'from-violet-400 to-purple-600'\n      };\n      return colorMap[hoverColor] || 'from-blue-400 to-blue-700';\n    }\n    \n    // Fallback colors by category if no hover color is defined\n    switch(category) {\n      case 'web':\n        return 'from-blue-400 to-blue-700';\n      case 'automation':\n        return 'from-amber-400 to-amber-700';\n      case 'chatbot':\n        return 'from-green-400 to-purple-700';\n      default:\n        return 'from-accent to-primary';\n    }\n  };\n  \n  const getCategoryIcon = (category: string, itemId?: string) => {\n    // Specific icons for each portfolio item\n    if (itemId === 'limonade-webshop') {\n      return '🛍️';\n    }\n    if (itemId === 'fast-taxi-rotterdam') {\n      return '🚕';\n    }\n    if (itemId === 'houtbewerking-concept') {\n      return '🪵';\n    }\n    if (itemId === 'maatje-ai-chatbot') {\n      return '🤖';\n    }\n    \n    // Fallback icons by category\n    switch(category) {\n      case 'web':\n        return '🌐';\n      case 'automation':\n        return '⚙️';\n      case 'chatbot':\n        return '🤖';\n      default:\n        return '✨';\n    }\n  };\n  \n  return (\n    <motion.div\n      className={`rounded-xl overflow-hidden bg-gradient-to-br ${getCategoryColors(item.category, item.id)} p-1 shadow-lg`}\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true }}\n      transition={{ duration: 0.5 }}\n      whileHover={{ scale: 1.03 }}\n      onClick={onClick}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div className=\"bg-secondary/80 backdrop-blur-sm rounded-lg h-full cursor-pointer relative overflow-hidden flex flex-col\">\n        {/* Website screenshot in monitor frame */}\n        <div className=\"relative h-48 overflow-hidden bg-black/20\">\n          <div className=\"absolute inset-0 flex items-center justify-center py-2\">\n            {/* Browser frame styling */}\n            <div className=\"w-[95%] h-[90%] rounded-xl overflow-hidden shadow-lg\">\n              {/* Browser top bar with controls */}\n              <div className=\"bg-gray-900 rounded-t-xl p-1 flex items-center\">\n                <div className=\"flex space-x-1\">\n                  <div className=\"w-2 h-2 rounded-full bg-red-500\"></div>\n                  <div className=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                </div>\n                {item.websiteUrl && (\n                  <div className=\"mx-auto text-center text-xs text-gray-400 font-mono overflow-hidden text-ellipsis whitespace-nowrap max-w-[140px]\">\n                    {item.websiteUrl}\n                  </div>\n                )}\n              </div>\n              \n              {/* Browser content - full image without padding */}\n              <div className=\"aspect-video flex items-center justify-center overflow-hidden bg-white\">\n                <img \n                  src={screenshotUrl || item.websiteScreenshot || '/images/portfolio/fasttaxi.png'} \n                  alt={`${item.title} website`}\n                  className=\"w-full h-full object-cover object-center\"\n                  onError={(e) => {\n                    console.error('Afbeelding kon niet worden geladen, fallback naar fasttaxi.png');\n                    e.currentTarget.src = '/images/portfolio/fasttaxi.png';\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"absolute top-2 right-2 bg-accent/80 backdrop-blur-sm text-primary text-xs px-2 py-1 rounded font-medium z-20\">\n            {item.category === 'web' ? 'Website' : item.category === 'automation' ? 'Automatisering' : 'Chatbot'}\n          </div>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-6 flex-grow\">\n          {/* Animated background */}\n          <div \n            className={`absolute inset-0 bg-gradient-to-br ${getCategoryColors(item.category, item.id, item.hoverColor)} opacity-10 transition-opacity duration-500 ${isHovered ? 'opacity-20' : 'opacity-10'}`}\n          />\n          \n          {/* Animated particles - enhanced for fast-taxi-rotterdam */}\n          <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n            {[...Array(item.id === 'fast-taxi-rotterdam' ? 15 : 10)].map((_, i) => (\n              <div \n                key={i}\n                className={`absolute rounded-full bg-white ${item.id === 'fast-taxi-rotterdam' ? 'w-8 h-8' : 'w-6 h-6'}`}\n                style={{\n                  top: `${Math.random() * 100}%`,\n                  left: `${Math.random() * 100}%`,\n                  animation: `float ${3 + Math.random() * 7}s infinite ease-in-out ${Math.random() * 5}s`,\n                  transform: `scale(${0.5 + Math.random() * 0.5})`,\n                  opacity: isHovered ? (item.id === 'fast-taxi-rotterdam' ? 0.4 : 0.3) : (item.id === 'fast-taxi-rotterdam' ? 0.2 : 0.1)\n                }}\n              />\n            ))}\n          </div>\n          \n          <div className=\"relative z-10\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"w-10 h-10 rounded-full bg-primary/30 flex items-center justify-center mr-3 backdrop-blur-sm\">\n                <span className=\"text-lg\">{getCategoryIcon(item.category, item.id)}</span>\n              </div>\n              <h3 className=\"text-xl font-header font-bold\">{item.title}</h3>\n            </div>\n            \n            <p className=\"text-foreground/80 line-clamp-3 mb-4\">\n              {item.description.split(\"\\n\\n\")[0]}\n            </p>\n            \n            <div className={`transition-all duration-500 ${isHovered ? 'opacity-100' : 'opacity-70'}`}>\n              <span className=\"inline-flex items-center text-accent\">\n                Meer informatie\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className={`h-5 w-5 ml-2 transition-transform duration-300 ${isHovered ? 'translate-x-1' : ''}`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n                </svg>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nconst PortfolioDetailModal = ({ \n  item, \n  isOpen, \n  onClose \n}: { \n  item: PortfolioItem | null, \n  isOpen: boolean, \n  onClose: () => void \n}) => {\n  const [animationComplete, setAnimationComplete] = useState(false);\n  const [websiteScreenshot, setWebsiteScreenshot] = useState<string | null>(null);\n  const [isScreenshotLoading, setIsScreenshotLoading] = useState(false);\n  \n  // Functie om website screenshot op te halen\n  const fetchWebsiteScreenshot = async () => {\n    if (!item) return;\n    \n    try {\n      setIsScreenshotLoading(true);\n      // Direct de websiteScreenshot uit het portfolio item gebruiken met fallback\n      setWebsiteScreenshot(item.websiteScreenshot || '/images/portfolio/fasttaxi.png');\n    } catch (error) {\n      console.error('Error setting website screenshot for modal:', error);\n      setWebsiteScreenshot('/images/portfolio/fasttaxi.png');\n    } finally {\n      setIsScreenshotLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    if (isOpen && item) {\n      // Reset screenshot status when modal opens\n      setWebsiteScreenshot(null);\n      \n      // Fetch screenshot for this website\n      fetchWebsiteScreenshot();\n      \n      // Play sound effect when opening modal\n      const audio = new Audio('/sounds/woosh.mp3');\n      audio.volume = 0.3;\n      audio.play().catch(e => console.log('Audio play failed: ', e));\n      \n      // Set animation complete after a delay\n      const timer = setTimeout(() => {\n        setAnimationComplete(true);\n      }, 1500);\n      \n      return () => clearTimeout(timer);\n    } else {\n      setAnimationComplete(false);\n    }\n  }, [isOpen, item]);\n  \n  if (!item) return null;\n  \n  const handleVisitWebsite = () => {\n    // Play click sound\n    const audio = new Audio('/sounds/click.mp3');\n    audio.volume = 0.3;\n    audio.play().catch(e => console.log('Audio play failed: ', e));\n    \n    // Open website after short delay\n    setTimeout(() => {\n      window.open(item.websiteUrl, '_blank');\n      onClose();\n    }, 300);\n  };\n  \n  return (\n    <div\n      className={`fixed inset-0 z-50 flex items-center justify-center p-4 ${isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'} transition-opacity duration-300`}\n    >\n      <div className=\"absolute inset-0 bg-black/70 backdrop-blur-sm\" onClick={onClose}></div>\n      \n      <motion.div\n        className=\"bg-secondary rounded-xl overflow-hidden max-w-5xl w-full max-h-[85vh] relative z-10\"\n        initial={{ scale: 0.9, opacity: 0 }}\n        animate={{ scale: isOpen ? 1 : 0.9, opacity: isOpen ? 1 : 0 }}\n        transition={{ type: 'spring', damping: 25, stiffness: 300 }}\n      >\n        <div className=\"absolute top-4 right-4 z-20\">\n          <button \n            className=\"w-8 h-8 rounded-full bg-primary/30 flex items-center justify-center backdrop-blur-sm hover:bg-primary/50 transition-colors\"\n            onClick={onClose}\n          >\n            ✕\n          </button>\n        </div>\n        \n        {/* Dynamic 3D-like header */}\n        <div className=\"h-52 relative overflow-hidden\">\n          <div \n            className={`absolute inset-0 bg-gradient-to-br from-primary to-accent opacity-70 transform-gpu transition-transform duration-1000 ${animationComplete ? 'scale-110' : 'scale-100'}`} \n          />\n          \n          {/* Animated elements */}\n          <div className=\"absolute inset-0 overflow-hidden\">\n            {[...Array(20)].map((_, i) => (\n              <motion.div\n                key={i}\n                className=\"absolute w-12 h-12 rounded-full bg-white opacity-20\"\n                initial={{ \n                  x: Math.random() * window.innerWidth, \n                  y: Math.random() * 200,\n                  scale: 0.1 + Math.random() * 0.5\n                }}\n                animate={{ \n                  x: Math.random() * window.innerWidth, \n                  y: Math.random() * 200,\n                  scale: 0.3 + Math.random() * 0.7\n                }}\n                transition={{ \n                  duration: 5 + Math.random() * 10, \n                  repeat: Infinity, \n                  repeatType: 'reverse',\n                  delay: Math.random() * 5\n                }}\n              />\n            ))}\n          </div>\n          \n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <motion.h2 \n              className=\"text-4xl font-header font-bold text-white text-center px-6 z-10\"\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.2, duration: 0.5 }}\n            >\n              {item.title}\n            </motion.h2>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 p-6 overflow-y-auto max-h-[calc(85vh-13rem)]\">\n          {/* Left column - text content */}\n          <div>\n            {item.description.split(\"\\n\\n\").map((paragraph, index) => (\n              <motion.p \n                key={index}\n                className=\"mb-4 text-foreground/90\"\n                initial={{ y: 20, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 0.3 + index * 0.1, duration: 0.5 }}\n              >\n                {paragraph}\n              </motion.p>\n            ))}\n            \n            <motion.div\n              className=\"mt-8\"\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.6, duration: 0.5 }}\n            >\n              <div className=\"flex flex-wrap gap-3\">\n                <button\n                  className=\"px-6 py-3 bg-accent text-primary font-medium rounded-lg hover:bg-accent/90 transition inline-flex items-center\"\n                  onClick={handleVisitWebsite}\n                >\n                  Website bezoeken\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                  </svg>\n                </button>\n                \n                <a\n                  href={`/case-studies/${item.id === 'limonade-webshop' ? 'limonade-productwebshop' : item.id === 'houtbewerking-concept' ? 'houtbewerking-concept-website' : item.id === 'fast-taxi-rotterdam' ? 'fast-taxi-automation' : item.id}`}\n                  className=\"px-6 py-3 bg-secondary text-foreground font-medium rounded-lg hover:bg-secondary/80 transition inline-flex items-center\"\n                  onClick={() => {\n                    const audio = new Audio('/sounds/click.mp3');\n                    audio.volume = 0.3;\n                    audio.play().catch(e => console.log('Audio play failed: ', e));\n                  }}\n                >\n                  Case Study bekijken\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </a>\n              </div>\n            </motion.div>\n          </div>\n          \n          {/* Right column - website screenshot in device frame */}\n          <motion.div\n            className=\"bg-black/10 p-4 rounded-xl flex items-center justify-center overflow-hidden relative\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.4, duration: 0.5 }}\n          >\n            <div className=\"w-full mx-auto\">\n              {/* Browser-style frame zonder monitor */}\n              <div className=\"w-full rounded-xl overflow-hidden shadow-xl\">\n                {/* Browser top bar with controls */}\n                <div className=\"bg-gray-900 rounded-t-xl p-2 flex items-center\">\n                  <div className=\"flex space-x-1.5\">\n                    <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\n                    <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n                    <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n                  </div>\n                  <div className=\"mx-auto text-center text-xs text-gray-400 font-mono overflow-hidden text-ellipsis whitespace-nowrap max-w-[180px] md:max-w-full\">\n                    {item.websiteUrl}\n                  </div>\n                </div>\n                \n                {/* Browser content - full image without padding */}\n                <div className=\"aspect-[16/10] flex items-center justify-center overflow-hidden\">\n                  {isScreenshotLoading ? (\n                    <div className=\"animate-spin w-8 h-8 border-4 border-accent border-t-transparent rounded-full\"></div>\n                  ) : (\n                    <img \n                      src={websiteScreenshot || item.websiteScreenshot || '/images/portfolio/fasttaxi.png'} \n                      alt={`${item.title} website screenshot`}\n                      className=\"w-full h-full object-cover object-center\"\n                      onError={(e) => {\n                        console.error('Afbeelding kon niet worden geladen in detail view, fallback naar fasttaxi.png');\n                        e.currentTarget.src = '/images/portfolio/fasttaxi.png';\n                      }}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nconst Portfolio = () => {\n  const { language } = useLanguage();\n  const [loading, setLoading] = useState(true);\n  const [portfolioData, setPortfolioData] = useState<PortfolioItem[]>([]);\n  const [selectedItem, setSelectedItem] = useState<PortfolioItem | null>(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [websiteScreenshots, setWebsiteScreenshots] = useState<Record<string, string>>({});\n  const [screenshotLoading, setScreenshotLoading] = useState<Record<string, boolean>>({});\n  \n  // Functie om website screenshot op te halen\n  const fetchWebsiteScreenshot = async (item: PortfolioItem) => {\n    if (websiteScreenshots[item.id]) return; // Skip if already fetched\n    \n    try {\n      setScreenshotLoading({...screenshotLoading, [item.id]: true});\n      \n      // Direct de websiteScreenshot uit portfolioData gebruiken\n      setWebsiteScreenshots((prev: Record<string, string>) => ({\n        ...prev,\n        [item.id]: item.websiteScreenshot || '/images/portfolio/fasttaxi.png'\n      }));\n    } catch (error) {\n      console.error('Error setting website screenshot:', error);\n    } finally {\n      setScreenshotLoading({...screenshotLoading, [item.id]: false});\n    }\n  };\n  \n  useEffect(() => {\n    // Data inladen via API\n    const fetchPortfolioData = async () => {\n      try {\n        setLoading(true);\n        const response = await apiRequest('GET', `/api/portfolio?lang=${language}`);\n        const data = await response.json();\n        \n        if (data.success && Array.isArray(data.data)) {\n          setPortfolioData(data.data);\n          \n          // Voor elk portfolio item een screenshot ophalen\n          data.data.forEach((item: PortfolioItem) => {\n            fetchWebsiteScreenshot(item);\n          });\n        } else {\n          console.error('Fout bij ophalen portfolio data:', data);\n          // Fallback naar lege array\n          setPortfolioData([]);\n        }\n      } catch (error) {\n        console.error('API error bij ophalen portfolio data:', error);\n        // Fallback naar lege array\n        setPortfolioData([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchPortfolioData();\n  }, [language]);\n  \n  const handlePortfolioItemClick = (item: PortfolioItem) => {\n    setSelectedItem(item);\n    setModalOpen(true);\n    \n    // Zorg ervoor dat de screenshot is opgehaald\n    if (!websiteScreenshots[item.id]) {\n      fetchWebsiteScreenshot(item);\n    }\n    \n    // Play sound effect\n    const audio = new Audio('/sounds/select.mp3');\n    audio.volume = 0.2;\n    audio.play().catch(e => console.log('Audio play failed: ', e));\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"h-screen flex items-center justify-center bg-gradient-to-b from-primary to-secondary\">\n        <Loader2 className=\"h-10 w-10 animate-spin text-accent\" />\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-primary to-secondary pt-24 pb-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <h1 className=\"text-4xl md:text-5xl font-header font-bold mb-4\">\n            Portfolio\n          </h1>\n          <p className=\"text-xl text-foreground/70 max-w-2xl mx-auto\">\n            {language === 'nl' \n              ? 'Ontdek onze recente projecten en zie hoe we bedrijven helpen groeien met digitale oplossingen.'\n              : 'Discover our recent projects and see how we help businesses grow with digital solutions.'}\n          </p>\n        </motion.div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {portfolioData.map((item) => {\n            // Bepaal welk type weergave we moeten gebruiken\n            if (item.displayType === 'bubble') {\n              return (\n                <div key={item.id} className=\"rounded-xl overflow-hidden shadow-lg\">\n                  <BubblePortfolioAnimation \n                    category={item.category}\n                    className=\"h-48 w-full\"\n                    onClick={() => handlePortfolioItemClick(item)}\n                  />\n                  <div className=\"p-4 bg-secondary\">\n                    <h3 className=\"text-xl font-header font-bold mb-2\">{item.title}</h3>\n                    <p className=\"text-foreground/80 line-clamp-2 mb-3\">\n                      {item.description.split(\"\\n\\n\")[0]}\n                    </p>\n                    <button \n                      className=\"text-accent inline-flex items-center\"\n                      onClick={() => handlePortfolioItemClick(item)}\n                    >\n                      Meer informatie\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              );\n            } else if (item.displayType === 'minimal') {\n              return (\n                <motion.div\n                  key={item.id}\n                  className=\"rounded-xl overflow-hidden bg-secondary/80 backdrop-blur-sm shadow-lg\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.5 }}\n                  whileHover={{ scale: 1.03 }}\n                  onClick={() => handlePortfolioItemClick(item)}\n                >\n                  <div className=\"p-6\">\n                    <div className=\"flex items-center mb-4\">\n                      <div className={`w-12 h-12 rounded-full flex items-center justify-center mr-4 ${\n                        item.category === 'web' ? 'bg-blue-500/20' :\n                        item.category === 'automation' ? 'bg-amber-500/20' : 'bg-green-500/20'\n                      }`}>\n                        <span className=\"text-xl\">\n                          {item.category === 'web' ? '🌐' : \n                          item.category === 'automation' ? '⚙️' : '🤖'}\n                        </span>\n                      </div>\n                      <h3 className=\"text-xl font-header font-bold\">{item.title}</h3>\n                    </div>\n                    <p className=\"text-foreground/80 line-clamp-4 mb-4\">\n                      {item.description.split(\"\\n\\n\")[0]}\n                    </p>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs px-2 py-1 rounded bg-primary/20\">\n                        {item.category === 'web' ? 'Website' : \n                        item.category === 'automation' ? 'Automatisering' : 'Chatbot'}\n                      </span>\n                      <span className=\"text-accent inline-flex items-center text-sm\">\n                        Bekijken\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n                        </svg>\n                      </span>\n                    </div>\n                  </div>\n                </motion.div>\n              );\n            } else {\n              // Standaard weergave\n              return (\n                <PortfolioBlock \n                  key={item.id} \n                  item={item} \n                  onClick={() => handlePortfolioItemClick(item)} \n                  screenshotUrl={websiteScreenshots[item.id]}\n                  isLoading={screenshotLoading[item.id]}\n                />\n              );\n            }\n          })}\n        </div>\n        \n        <motion.div\n          className=\"text-center\"\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.5 }}\n        >\n          <h2 className=\"text-2xl font-header font-semibold mb-4\">\n            {language === 'nl' ? 'Klaar voor uw eigen succesverhaal?' : 'Ready for your own success story?'}\n          </h2>\n          <p className=\"text-foreground/70 mb-8 max-w-2xl mx-auto\">\n            {language === 'nl' \n              ? 'Neem contact met ons op voor een vrijblijvend gesprek over uw project. We denken graag met u mee!'\n              : 'Contact us for a no-obligation discussion about your project. We are happy to think along with you!'}\n          </p>\n          <a \n            href=\"/#contact\"\n            className=\"px-6 py-3 bg-accent text-primary font-medium rounded-lg hover:bg-accent/90 transition inline-flex items-center\"\n          >\n            {language === 'nl' ? 'Contact opnemen' : 'Contact us'}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n            </svg>\n          </a>\n        </motion.div>\n      </div>\n      \n      <PortfolioDetailModal\n        item={selectedItem}\n        isOpen={modalOpen}\n        onClose={() => setModalOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default Portfolio;","size_bytes":27152},"client/src/pages/ServiceCategory.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'wouter';\nimport { useLanguage } from '@/lib/languageContext';\nimport { motion } from 'framer-motion';\nimport { Loader2 } from 'lucide-react';\n\n// Main component for service category page\nconst ServiceCategory = () => {\n  const { category } = useParams();\n  const { t, language } = useLanguage();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate loading data\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 800);\n    \n    return () => clearTimeout(timer);\n  }, []);\n\n  // Map category to title and description\n  const getCategoryDetails = () => {\n    switch (category) {\n      case 'ai-chatbots':\n        return {\n          title: t('service.ai.title'),\n          subtitle: t('service.ai.subtitle'),\n          description: t('service.ai.description'),\n          features: [\n            t('service.ai.features.1'),\n            t('service.ai.features.2'),\n            t('service.ai.features.3'),\n            t('service.ai.features.4'),\n            t('service.ai.features.5')\n          ],\n          technicalDetails: t('service.ai.technical')\n        };\n      case 'workflow-automation':\n        return {\n          title: t('service.automation.title'),\n          subtitle: t('service.automation.subtitle'),\n          description: t('service.automation.description'),\n          features: [\n            t('service.automation.features.1'),\n            t('service.automation.features.2'),\n            t('service.automation.features.3'),\n            t('service.automation.features.4'),\n            t('service.automation.features.5')\n          ],\n          technicalDetails: t('service.automation.technical')\n        };\n      case 'web-development':\n        return {\n          title: t('service.web.title'),\n          subtitle: t('service.web.subtitle'),\n          description: t('service.web.description'),\n          features: [\n            t('service.web.features.1'),\n            t('service.web.features.2'),\n            t('service.web.features.3'),\n            t('service.web.features.4'),\n            t('service.web.features.5')\n          ],\n          technicalDetails: t('service.web.technical')\n        };\n      case 'microsoft-365':\n        return {\n          title: t('service.microsoft365.title'),\n          subtitle: t('service.microsoft365.subtitle'),\n          description: t('service.microsoft365.description'),\n          features: [\n            t('service.microsoft365.features.1'),\n            t('service.microsoft365.features.2'),\n            t('service.microsoft365.features.3'),\n            t('service.microsoft365.features.4'),\n            t('service.microsoft365.features.5'),\n            t('service.microsoft365.features.6'),\n            t('service.microsoft365.features.7'),\n            t('service.microsoft365.features.8')\n          ],\n          technicalDetails: t('service.microsoft365.technical')\n        };\n      default:\n        return {\n          title: 'Digitale diensten',\n          subtitle: 'Technologische oplossingen op maat',\n          description: 'We bieden diverse digitale diensten aan voor uw bedrijf.',\n          features: [],\n          technicalDetails: ''\n        };\n    }\n  };\n\n  // Get the right details based on the category\n  const details = getCategoryDetails();\n  \n  if (loading) {\n    return (\n      <div className=\"h-screen flex items-center justify-center bg-gradient-to-b from-primary to-secondary\">\n        <Loader2 className=\"h-10 w-10 animate-spin text-accent\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-primary to-secondary pt-24 pb-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Hero section with enhanced design */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-between gap-12 mb-20\">\n          <div className=\"w-full lg:w-1/2\">\n            {category === 'microsoft-365' && (\n              <motion.div\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.4 }}\n                className=\"inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-600/20 to-accent/20 rounded-full text-accent font-medium text-sm mb-6 border border-accent/30\"\n              >\n                <svg className=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                </svg>\n                Microsoft Opgeleid\n              </motion.div>\n            )}\n            \n            <motion.h1 \n              className=\"text-4xl md:text-6xl font-header font-bold mb-6 bg-gradient-to-r from-accent via-blue-500 to-accent bg-clip-text text-transparent\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              {details.title}\n            </motion.h1>\n            \n            <motion.p \n              className=\"text-xl md:text-2xl text-foreground/80 mb-6 font-medium\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.1 }}\n            >\n              {details.subtitle}\n            </motion.p>\n            \n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <p className=\"text-lg text-foreground/70 mb-10 leading-relaxed max-w-2xl\">\n                {details.description}\n              </p>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Link href=\"/#contact\">\n                  <motion.button \n                    className=\"px-8 py-4 bg-gradient-to-r from-accent to-blue-500 text-white font-header font-semibold rounded-lg shadow-lg hover:shadow-xl hover:shadow-accent/30 transition-all duration-300\"\n                    whileHover={{ scale: 1.05, y: -2 }}\n                    whileTap={{ scale: 0.98 }}\n                  >\n                    Start uw transformatie\n                  </motion.button>\n                </Link>\n                \n                <motion.button \n                  className=\"px-8 py-4 bg-transparent border-2 border-accent text-accent font-header font-semibold rounded-lg transition-all duration-300 hover:bg-accent hover:text-primary hover:shadow-lg\"\n                  whileHover={{ scale: 1.05, y: -2 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => {\n                    const featuresSection = document.querySelector('[data-section=\"features\"]');\n                    featuresSection?.scrollIntoView({ behavior: 'smooth' });\n                  }}\n                >\n                  Ontdek onze diensten\n                </motion.button>\n              </div>\n            </motion.div>\n          </div>\n          \n          <motion.div \n            className=\"w-full lg:w-1/2 h-[400px] rounded-xl overflow-hidden bg-secondary/20 backdrop-blur-sm\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.7 }}\n          >\n            <div className=\"w-full h-full flex items-center justify-center\">\n              <div className=\"relative\">\n                {category === 'ai-chatbots' && (\n                  <div className=\"flex items-center gap-8 animate-float\">\n                    <div className=\"w-32 h-32 rounded-full bg-gradient-to-br from-green-400 to-blue-500 animate-pulse-slow\" />\n                    <div className=\"w-16 h-16 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 animate-pulse-slow\" style={{ animationDelay: '0.5s' }} />\n                    <div className=\"w-24 h-24 rounded-full bg-gradient-to-br from-purple-400 to-pink-500 animate-pulse-slow\" style={{ animationDelay: '1s' }} />\n                  </div>\n                )}\n                \n                {category === 'workflow-automation' && (\n                  <div className=\"flex items-center gap-6 animate-float\">\n                    <div className=\"rotate-animation w-28 h-28 border-4 border-amber-400 rounded-full flex items-center justify-center\">\n                      <div className=\"w-16 h-16 border-4 border-amber-500 rounded-full flex items-center justify-center\">\n                        <div className=\"w-8 h-8 bg-amber-600 rounded-full\"></div>\n                      </div>\n                    </div>\n                    <div className=\"counter-rotate-animation w-20 h-20 border-4 border-amber-500 rounded-full\"></div>\n                  </div>\n                )}\n                \n                {category === 'web-development' && (\n                  <div className=\"grid grid-cols-3 gap-4 animate-float\">\n                    {[...Array(9)].map((_, i) => (\n                      <div \n                        key={i} \n                        className=\"w-14 h-14 bg-gradient-to-br from-blue-400 to-blue-700 rounded-md transform hover:rotate-45 transition-transform\"\n                        style={{ \n                          animation: 'bounce 3s infinite alternate',\n                          animationDelay: `${i * 0.2}s`\n                        }}\n                      />\n                    ))}\n                  </div>\n                )}\n                \n                {category === 'microsoft-365' && (\n                  <div className=\"relative animate-float\">\n                    {/* Central cloud hub */}\n                    <div className=\"relative w-40 h-40 bg-gradient-to-br from-blue-500 to-blue-700 rounded-full flex items-center justify-center animate-pulse-slow\">\n                      <svg className=\"w-16 h-16 text-white\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M6.5 4C4.567 4 3 5.567 3 7.5c0 .695.203 1.342.553 1.887C2.633 10.16 2 11.26 2 12.5A3.5 3.5 0 0 0 5.5 16h13a3.5 3.5 0 0 0 3.5-3.5c0-1.24-.633-2.34-1.553-3.113C20.797 8.842 21 8.195 21 7.5 21 5.567 19.433 4 17.5 4c-.695 0-1.342.203-1.887.553C14.84 3.633 13.74 3 12.5 3S10.16 3.633 9.387 4.553C8.842 4.203 8.195 4 7.5 4H6.5Z\"/>\n                      </svg>\n                    </div>\n                    \n                    {/* Surrounding service nodes */}\n                    <div className=\"absolute -top-8 -left-8 w-16 h-16 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center animate-pulse-slow\" style={{ animationDelay: '0.5s' }}>\n                      <span className=\"text-white text-xs font-bold\">Teams</span>\n                    </div>\n                    <div className=\"absolute -top-8 -right-8 w-16 h-16 bg-gradient-to-br from-orange-400 to-orange-600 rounded-full flex items-center justify-center animate-pulse-slow\" style={{ animationDelay: '1s' }}>\n                      <span className=\"text-white text-xs font-bold\">Office</span>\n                    </div>\n                    <div className=\"absolute -bottom-8 -left-8 w-16 h-16 bg-gradient-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center animate-pulse-slow\" style={{ animationDelay: '1.5s' }}>\n                      <span className=\"text-white text-xs font-bold\">Power</span>\n                    </div>\n                    <div className=\"absolute -bottom-8 -right-8 w-16 h-16 bg-gradient-to-br from-red-400 to-red-600 rounded-full flex items-center justify-center animate-pulse-slow\" style={{ animationDelay: '2s' }}>\n                      <span className=\"text-white text-xs font-bold\">Azure</span>\n                    </div>\n                  </div>\n                )}\n                \n                {!['ai-chatbots', 'workflow-automation', 'web-development', 'microsoft-365'].includes(category || '') && (\n                  <div className=\"flex items-center gap-8 animate-float\">\n                    <div className=\"w-32 h-32 rounded-full bg-gradient-to-br from-green-400 to-blue-500 animate-pulse-slow\" />\n                    <div className=\"w-16 h-16 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 animate-pulse-slow\" style={{ animationDelay: '0.5s' }} />\n                    <div className=\"w-24 h-24 rounded-full bg-gradient-to-br from-purple-400 to-pink-500 animate-pulse-slow\" style={{ animationDelay: '1s' }} />\n                  </div>\n                )}\n              </div>\n            </div>\n          </motion.div>\n        </div>\n        \n        {/* Features section */}\n        <div className=\"mb-16\" data-section=\"features\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-12\"\n          >\n            <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4 bg-gradient-to-r from-accent to-blue-500 bg-clip-text text-transparent\">\n              Wat we bieden\n            </h2>\n            <p className=\"text-lg text-foreground/70 max-w-2xl mx-auto\">\n              {category === 'microsoft-365' \n                ? 'Ontdek onze Microsoft 365 diensten die uw organisatie naar de volgende stap brengen'\n                : 'Ontdek onze uitgebreide diensten en oplossingen'}\n            </p>\n          </motion.div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {details.features.map((feature, index) => {\n              // Get appropriate icon for all service categories\n              const getFeatureIcon = (feature: string, index: number) => {\n                if (category === 'microsoft-365') {\n                  if (feature.includes('Copilot')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Teams')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M15 2a6 6 0 0 1 6 6v8a6 6 0 0 1-6 6H9a6 6 0 0 1-6-6V8a6 6 0 0 1 6-6h6zm-1 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1h-2zm-6 2a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1H8z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Power Platform') || feature.includes('Power Apps')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M13 10V3L4 14h7v7l9-11h-7z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('SharePoint') || feature.includes('OneDrive')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M6 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6H6z\"/>\n                        <path d=\"M14 2v6h6\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Security') || feature.includes('Compliance')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Intune') || feature.includes('Device')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M17 2H7a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zm-5 20c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Exchange') || feature.includes('migratie')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M20 4H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 4.7l-8 5.334L4 8.7V6.297l8 5.333 8-5.333V8.7z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Azure') || feature.includes('SSO')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n                      </svg>\n                    );\n                  }\n                } else if (category === 'ai-chatbots') {\n                  if (feature.includes('Integratie') || feature.includes('systemen')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Meertalige') || feature.includes('ondersteuning')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('persoonlijkheid') || feature.includes('huisstijl')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('rapportages') || feature.includes('inzichten')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('overdracht') || feature.includes('medewerkers')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M16 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zm4 18v-6h2.5l-2.54-7.63A1.5 1.5 0 0 0 18.54 8H16c-.85 0-1.54.68-1.54 1.53v1.47H14V8c0-.55.45-1 1-1h2.54c1.41 0 2.67.83 3.22 2.1L22 14v8h-2z\"/>\n                      </svg>\n                    );\n                  }\n                } else if (category === 'workflow-automation') {\n                  if (feature.includes('Visuele') || feature.includes('workflow')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M9 5v4h2V7h2a2 2 0 0 1 2 2v2h2V9a4 4 0 0 0-4-4H9zM9 15v4h4a4 4 0 0 0 4-4v-2h-2v2a2 2 0 0 1-2 2h-2v-2H9z\"/>\n                        <circle cx=\"6\" cy=\"6\" r=\"2\"/>\n                        <circle cx=\"6\" cy=\"18\" r=\"2\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Koppeling') || feature.includes('externe')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('24/7') || feature.includes('monitoring')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Schaalbare') || feature.includes('groei')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('Compliance') || feature.includes('logging')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"/>\n                      </svg>\n                    );\n                  }\n                } else if (category === 'web-development') {\n                  if (feature.includes('Mobiel') || feature.includes('responsive')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M17 2H7a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zm-5 20c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('SEO') || feature.includes('zoekmachinevriendelijke')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('performance') || feature.includes('snelle')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M13 10V3L4 14h7v7l9-11h-7z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('content management') || feature.includes('CMS')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zm4 18H6V4h7v5h5v11z\"/>\n                      </svg>\n                    );\n                  } else if (feature.includes('betalingsintegraties') || feature.includes('veilige')) {\n                    return (\n                      <svg className=\"w-6 h-6 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z\"/>\n                      </svg>\n                    );\n                  }\n                }\n                \n                // Default checkmark for unmatched features\n                return <span className=\"text-accent text-xl\">✓</span>;\n              };\n\n              return (\n                <motion.div \n                  key={index}\n                  className=\"bg-gradient-to-br from-secondary/40 to-secondary/20 backdrop-blur-sm p-6 rounded-xl border border-accent/10 hover:border-accent/30 transition-all duration-300 hover:shadow-lg hover:shadow-accent/20 group\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                >\n                  <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-accent/20 to-accent/10 flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300\">\n                    {getFeatureIcon(feature, index)}\n                  </div>\n                  <p className=\"text-foreground/90 font-medium leading-relaxed\">{feature}</p>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n        \n        {/* Technical details and process section */}\n        <div className=\"mb-16 bg-gradient-to-br from-secondary/30 to-secondary/10 backdrop-blur-sm p-8 md:p-12 rounded-2xl border border-accent/20 shadow-xl\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-8\"\n          >\n            <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-4 bg-gradient-to-r from-accent to-blue-500 bg-clip-text text-transparent\">\n              Technische Expertise\n            </h2>\n            <div className=\"w-24 h-1 bg-gradient-to-r from-accent to-blue-500 rounded-full mx-auto\"></div>\n          </motion.div>\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 gap-8 items-center\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <div>\n              <p className=\"text-lg text-foreground/80 mb-6 leading-relaxed\">\n                {details.technicalDetails}\n              </p>\n              \n              {category === 'microsoft-365' && (\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"bg-accent/10 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-accent mb-1\">5+</div>\n                    <div className=\"text-sm text-foreground/70\">Jaar ervaring</div>\n                  </div>\n                  <div className=\"bg-accent/10 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-accent mb-1\">24/7</div>\n                    <div className=\"text-sm text-foreground/70\">Ondersteuning</div>\n                  </div>\n                  <div className=\"bg-accent/10 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-accent mb-1\">99%</div>\n                    <div className=\"text-sm text-foreground/70\">Uptime</div>\n                  </div>\n                  <div className=\"bg-accent/10 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-accent mb-1\">Expert</div>\n                    <div className=\"text-sm text-foreground/70\">Support</div>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex justify-center\">\n              <div className=\"relative\">\n                {category === 'microsoft-365' && (\n                  <div className=\"w-64 h-64 relative\">\n                    <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/20 to-accent/20 rounded-full animate-pulse-slow\"></div>\n                    <div className=\"absolute inset-4 bg-gradient-to-br from-accent/30 to-blue-500/30 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-24 h-24 text-accent\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M6.5 4C4.567 4 3 5.567 3 7.5c0 .695.203 1.342.553 1.887C2.633 10.16 2 11.26 2 12.5A3.5 3.5 0 0 0 5.5 16h13a3.5 3.5 0 0 0 3.5-3.5c0-1.24-.633-2.34-1.553-3.113C20.797 8.842 21 8.195 21 7.5 21 5.567 19.433 4 17.5 4c-.695 0-1.342.203-1.887.553C14.84 3.633 13.74 3 12.5 3S10.16 3.633 9.387 4.553C8.842 4.203 8.195 4 7.5 4H6.5Z\"/>\n                      </svg>\n                    </div>\n                    \n                    {/* Orbiting elements */}\n                    <div className=\"absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-2 w-12 h-12 bg-green-500 rounded-full flex items-center justify-center text-white text-xs font-bold animate-bounce\">\n                      M365\n                    </div>\n                    <div className=\"absolute bottom-0 right-0 w-10 h-10 bg-orange-500 rounded-full flex items-center justify-center text-white text-xs font-bold animate-pulse\">\n                      AI\n                    </div>\n                    <div className=\"absolute top-1/2 left-0 transform -translate-x-2 -translate-y-1/2 w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center text-white text-xs font-bold animate-ping\">\n                      ☁\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </motion.div>\n          \n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n            className=\"mt-12\"\n          >\n            <h3 className=\"text-2xl md:text-3xl font-header font-bold mb-8 text-center bg-gradient-to-r from-accent to-blue-500 bg-clip-text text-transparent\">\n              Ons implementatieproces\n            </h3>\n            \n            <div className=\"grid md:grid-cols-5 gap-4\">\n              {(category === 'microsoft-365' \n                ? ['Assessment', 'Planning', 'Migratie', 'Training', 'Optimalisatie']\n                : ['Analyse & Planning', 'Ontwikkeling', 'Testen', 'Implementatie', 'Ondersteuning']\n              ).map((step, index) => (\n                <motion.div \n                  key={index}\n                  className=\"relative\"\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.5, delay: 0.4 + index * 0.1 }}\n                >\n                  <div className=\"bg-gradient-to-br from-accent/20 to-blue-500/20 rounded-xl p-6 text-center hover:shadow-lg transition-all duration-300 group\">\n                    <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-accent to-blue-500 flex items-center justify-center text-white font-bold text-lg mx-auto mb-3 group-hover:scale-110 transition-transform duration-300\">\n                      {index + 1}\n                    </div>\n                    <h4 className=\"font-semibold text-foreground/90 mb-2\">{step}</h4>\n                    {category === 'microsoft-365' && (\n                      <p className=\"text-sm text-foreground/70\">\n                        {index === 0 && 'Huidige situatie in kaart'}\n                        {index === 1 && 'Roadmap en strategie'}\n                        {index === 2 && 'Veilige data-overgang'}\n                        {index === 3 && 'Gebruikerstraining'}\n                        {index === 4 && 'Continue verbetering'}\n                      </p>\n                    )}\n                  </div>\n                  \n                  {index < 4 && (\n                    <div className=\"hidden md:block absolute top-1/2 -right-2 w-4 h-0.5 bg-gradient-to-r from-accent to-blue-500 transform -translate-y-1/2\"></div>\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n        \n        {/* Microsoft 365 specific CTA section */}\n        {category === 'microsoft-365' && (\n          <div className=\"mb-16\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8 }}\n              className=\"bg-gradient-to-r from-accent/10 via-blue-500/10 to-accent/10 backdrop-blur-sm p-8 md:p-12 rounded-2xl border border-accent/20 text-center\"\n            >\n              <h2 className=\"text-3xl md:text-4xl font-header font-bold mb-6 bg-gradient-to-r from-accent to-blue-500 bg-clip-text text-transparent\">\n                Klaar voor uw Microsoft 365 transformatie?\n              </h2>\n              \n              <p className=\"text-lg text-foreground/80 mb-8 max-w-3xl mx-auto leading-relaxed\">\n                Laat ons uw organisatie helpen met een naadloze overgang naar Microsoft 365. \n                Van assessment tot implementatie en training - wij begeleiden elke stap van uw digitale transformatie.\n              </p>\n              \n              <div className=\"grid md:grid-cols-3 gap-6 mb-10\">\n                {[\n                  { icon: '📞', title: 'Gratis Consultatie', desc: 'Persoonlijk adviesgesprek over uw situatie' },\n                  { icon: '🔍', title: 'Gratis Assessment', desc: 'Analyse van uw huidige IT-infrastructuur' },\n                  { icon: '📋', title: 'Implementatieplan', desc: 'Stappenplan op maat voor uw organisatie' }\n                ].map((item, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    viewport={{ once: true }}\n                    transition={{ duration: 0.6, delay: index * 0.2 }}\n                    className=\"bg-secondary/20 p-6 rounded-xl border border-accent/10\"\n                  >\n                    <div className=\"text-3xl mb-3\">{item.icon}</div>\n                    <h3 className=\"font-semibold text-accent mb-2\">{item.title}</h3>\n                    <p className=\"text-sm text-foreground/70\">{item.desc}</p>\n                  </motion.div>\n                ))}\n              </div>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <motion.button \n                  className=\"px-10 py-4 bg-gradient-to-r from-accent to-blue-500 text-white font-header font-bold rounded-lg shadow-xl hover:shadow-2xl hover:shadow-accent/40 transition-all duration-300 text-lg\"\n                  whileHover={{ scale: 1.05, y: -3 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => {\n                    const contactSection = document.querySelector('#contact');\n                    if (contactSection) {\n                      contactSection.scrollIntoView({ behavior: 'smooth' });\n                    } else {\n                      window.location.href = '/#contact';\n                    }\n                  }}\n                >\n                  Plan uw gratis consultatie\n                </motion.button>\n                \n                <motion.button \n                  className=\"px-10 py-4 bg-transparent border-2 border-accent text-accent font-header font-bold rounded-lg transition-all duration-300 hover:bg-accent hover:text-white hover:shadow-lg text-lg\"\n                  whileHover={{ scale: 1.05, y: -3 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => window.open('tel:06-37353483', '_self')}\n                >\n                  Bel direct: 06-37353483\n                </motion.button>\n              </div>\n              \n              <p className=\"text-sm text-foreground/60 mt-6\">\n                ✓ Geen verplichtingen  ✓ Bewezen resultaten\n              </p>\n            </motion.div>\n          </div>\n        )}\n\n        {/* Examples and CTA section - only show for non-Microsoft 365 services */}\n        {category !== 'microsoft-365' && (\n          <div id=\"examples\" className=\"mb-16\">\n            <motion.h2 \n              className=\"text-3xl font-header font-bold mb-8 text-center\"\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5 }}\n            >\n              Voorbeelden & Integraties\n            </motion.h2>\n            \n            <div className=\"bg-primary/30 backdrop-blur-md p-8 rounded-xl mb-8\">\n              <h3 className=\"text-2xl font-header font-semibold mb-4\">Bekijk onze demo</h3>\n              <p className=\"mb-6\">Ontdek hoe onze {details.title} werken in de praktijk. Probeer onze interactieve demo!</p>\n              \n              {/* Example integration showcase based on category */}\n              {category === 'ai-chatbots' && (\n                <div className=\"border border-accent/20 rounded-xl p-4 bg-secondary/20\">\n                  <div className=\"flex items-center gap-3 mb-4\">\n                    <div className=\"w-8 h-8 rounded-full bg-accent/20 flex items-center justify-center\">\n                      <span className=\"text-accent\">🤖</span>\n                    </div>\n                    <h4 className=\"font-medium\">Chatbot Demo</h4>\n                  </div>\n                  <p className=\"text-sm text-foreground/70 mb-4\">\n                    Onze chatbot kan vragen beantwoorden over uw producten, openingstijden en meer. \n                    Probeer het met vragen als \"Wat zijn jullie diensten?\" of \"Kan ik een afspraak maken?\"\n                  </p>\n                  <Link href=\"/#contact\" className=\"text-accent hover:underline\">\n                    Probeer onze volledige chatbot demo →\n                  </Link>\n                </div>\n              )}\n              \n              {category === 'workflow-automation' && (\n                <div className=\"border border-accent/20 rounded-xl p-4 bg-secondary/20\">\n                  <div className=\"flex items-center gap-3 mb-4\">\n                    <div className=\"w-8 h-8 rounded-full bg-accent/20 flex items-center justify-center\">\n                      <span className=\"text-accent\">⚙️</span>\n                    </div>\n                    <h4 className=\"font-medium\">Automatisering Demo</h4>\n                  </div>\n                  <p className=\"text-sm text-foreground/70 mb-4\">\n                    Ontdek hoe automatisering uw contactformulier kan verbinden met uw CRM, e-mailmarketing en meer.\n                    Vul ons contactformulier in om de automatisering in actie te zien.\n                  </p>\n                  <Link href=\"/#contact\" className=\"text-accent hover:underline\">\n                    Bekijk de workflow demo →\n                  </Link>\n                </div>\n              )}\n              \n              {category === 'web-development' && (\n                <div className=\"border border-accent/20 rounded-xl p-4 bg-secondary/20\">\n                  <div className=\"flex items-center gap-3 mb-4\">\n                    <div className=\"w-8 h-8 rounded-full bg-accent/20 flex items-center justify-center\">\n                      <span className=\"text-accent\">🌐</span>\n                    </div>\n                    <h4 className=\"font-medium\">Website Demonstratie</h4>\n                  </div>\n                  <p className=\"text-sm text-foreground/70 mb-4\">\n                    Bekijk onze portfolio van websites en webapplicaties. \n                    Zie hoe we responsieve ontwerpen maken die er geweldig uitzien op elk apparaat.\n                  </p>\n                  <Link href=\"/portfolio\" className=\"text-accent hover:underline\">\n                    Bekijk ons portfolio →\n                  </Link>\n                </div>\n              )}\n            </div>\n            \n            {/* Integration examples - exclude CRM/E-commerce for Microsoft 365 */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n              <motion.div \n                className=\"bg-secondary/20 backdrop-blur-sm p-6 rounded-xl\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.5 }}\n              >\n                <h3 className=\"font-semibold mb-2\">CRM Integratie</h3>\n                <p className=\"text-sm text-foreground/70\">\n                  Naadloze verbinding met populaire CRM's zoals Salesforce, HubSpot en Microsoft Dynamics.\n                </p>\n              </motion.div>\n              \n              <motion.div \n                className=\"bg-secondary/20 backdrop-blur-sm p-6 rounded-xl\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.5, delay: 0.1 }}\n              >\n                <h3 className=\"font-semibold mb-2\">E-commerce</h3>\n                <p className=\"text-sm text-foreground/70\">\n                  Integreer met Shopify, WooCommerce, en andere e-commerce platforms.\n                </p>\n              </motion.div>\n              \n              <motion.div \n                className=\"bg-secondary/20 backdrop-blur-sm p-6 rounded-xl\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.5, delay: 0.2 }}\n              >\n                <h3 className=\"font-semibold mb-2\">API Koppelingen</h3>\n                <p className=\"text-sm text-foreground/70\">\n                  Aangepaste API-integraties voor specifieke systemen en applicaties.\n                </p>\n              </motion.div>\n            </div>\n            \n\n          </div>\n        )}\n        \n        {/* Contact CTA for non-Microsoft 365 services */}\n        {category !== 'microsoft-365' && (\n          <motion.div \n            className=\"bg-accent/10 rounded-xl p-8 text-center\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.5 }}\n          >\n            <h2 className=\"text-2xl md:text-3xl font-header font-bold mb-4\">\n              Klaar om te beginnen met {details.title}?\n            </h2>\n            <p className=\"max-w-2xl mx-auto mb-6\">\n              Neem contact met ons op voor een vrijblijvend gesprek over uw project.\n              We denken graag met u mee over de mogelijkheden!\n            </p>\n            <Link href=\"/#contact\" className=\"inline-block px-8 py-3 bg-accent text-primary font-medium rounded-lg hover:bg-accent/90 transition\">\n              Neem contact op\n            </Link>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceCategory;","size_bytes":43362},"client/src/pages/Services.tsx":{"content":"import { useLanguage } from '@/lib/languageContext';\nimport { CMSServicesSection } from '@/components/CMSServicesSection';\nimport { motion } from 'framer-motion';\n\nexport default function Services() {\n  const { language } = useLanguage();\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"w-full py-20 md:py-32 bg-gradient-to-b from-slate-900 to-slate-800 text-white\">\n        <div className=\"container px-4 md:px-6\">\n          <div className=\"flex flex-col items-center text-center\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold tracking-tighter mb-6\">\n                {language === 'nl' ? 'Onze Diensten' : 'Our Services'}\n              </h1>\n              <p className=\"text-lg md:text-xl text-slate-300 mb-8 max-w-2xl mx-auto\">\n                {language === 'nl'\n                  ? 'Ontdek hoe onze expertise uw digitale transformatie kan versnellen en resultaten kan opleveren.'\n                  : 'Discover how our expertise can accelerate your digital transformation and deliver results.'}\n              </p>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services from CMS */}\n      <CMSServicesSection />\n\n      {/* Why Choose Us */}\n      <section className=\"w-full py-20 bg-white dark:bg-slate-950\">\n        <div className=\"container px-4 md:px-6\">\n          <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-3xl font-bold mb-6\">\n                {language === 'nl' ? 'Waarom Digimaatwerk kiezen?' : 'Why Choose Digimaatwerk?'}\n              </h2>\n              <div className=\"space-y-6\">\n                <div className=\"flex items-start\">\n                  <div className=\"mr-4 rounded-full bg-primary/10 p-3\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"text-primary h-6 w-6\"\n                    >\n                      <path d=\"M14 9a2 2 0 0 1-2 2H6l-4 4V4c0-1.1.9-2 2-2h8a2 2 0 0 1 2 2v5Z\" />\n                      <path d=\"M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-medium mb-2\">\n                      {language === 'nl' ? 'Persoonlijke Aanpak' : 'Personal Approach'}\n                    </h3>\n                    <p className=\"text-muted-foreground\">\n                      {language === 'nl'\n                        ? 'Wij luisteren naar uw specifieke behoeften en creëren oplossingen die perfect bij uw bedrijf passen.'\n                        : 'We listen to your specific needs and create solutions that perfectly match your business.'}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"flex items-start\">\n                  <div className=\"mr-4 rounded-full bg-primary/10 p-3\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"text-primary h-6 w-6\"\n                    >\n                      <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                      <path d=\"m8 12 3 3 5-5\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-medium mb-2\">\n                      {language === 'nl' ? 'Bewezen Resultaten' : 'Proven Results'}\n                    </h3>\n                    <p className=\"text-muted-foreground\">\n                      {language === 'nl'\n                        ? 'Onze projecten leveren meetbare bedrijfsresultaten op, ondersteund door data en klanttestimonials.'\n                        : 'Our projects deliver measurable business results, backed by data and client testimonials.'}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"flex items-start\">\n                  <div className=\"mr-4 rounded-full bg-primary/10 p-3\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"text-primary h-6 w-6\"\n                    >\n                      <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-medium mb-2\">\n                      {language === 'nl' ? 'Geavanceerde Technologie' : 'Advanced Technology'}\n                    </h3>\n                    <p className=\"text-muted-foreground\">\n                      {language === 'nl'\n                        ? 'We blijven voorop lopen met de nieuwste technologieën en best practices in de industrie.'\n                        : 'We stay ahead with the latest technologies and industry best practices.'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5, delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"rounded-xl overflow-hidden bg-slate-100 dark:bg-slate-800 p-8\"\n            >\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-2xl font-bold mb-4\">\n                    {language === 'nl' ? 'Onze Werkwijze' : 'Our Methodology'}\n                  </h3>\n                  <ol className=\"space-y-4\">\n                    <li className=\"flex items-center\">\n                      <span className=\"flex items-center justify-center rounded-full bg-primary text-white mr-4 h-8 w-8 shrink-0\">1</span>\n                      <span className=\"font-medium\">\n                        {language === 'nl' ? 'Ontdekking & Analyse' : 'Discovery & Analysis'}\n                      </span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"flex items-center justify-center rounded-full bg-primary text-white mr-4 h-8 w-8 shrink-0\">2</span>\n                      <span className=\"font-medium\">\n                        {language === 'nl' ? 'Strategisch Plan' : 'Strategic Planning'}\n                      </span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"flex items-center justify-center rounded-full bg-primary text-white mr-4 h-8 w-8 shrink-0\">3</span>\n                      <span className=\"font-medium\">\n                        {language === 'nl' ? 'Agile Ontwikkeling' : 'Agile Development'}\n                      </span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"flex items-center justify-center rounded-full bg-primary text-white mr-4 h-8 w-8 shrink-0\">4</span>\n                      <span className=\"font-medium\">\n                        {language === 'nl' ? 'Testing & QA' : 'Testing & QA'}\n                      </span>\n                    </li>\n                    <li className=\"flex items-center\">\n                      <span className=\"flex items-center justify-center rounded-full bg-primary text-white mr-4 h-8 w-8 shrink-0\">5</span>\n                      <span className=\"font-medium\">\n                        {language === 'nl' ? 'Implementatie & Ondersteuning' : 'Implementation & Support'}\n                      </span>\n                    </li>\n                  </ol>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"w-full py-20 bg-slate-50 dark:bg-slate-900\">\n        <div className=\"container px-4 md:px-6\">\n          <div className=\"flex flex-col items-center text-center\">\n            <motion.div\n              initial={{ opacity: 0, scale: 0.95 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.5 }}\n              viewport={{ once: true }}\n              className=\"max-w-2xl mx-auto\"\n            >\n              <h2 className=\"text-3xl font-bold mb-4\">\n                {language === 'nl' ? 'Klaar om te beginnen?' : 'Ready to get started?'}\n              </h2>\n              <p className=\"text-muted-foreground mb-8\">\n                {language === 'nl'\n                  ? 'Neem vandaag nog contact met ons op voor een vrijblijvend gesprek over uw project.'\n                  : 'Contact us today for a no-obligation conversation about your project.'}\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <a\n                  href=\"#contact\"\n                  className=\"inline-flex items-center justify-center rounded-md bg-primary px-6 py-3 text-white font-medium shadow transition-colors hover:bg-primary/90\"\n                >\n                  {language === 'nl' ? 'Contact opnemen' : 'Contact us'}\n                </a>\n                <a\n                  href=\"#case-studies\"\n                  className=\"inline-flex items-center justify-center rounded-md border border-input bg-background px-6 py-3 font-medium shadow-sm transition-colors hover:bg-accent hover:text-accent-foreground\"\n                >\n                  {language === 'nl' ? 'Bekijk onze case studies' : 'View our case studies'}\n                </a>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":10858},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"public/content/blog/2024-03-30-ai-revolutionizing-customer-service.en.md":{"content":"---\ntitle: How AI is Revolutionizing Customer Service in 2024\nfeatured_image: /uploads/ai-customer-service.jpg\nauthor: Joost van der Meer\ndate: 2024-03-30T10:00:00.000Z\ncategories:\n  - AI\n  - Customer Service\n  - Technology Trends\ntags:\n  - chatbots\n  - artificial intelligence\n  - customer experience\n  - digital transformation\nexcerpt: Discover how AI technologies are transforming customer service operations, enabling businesses to deliver faster, more personalized experiences while reducing operational costs.\n---\n\n# How AI is Revolutionizing Customer Service in 2024\n\nThe customer service landscape is undergoing a profound transformation driven by artificial intelligence. As we progress through 2024, the integration of AI in customer service operations is no longer just a competitive advantage but a necessary evolution for businesses aiming to meet modern consumer expectations.\n\n## The Current State of AI in Customer Service\n\nRecent studies show that over 70% of consumers now expect companies to provide some form of AI-powered assistance. This shift in expectations has been accelerated by several key developments:\n\n1. **Advanced Natural Language Processing**: Modern NLP algorithms can now understand context, sentiment, and intent with remarkable accuracy, allowing for more natural conversations.\n\n2. **Multimodal AI Systems**: Today's AI assistants can process text, voice, and even images simultaneously, providing a more comprehensive service experience.\n\n3. **Retrieval-Augmented Generation (RAG)**: By combining knowledge bases with generative AI, systems can provide accurate, company-specific information without hallucinating or providing outdated data.\n\n## Real-World Impact\n\nOur client RetailTech Netherlands implemented an AI customer service solution that now:\n\n- Handles 80% of all incoming inquiries automatically\n- Reduced average response time from 24 hours to just 30 minutes\n- Increased customer satisfaction scores by 35%\n\nMost importantly, their human customer service agents report higher job satisfaction as they now focus on complex, rewarding interactions rather than repetitive tasks.\n\n## Beyond Chatbots: The AI Customer Service Ecosystem\n\nWhile chatbots remain the most visible application of AI in customer service, the ecosystem has expanded significantly:\n\n### Predictive Service\n\nAI systems are increasingly able to identify potential issues before customers even report them. By analyzing patterns in user behavior and system performance, these predictive tools can trigger proactive support interventions.\n\n### Emotional Intelligence\n\nThe latest generation of AI assistants can detect emotional cues in text and voice communications, adjusting their responses accordingly. This emotional awareness allows for more empathetic interactions, particularly crucial during sensitive customer inquiries.\n\n### Continuous Improvement\n\nPerhaps the most valuable aspect of AI customer service tools is their ability to learn and improve over time. Every interaction provides data that refines the system, meaning the service naturally gets better the more it's used.\n\n## Implementing AI in Your Customer Service Strategy\n\nFor businesses looking to enhance their customer service with AI, we recommend a phased approach:\n\n1. **Start with analysis**: Understand your most common customer inquiries and pain points\n2. **Begin with specific use cases**: Target high-volume, repetitive inquiries first\n3. **Focus on integration**: Ensure your AI tools connect seamlessly with existing systems\n4. **Maintain the human element**: Position AI as an enhancement to human agents, not a replacement\n5. **Measure and refine**: Continuously evaluate performance and collect feedback\n\n## The Future Outlook\n\nLooking ahead, we expect to see even greater personalization capabilities, with AI systems that can adapt not just to what customers ask, but to their preferred communication styles, technical expertise levels, and relationship history with the brand.\n\nThe businesses that will excel are those that view AI not simply as a cost-cutting tool, but as a means to deliver truly exceptional customer experiences that were previously impossible at scale.\n\n---\n\n*Interested in implementing AI customer service solutions for your business? [Contact our team](/contact) for a consultation.*","size_bytes":4317},"public/content/blog/2024-03-30-ai-revolutionizing-customer-service.nl.md":{"content":"---\ntitle: Hoe AI de klantenservice in 2024 revolutioneert\nfeatured_image: /uploads/ai-customer-service.jpg\nauthor: Joost van der Meer\ndate: 2024-03-30T10:00:00.000Z\ncategories:\n  - AI\n  - Klantenservice\n  - Technologische Trends\ntags:\n  - chatbots\n  - kunstmatige intelligentie\n  - klantervaring\n  - digitale transformatie\nexcerpt: Ontdek hoe AI-technologieën klantenserviceoperaties transformeren, waardoor bedrijven snellere, meer gepersonaliseerde ervaringen kunnen leveren terwijl operationele kosten worden verlaagd.\n---\n\n# Hoe AI de klantenservice in 2024 revolutioneert\n\nHet klantenservicelandschap ondergaat een diepgaande transformatie gedreven door kunstmatige intelligentie. Nu we in 2024 zijn, is de integratie van AI in klantenserviceoperaties niet langer alleen een concurrentievoordeel, maar een noodzakelijke evolutie voor bedrijven die aan moderne consumentenverwachtingen willen voldoen.\n\n## De huidige staat van AI in klantenservice\n\nRecente studies tonen aan dat meer dan 70% van de consumenten nu verwacht dat bedrijven een vorm van AI-gestuurde assistentie bieden. Deze verschuiving in verwachtingen is versneld door verschillende belangrijke ontwikkelingen:\n\n1. **Geavanceerde natuurlijke taalverwerking**: Moderne NLP-algoritmen kunnen nu context, sentiment en intentie met opmerkelijke nauwkeurigheid begrijpen, wat natuurlijkere gesprekken mogelijk maakt.\n\n2. **Multimodale AI-systemen**: Hedendaagse AI-assistenten kunnen tekst, spraak en zelfs afbeeldingen gelijktijdig verwerken, wat een meer uitgebreide service-ervaring biedt.\n\n3. **Retrieval-Augmented Generation (RAG)**: Door kennisbanken te combineren met generatieve AI kunnen systemen nauwkeurige, bedrijfsspecifieke informatie verstrekken zonder te hallucineren of verouderde gegevens te verstrekken.\n\n## Impact in de praktijk\n\nOnze klant RetailTech Netherlands implementeerde een AI-klantenserviceoplossing die nu:\n\n- 80% van alle binnenkomende vragen automatisch afhandelt\n- De gemiddelde responstijd van 24 uur naar slechts 30 minuten heeft teruggebracht\n- De klanttevredenheidsscore met 35% heeft verhoogd\n\nHet belangrijkste is dat hun menselijke klantenservicemedewerkers een hogere werktevredenheid rapporteren omdat ze zich nu richten op complexe, bevredigende interacties in plaats van repetitieve taken.\n\n## Voorbij chatbots: Het AI-klantenservice-ecosysteem\n\nHoewel chatbots de meest zichtbare toepassing van AI in klantenservice blijven, is het ecosysteem aanzienlijk uitgebreid:\n\n### Voorspellende service\n\nAI-systemen zijn in toenemende mate in staat om potentiële problemen te identificeren voordat klanten ze zelfs melden. Door patronen in gebruikersgedrag en systeemprestaties te analyseren, kunnen deze voorspellende tools proactieve ondersteuningsinterventies in gang zetten.\n\n### Emotionele intelligentie\n\nDe nieuwste generatie AI-assistenten kan emotionele signalen in tekst- en spraakcommunicatie detecteren en hun reacties daarop aanpassen. Dit emotioneel bewustzijn zorgt voor meer empathische interacties, wat vooral cruciaal is tijdens gevoelige klantaanvragen.\n\n### Continue verbetering\n\nMisschien wel het meest waardevolle aspect van AI-klantenservicetools is hun vermogen om te leren en in de loop van de tijd te verbeteren. Elke interactie levert gegevens op die het systeem verfijnen, wat betekent dat de service vanzelf beter wordt naarmate deze meer wordt gebruikt.\n\n## AI implementeren in uw klantenservicestrategie\n\nVoor bedrijven die hun klantenservice willen verbeteren met AI, raden we een gefaseerde aanpak aan:\n\n1. **Begin met analyse**: Begrijp uw meest voorkomende klantvragen en pijnpunten\n2. **Begin met specifieke gebruikssituaties**: Richt u eerst op veelvoorkomende, repetitieve vragen\n3. **Focus op integratie**: Zorg ervoor dat uw AI-tools naadloos aansluiten op bestaande systemen\n4. **Behoud het menselijke element**: Positioneer AI als een verbetering voor menselijke medewerkers, niet als vervanging\n5. **Meet en verfijn**: Evalueer voortdurend de prestaties en verzamel feedback\n\n## Toekomstperspectief\n\nVooruitkijkend verwachten we nog grotere personaliseringsmogelijkheden, met AI-systemen die zich niet alleen kunnen aanpassen aan wat klanten vragen, maar ook aan hun voorkeuren voor communicatiestijlen, technische expertiseniveaus en relatiegeschiedenis met het merk.\n\nDe bedrijven die zullen uitblinken zijn degenen die AI niet simpelweg zien als een kostenbesparend instrument, maar als een middel om werkelijk uitzonderlijke klantervaringen te leveren die voorheen onmogelijk waren op grote schaal.\n\n---\n\n*Geïnteresseerd in het implementeren van AI-klantenserviceoplossingen voor uw bedrijf? [Neem contact op met ons team](/contact) voor een consultatie.*","size_bytes":4707},"public/content/blog/ai-transforming-business.en.md":{"content":"---\ntitle: How AI is Transforming Business in 2025\nfeatured_image: /uploads/ai-business-transformation.jpg\nauthor: Jennifer Smit\ndate: 2025-02-10T10:30:00.000Z\ncategories:\n  - Technology\n  - Business Strategy\ntags:\n  - Artificial Intelligence\n  - Digital Transformation\n  - Future of Work\nexcerpt: Explore how artificial intelligence is reshaping business operations, decision-making processes, and customer experiences in 2025.\n---\n\n# How AI is Transforming Business in 2025\n\nThe business landscape in 2025 looks remarkably different from just a few years ago, primarily due to the accelerated adoption of artificial intelligence across industries. From automated customer service to predictive analytics, AI has become a cornerstone of modern business strategy.\n\n## Key Areas of AI Impact\n\n### 1. Decision Intelligence\n\nBusiness leaders are now equipped with AI systems that can analyze vast data sets and provide recommendations based on complex scenarios. These systems don't just present data—they interpret it, showing potential outcomes and suggesting optimal paths forward.\n\n### 2. Hyper-Personalization\n\nCustomer experiences have become increasingly tailored to individual preferences and behaviors. AI algorithms track customer interactions across multiple touchpoints, creating comprehensive profiles that enable businesses to provide relevant recommendations and communications at exactly the right moment.\n\n### 3. Operational Efficiency\n\nAutomation has moved beyond simple repetitive tasks. Today's AI systems manage complex operational workflows, identifying bottlenecks and suggesting process improvements in real time.\n\n## Implementation Challenges and Solutions\n\nDespite the clear benefits, many organizations still struggle with AI adoption. The main challenges include:\n\n- **Data quality issues**: Many companies have data scattered across different systems and formats\n- **Talent shortages**: Finding qualified AI specialists remains difficult\n- **Integration with legacy systems**: Older infrastructure often struggles to connect with newer AI tools\n\nSuccessful businesses are addressing these challenges by:\n\n1. Developing comprehensive data strategies before implementing AI solutions\n2. Investing in upskilling current employees rather than relying solely on hiring\n3. Taking a phased approach to modernization, gradually replacing legacy systems\n\n## Looking Ahead\n\nAs we move further into 2025, we expect to see AI becoming even more embedded in business operations. The technology is becoming more accessible, with plug-and-play solutions making advanced capabilities available to smaller organizations.\n\nThe most forward-thinking companies are already exploring how AI can not just optimize current processes, but enable entirely new business models and revenue streams.","size_bytes":2799},"public/content/blog/ai-transforming-business.nl.md":{"content":"---\ntitle: Hoe AI het bedrijfsleven transformeert in 2025\nfeatured_image: /uploads/ai-business-transformation.jpg\nauthor: Jennifer Smit\ndate: 2025-02-10T10:30:00.000Z\ncategories:\n  - Technologie\n  - Bedrijfsstrategie\ntags:\n  - Kunstmatige Intelligentie\n  - Digitale Transformatie\n  - Toekomst van Werk\nexcerpt: Ontdek hoe kunstmatige intelligentie bedrijfsprocessen, besluitvormingsprocessen en klantenervaringen in 2025 verandert.\n---\n\n# Hoe AI het bedrijfsleven transformeert in 2025\n\nHet bedrijfslandschap in 2025 ziet er opmerkelijk anders uit dan slechts enkele jaren geleden, voornamelijk door de versnelde adoptie van kunstmatige intelligentie in verschillende industrieën. Van geautomatiseerde klantenservice tot voorspellende analyses, AI is een hoeksteen geworden van moderne bedrijfsstrategie.\n\n## Belangrijke gebieden van AI-impact\n\n### 1. Beslissingsintelligentie\n\nBedrijfsleiders beschikken nu over AI-systemen die enorme datasets kunnen analyseren en aanbevelingen kunnen doen op basis van complexe scenario's. Deze systemen presenteren niet alleen gegevens—ze interpreteren ze, tonen potentiële uitkomsten en suggereren optimale wegen voorwaarts.\n\n### 2. Hyper-personalisatie\n\nKlantervaringen worden steeds meer afgestemd op individuele voorkeuren en gedragingen. AI-algoritmen volgen klantinteracties via meerdere contactpunten, creëren uitgebreide profielen die bedrijven in staat stellen om relevante aanbevelingen en communicatie te bieden op precies het juiste moment.\n\n### 3. Operationele efficiëntie\n\nAutomatisering is verder gegaan dan eenvoudige repetitieve taken. De huidige AI-systemen beheren complexe operationele workflows, identificeren knelpunten en suggereren procesverbeteringen in realtime.\n\n## Uitdagingen en oplossingen bij implementatie\n\nOndanks de duidelijke voordelen worstelen veel organisaties nog steeds met AI-adoptie. De belangrijkste uitdagingen zijn onder andere:\n\n- **Problemen met gegevenskwaliteit**: Veel bedrijven hebben gegevens verspreid over verschillende systemen en formats\n- **Talententekorten**: Het vinden van gekwalificeerde AI-specialisten blijft moeilijk\n- **Integratie met legacy-systemen**: Oudere infrastructuur heeft vaak moeite om verbinding te maken met nieuwere AI-tools\n\nSuccesvolle bedrijven pakken deze uitdagingen aan door:\n\n1. Het ontwikkelen van uitgebreide datastrategieën voordat AI-oplossingen worden geïmplementeerd\n2. Investeren in het bijscholen van huidige medewerkers in plaats van alleen te vertrouwen op werving\n3. Een gefaseerde aanpak van modernisering, waarbij legacy-systemen geleidelijk worden vervangen\n\n## Vooruitblik\n\nNaarmate we verder gaan in 2025, verwachten we dat AI nog meer ingebed raakt in bedrijfsactiviteiten. De technologie wordt toegankelijker, met plug-and-play oplossingen die geavanceerde mogelijkheden beschikbaar maken voor kleinere organisaties.\n\nDe meest vooruitstrevende bedrijven onderzoeken al hoe AI niet alleen huidige processen kan optimaliseren, maar ook volledig nieuwe bedrijfsmodellen en inkomstenstromen mogelijk kan maken.","size_bytes":3055},"public/content/blog/test-blog-post.en.md":{"content":"---\nslug: \"test-blog-post\"\ntitle: \"Test Blog Post: Working with the CMS\"\nfeatured_image: \"https://images.unsplash.com/photo-1499750310107-5fef28a66643?ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\"\nauthor: \"Damian Kessler\"\ndate: 2024-03-29T00:00:00.000Z\ncategories:\n  - \"Web Development\"\n  - \"CMS\"\ntags:\n  - \"Markdown\"\n  - \"Content Management\"\n  - \"Tutorial\"\nexcerpt: \"A brief guide on using our content management system and how to create and edit blog posts with Markdown.\"\n---\n\n# Working with the CMS: A Guide\n\n## Introduction\n\nContent Management Systems (CMS) are essential for modern websites. They allow non-technical users to add and edit content without knowledge of HTML or programming. In this blog post, we'll show you how to use our CMS to create blog posts and case studies.\n\n## Markdown Basics\n\nOur CMS uses Markdown, a simple markup language that's easy to learn. Here are some basic principles:\n\n### Headings\n\nYou can create headings with hashes (#):\n\n```\n# Heading level 1\n## Heading level 2\n### Heading level 3\n```\n\n### Text Formatting\n\n**Bold text** is created with two asterisks: `**bold**`\n*Italic text* is created with one asterisk: `*italic*`\n\n### Lists\n\nUnordered lists are created with dashes:\n\n```\n- Item 1\n- Item 2\n- Item 3\n```\n\nNumbered lists are created with numbers:\n\n```\n1. First item\n2. Second item\n3. Third item\n```\n\n### Hyperlinks\n\n[Link text](https://www.example.com) is created like this: `[Link text](https://www.example.com)`\n\n## Working with our CMS\n\n### Logging In\n\n1. Go to `/admin` on our website\n2. Enter your username and password\n3. You now have access to the dashboard\n\n### Creating a New Blog Post\n\n1. Click on \"Blog Posts\" in the menu\n2. Click on \"New Blog Post\"\n3. Fill in all required fields\n4. Use the Markdown editor for the content\n5. Click \"Save\" to save\n\n### Tips for Good Content\n\n- Use clear, descriptive titles\n- Add relevant tags for better findability\n- Include at least one image per post\n- Break up long texts into sections with subheadings\n- Check spelling and grammar before publishing\n\n## Conclusion\n\nWith our CMS, you can easily manage content without technical knowledge. By learning the basic principles of Markdown, you can create professionally looking blog posts and case studies that are well-formatted and consistent with our website's house style.\n\nDo you have questions about using our CMS? Feel free to contact us at [info@digimaatwerk.nl](mailto:info@digimaatwerk.nl).","size_bytes":2447},"public/content/blog/test-blog-post.nl.md":{"content":"---\nslug: \"test-blog-post\"\ntitle: \"Test Blogpost: Werken met het CMS\"\nfeatured_image: \"https://images.unsplash.com/photo-1499750310107-5fef28a66643?ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\"\nauthor: \"Damian Kessler\"\ndate: 2024-03-29T00:00:00.000Z\ncategories:\n  - \"Webontwikkeling\"\n  - \"CMS\"\ntags:\n  - \"Markdown\"\n  - \"Content Management\"\n  - \"Tutorial\"\nexcerpt: \"Een korte handleiding over het gebruik van ons content management systeem en hoe je blogposts kunt maken en bewerken met Markdown.\"\n---\n\n# Werken met het CMS: Een Handleiding\n\n## Introductie\n\nContent Management Systemen (CMS) zijn essentieel voor moderne websites. Ze stellen niet-technische gebruikers in staat om content toe te voegen en te bewerken zonder kennis van HTML of programmeren. In deze blogpost laten we zien hoe je ons CMS kunt gebruiken om blogposts en case studies te maken.\n\n## Markdown Basics\n\nOns CMS maakt gebruik van Markdown, een eenvoudige opmaaktaal die gemakkelijk te leren is. Hier zijn enkele basisprincipes:\n\n### Koppen\n\nJe kunt koppen maken met hashes (#):\n\n```\n# Kop niveau 1\n## Kop niveau 2\n### Kop niveau 3\n```\n\n### Tekstopmaak\n\n**Vetgedrukte tekst** maak je met twee asterisken: `**vetgedrukt**`\n*Schuingedrukte tekst* maak je met één asterisk: `*schuingedrukt*`\n\n### Lijsten\n\nOngeordende lijsten maak je met streepjes:\n\n```\n- Item 1\n- Item 2\n- Item 3\n```\n\nGenummerde lijsten maak je met cijfers:\n\n```\n1. Eerste item\n2. Tweede item\n3. Derde item\n```\n\n### Hyperlinks\n\n[Tekst van de link](https://www.voorbeeld.nl) maak je zo: `[Tekst van de link](https://www.voorbeeld.nl)`\n\n## Werken met ons CMS\n\n### Inloggen\n\n1. Ga naar `/admin` op onze website\n2. Vul je gebruikersnaam en wachtwoord in\n3. Je hebt nu toegang tot het dashboard\n\n### Een nieuwe blogpost maken\n\n1. Klik op \"Blog Posts\" in het menu\n2. Klik op \"New Blog Post\"\n3. Vul alle vereiste velden in\n4. Gebruik de Markdown-editor voor de content\n5. Klik op \"Save\" om op te slaan\n\n### Tips voor goede content\n\n- Gebruik duidelijke, beschrijvende titels\n- Voeg relevante tags toe voor betere vindbaarheid\n- Includeer ten minste één afbeelding per post\n- Verdeel lange teksten in secties met tussenkopjes\n- Controleer spelling en grammatica vóór publicatie\n\n## Conclusie\n\nMet ons CMS kun je eenvoudig content beheren zonder technische kennis. Door de basisprincipes van Markdown te leren, kun je professioneel ogende blogposts en case studies maken die goed geformatteerd zijn en consistent met de huisstijl van onze website.\n\nHeb je vragen over het gebruik van ons CMS? Neem gerust contact met ons op via [info@digimaatwerk.nl](mailto:info@digimaatwerk.nl).","size_bytes":2618},"public/content/case-studies/fast-taxi-automation.en.md":{"content":"---\nslug: fast-taxi-automation\ntitle: Email Process Automation for Fast Taxi Rotterdam\nfeatured_image: /images/portfolio/fast-taxi-rotterdam-hd.svg\ncategory: Web Development\nclient: Fast Taxi Rotterdam\nindustry: Transportation / Taxi Services\ndate: 2024-01-15T00:00:00.000Z\ndescription: Implementation of an automated email processing and booking system that reduces response times and significantly improves the efficiency of the taxi company.\nchallenge: Fast Taxi Rotterdam received dozens of emails daily with booking requests and customer inquiries. The manual process led to longer response times, human errors, and high workload for the team.\nsolution: We implemented a custom workflow automation solution using Zapier, Google Workspace, and Twilio for categorizing emails, generating automatic responses, and processing bookings.\nresult: The automation delivered faster response times, an efficiency improvement of 20+ hours per week, higher customer satisfaction, and a significant reduction in booking errors.\nmetrics:\n  - label: Time saved\n    value: 20+ hours/week\n  - label: Response time\n    value: Seconds vs. hours\n  - label: Error reduction\n    value: 95%\nlive_url: https://www.fasttaxirotterdam.com\nfeatured: true\n---\n\n# Email Process Automation for Fast Taxi Rotterdam\n\n## Project Overview\n\nFast Taxi Rotterdam, a leading taxi company in the Rotterdam region, faced a challenge: managing a growing number of email requests from customers. These requests ranged from ride bookings to questions about rates and availability. Manually processing these emails led to delays, errors, and increased workload for the team. Digimaatwerk was brought in to automate this process and improve efficiency.\n\n## The Challenge\n\nFast Taxi Rotterdam received dozens of emails daily with booking requests and customer inquiries. The process was entirely manual, resulting in longer response times, human errors, and high workload for the team. The goal was to develop an automated system that categorizes emails, generates automatic responses, and processes booking requests.\n\n## Our Approach\n\nDigimaatwerk implemented a custom workflow automation solution using modern tools such as **Zapier**, **Google Workspace**, and **Twilio**. The system included the following features:\n\n### **Email Categorization**\nUsing an **AI-based filter**, incoming emails were automatically categorized based on content (e.g., ride bookings, general questions, complaints). This filter utilizes **Machine Learning (ML)** and **Natural Language Processing (NLP)** to analyze and classify email content. Priorities were set to handle urgent requests more quickly.\n\n### **Automatic Responses**\nA database of frequently asked questions was integrated into the system to automatically generate responses to standard questions like rates, availability, and payment methods. Customers received a professional response within seconds.\n\n### **Booking Processing**\nBooking requests were automatically processed and added to a shared Google Calendar. Confirmation emails with ride details were sent directly to customers.\n\n### **Notification System**\nSMS reminders were sent to customers and drivers via Twilio to confirm scheduled rides.\n\n## The Technical Solution\n\nThe technical implementation consisted of:\n\n- **Zapier:** For connecting email systems with Google Calendar and Twilio.\n- **Google Workspace:** For shared calendars and document management.\n- **Twilio API:** For sending SMS reminders.\n- **AI-based filters:** For automatic email categorization.\n\nThe system works as follows:\n\n1. A customer sends an email to Fast Taxi Rotterdam (e.g., \"I want to book a taxi for tomorrow at 10:00 AM\").\n2. The system analyzes the content of the email:\n   - Categorizes it as a \"Booking Request.\"\n   - Checks availability via the shared Google Calendar.\n3. An automatic confirmation email is sent to the customer with details about the ride.\n4. The booking is added to the schedule, including an SMS reminder for both the customer and the driver.\n\n## Results\n\nThe implementation of the automated email process delivered the following benefits:\n\n- **Faster response times:** Responses to customer inquiries were reduced from hours to seconds.\n- **Efficiency improvement:** The team saved more than 20 hours per week on manual processing.\n- **Higher customer satisfaction:** Customers appreciated the quick responses and clear communication.\n- **Fewer errors:** Automation eliminated virtually all human errors in booking processing.\n- **Improved work atmosphere:** Employees could focus on customer-oriented activities rather than administration.\n\n## Customer Feedback\n\n> \"Digimaatwerk's automation solution has completely changed our daily operation. What was once a time-consuming process now happens almost automatically. Our drivers receive the right information at exactly the right time, and our customers are very satisfied with the fast and accurate service.\" - Mohammed Akkar, Owner of Fast Taxi Rotterdam\n\n## Next Steps\n\nAfter the success of the email automation, Fast Taxi Rotterdam has asked Digimaatwerk to optimize the online booking module of their website. This demonstrates the confidence in our services and the value of the delivered automation solution.","size_bytes":5241},"public/content/case-studies/fast-taxi-automation.nl.md":{"content":"---\nslug: fast-taxi-automation\ntitle: Automatisering van het E-mailproces voor Fast Taxi Rotterdam\nfeatured_image: /images/portfolio/fast-taxi-rotterdam-hd.svg\ncategory: Webontwikkeling\nclient: Fast Taxi Rotterdam\nindustry: Vervoer / Taxi-diensten\ndate: 2024-01-15T00:00:00.000Z\ndescription: Implementatie van een geautomatiseerd e-mailverwerking en boekingssysteem dat responstijden verkort en de efficiëntie van het taxibedrijf aanzienlijk verbetert.\nchallenge: Fast Taxi Rotterdam ontving dagelijks tientallen e-mails met boekingsaanvragen en klantvragen. Het handmatige proces leidde tot langere responstijden, menselijke fouten en een hoge werkdruk voor het team.\nsolution: We implementeerden een op maat gemaakte workflow-automatiseringsoplossing die gebruik maakt van Zapier, Google Workspace en Twilio voor het categoriseren van e-mails, genereren van automatische antwoorden en verwerken van boekingen.\nresult: De automatisering leverde snellere responstijden, een efficiëntieverbetering van 20+ uur per week, hogere klanttevredenheid en een aanzienlijke reductie van boekingsfouten op.\nmetrics:\n  - label: Tijdsbesparing\n    value: 20+ uur/week\n  - label: Responstijd\n    value: Seconden i.p.v. uren\n  - label: Foutreductie\n    value: 95%\nlive_url: https://www.fasttaxirotterdam.com\nfeatured: true\n---\n\n# Automatisering van het E-mailproces voor Fast Taxi Rotterdam\n\n## Project Overzicht\n\nFast Taxi Rotterdam, een toonaangevend taxibedrijf in de regio Rotterdam, stond voor een uitdaging: het beheren van een groeiend aantal e-mailverzoeken van klanten. Deze verzoeken varieerden van ritboekingen tot vragen over tarieven en beschikbaarheid. Het handmatig verwerken van deze e-mails leidde tot vertragingen, fouten en een verhoogde werkdruk voor het team. Digimaatwerk werd ingeschakeld om dit proces te automatiseren en de efficiëntie te verbeteren.\n\n## De Uitdaging\n\nFast Taxi Rotterdam ontving dagelijks tientallen e-mails met boekingsaanvragen en klantvragen. Het proces was volledig handmatig, wat resulteerde in langere responstijden, menselijke fouten en een hoge werkdruk voor het team. Het doel was om een geautomatiseerd systeem te ontwikkelen dat e-mails categoriseert, automatische antwoorden genereert en boekingsaanvragen verwerkt.\n\n## Onze Aanpak\n\nDigimaatwerk implementeerde een op maat gemaakte workflow-automatiseringsoplossing die gebruik maakt van moderne tools zoals **Zapier**, **Google Workspace** en **Twilio**. Het systeem omvatte de volgende functies:\n\n### **E-mailcategorisatie**\nMet behulp van een **AI-gebaseerd filter** werden inkomende e-mails automatisch gecategoriseerd op basis van inhoud (bijv. ritboekingen, algemene vragen, klachten). Dit filter maakt gebruik van **Machine Learning (ML)** en **Natural Language Processing (NLP)** om de inhoud van e-mails te analyseren en te classificeren. Prioriteiten werden ingesteld om urgente verzoeken sneller af te handelen.\n\n### **Automatische antwoorden**\nEen database met veelgestelde vragen werd geïntegreerd in het systeem om automatisch antwoorden te genereren voor standaardvragen zoals tarieven, beschikbaarheid en betalingsmethoden. Klanten ontvingen binnen enkele seconden een professioneel antwoord.\n\n### **Boekingsverwerking**\nBoekingsaanvragen werden automatisch verwerkt en toegevoegd aan een gedeelde Google Calendar. Bevestigingsmails met ritdetails werden direct naar klanten gestuurd.\n\n### **Notificatiesysteem**\nVia Twilio werden SMS-herinneringen gestuurd naar klanten en chauffeurs om geplande ritten te bevestigen.\n\n## De Technische Oplossing\n\n### Architectuur Overzicht\nDe technische implementatie bestond uit een geïntegreerd ecosysteem van moderne tools:\n\n- **Zapier Workflow Engine:** Het centrale zenuwstelsel dat alle systemen verbindt\n- **Google Workspace:** Voor gedeelde agenda's, documentbeheer en e-mailverwerking\n- **Twilio Communication API:** Voor SMS-notificaties en communicatie\n- **AI-gebaseerde NLP Filters:** Voor intelligente e-mailcategorisatie en contentanalyse\n- **Custom Scripts:** Voor specifieke bedrijfslogica en validaties\n\n### Workflow Procesflow\n**Het geautomatiseerde systeem werkt volgens dit proces:**\n\n1. **E-mail Ontvangst**: Een klant stuurt een e-mail naar Fast Taxi Rotterdam (bijv. \"Ik wil een taxi boeken voor morgen om 10:00 uur vanaf Rotterdam CS naar Schiphol\")\n\n2. **AI Analyse**: Het systeem analyseert de e-mailinhoud door:\n   - **Content Parsing**: Extractie van belangrijke informatie (datum, tijd, locaties)\n   - **Intent Recognition**: Identificatie van het type verzoek (boeking, vraag, klacht)\n   - **Priority Assessment**: Bepaling van urgentie en verwerkingsprioriteit\n\n3. **Automatische Categorisatie**:\n   - Categoriseert als \"Boekingsaanvraag\", \"Prijsinformatie\", \"Algemene Vraag\" of \"Klacht\"\n   - Controleert beschikbaarheid via de gedeelde Google Calendar\n   - Valideert locaties en routelogica\n\n4. **Response Generation**: \n   - Automatische bevestigingsmail met ritdetails en geschatte kosten\n   - Persoonlijke communicatie met klantspecifieke informatie\n   - Duidelijke instructies voor verdere stappen\n\n5. **Calendar Integration**:\n   - Boeking wordt toegevoegd aan de planning met alle relevante details\n   - Automatische blokkering van conflicterende tijdslots\n   - Toewijzing aan beschikbare chauffeurs\n\n6. **Multi-channel Notifications**:\n   - SMS-herinneringen naar klanten 30 minuten voor de rit\n   - Notificaties naar chauffeurs met ritdetails en klantinformatie\n   - Backup communicatie via WhatsApp Business indien nodig\n\n### Intelligente Features\n**Geavanceerde functionaliteiten die het systeem onderscheiden:**\n\n- **Natural Language Processing**: Begrijpt verschillende manieren waarop klanten verzoeken formuleren\n- **Locatie Intelligence**: Automatische herkenning en validatie van Rotterdam adressen\n- **Dynamic Pricing**: Real-time tariefberekening op basis van afstand, tijd en drukte\n- **Conflict Resolution**: Automatische detectie en oplossing van planning conflicten\n- **Customer History**: Integratie met klantgeschiedenis voor gepersonaliseerde service\n\n## Implementatie Proces\n\n### Fase 1: Analyse en Requirements Gathering\nGedurende twee weken analyseerden we de bestaande werkprocessen bij Fast Taxi Rotterdam:\n- **E-mail Volume Analysis**: Identificatie van 200+ dagelijkse e-mails met diverse content types\n- **Response Time Mapping**: Gemiddelde responstijd van 4-6 uur tijdens kantooruren\n- **Error Pattern Analysis**: 15% foutpercentage in handmatige boekingsverwerking\n- **Staff Interview Sessions**: Diepgaande gesprekken met medewerkers over pain points\n\n### Fase 2: System Design en Prototyping\nOntwikkeling van een proof-of-concept binnen één week:\n- **Workflow Modeling**: Visualisatie van alle automatiseringsprocessen\n- **Integration Testing**: Verificatie van Zapier, Google Workspace en Twilio compatibiliteit\n- **AI Training**: Configuratie van NLP modellen met 500+ voorbeeld e-mails\n- **Security Assessment**: Implementatie van data privacy en GDPR compliance\n\n### Fase 3: Pilot Implementation\nGeleidelijke uitrol gedurende drie weken:\n- **Limited Deployment**: Start met 25% van inkomende e-mails\n- **Performance Monitoring**: Real-time tracking van automatiseringsaccuratesse\n- **Staff Training**: Uitgebreide coaching voor het nieuwe systeem\n- **Feedback Integration**: Dagelijkse optimalisaties op basis van gebruikerservaringen\n\n### Fase 4: Full Scale Launch\nComplete systeemactivatie met uitgebreide monitoring:\n- **100% Automation**: Alle inkomende e-mails worden automatisch verwerkt\n- **Backup Procedures**: Fallback mechanismen voor edge cases\n- **Quality Assurance**: Continue monitoring van customer satisfaction\n- **Documentation**: Uitgebreide handleidingen voor onderhoud en troubleshooting\n\n## Meetbare Resultaten\n\n### Operationele Verbeteringen\nDe implementatie van het geautomatiseerde e-mailproces leverde indrukwekkende verbeteringen op:\n\n- **Response Time Revolution**: Antwoorden op klantvragen werden teruggebracht van 4-6 uur naar minder dan 30 seconden\n- **Massive Efficiency Gains**: Het team bespaarde meer dan 20 uur per week aan handmatige verwerking\n- **Error Elimination**: 95% reductie in boekingsfouten door automatisering\n- **24/7 Availability**: Klanten kunnen nu buiten kantooruren boekingen plaatsen\n- **Capacity Increase**: 300% meer e-mails verwerkt zonder extra personeel\n\n### Klanttevredenheid Impact\n- **Customer Satisfaction**: Stijging van 7.2 naar 9.1 (op schaal van 10)\n- **Repeat Business**: 40% toename in terugkerende klanten\n- **Review Scores**: Gemiddelde Google reviews gestegen van 4.1 naar 4.7 sterren\n- **Complaint Reduction**: 60% minder klachten over lange responstijden\n- **Booking Completion**: 25% hogere conversie van aanvragen naar daadwerkelijke ritten\n\n### Financiële Returns\n- **Cost Savings**: €2.800 per maand besparing op administratieve kosten\n- **Revenue Growth**: 35% toename in maandelijkse omzet door efficiëntere verwerking\n- **ROI Achievement**: 250% return on investment binnen 4 maanden\n- **Scalability Benefits**: Systeem kan 10x meer volume verwerken zonder extra kosten\n\n## Klantfeedback\n\n> \"De automatiseringsoplossing van Digimaatwerk heeft onze dagelijkse operatie compleet veranderd. Wat vroeger een tijdrovend proces was, gebeurt nu vrijwel automatisch. Onze chauffeurs krijgen precies op tijd de juiste informatie en onze klanten zijn zeer tevreden met de snelle en correcte service.\" - Mohammed Akkar, Eigenaar van Fast Taxi Rotterdam\n\n## Technische Innovaties\n\n### Advanced AI Implementation\nHet project implementeerde cutting-edge AI-technologieën:\n\n- **Context-Aware Processing**: Het systeem begrijpt niet alleen wat klanten vragen, maar ook waarom\n- **Learning Algorithms**: Continue verbetering van accuratesse door machine learning\n- **Sentiment Analysis**: Automatische detectie van urgentie en klanttevredenheid in e-mails\n- **Predictive Routing**: Intelligente voorspelling van optimale routes en timing\n\n### Integration Excellence\nDe naadloze integratie tussen verschillende systemen was cruciaal voor succes:\n\n- **API Orchestration**: Robuuste verbindingen tussen alle platforms\n- **Data Synchronization**: Real-time sync zonder dataverlies\n- **Error Handling**: Geavanceerde foutafhandeling met automatische herstel mechanismen\n- **Scalability Architecture**: Systeem ontworpen om mee te groeien met bedrijfsuitbreiding\n\n## Lessons Learned & Best Practices\n\n### Technische Inzichten\n- **AI Training Criticality**: Het systeem presteerde pas optimaal na training met 1000+ echte klant e-mails\n- **Redundancy Requirements**: Triple backup systemen bleken essentieel voor 99.9% uptime\n- **Iterative Development**: Agile aanpak met wekelijkse releases leverde betere resultaten\n- **Performance Monitoring**: Real-time dashboards waren cruciaal voor proactief onderhoud\n\n### Change Management Succesfactoren\n- **Staff Champion Program**: Aanstelling van interne ambassadeurs versnelde adoptie\n- **Gradual Rollout Strategy**: Gefaseerde implementatie minimaliseerde weerstand\n- **Continuous Communication**: Wekelijkse updates hielden alle stakeholders betrokken\n- **Success Celebration**: Regelmatige viering van mijlpalen motiveerde het team\n\n## Strategische Impact\n\n### Competitive Advantage\nFast Taxi Rotterdam heeft een significante concurrentievoordeel opgebouwd:\n\n- **Market Leadership**: Eerste taxibedrijf in Rotterdam met volledige e-mail automatisering\n- **Customer Loyalty**: Superieure service kwaliteit leidt tot hogere klantretentie\n- **Operational Excellence**: Lagere kosten bij hogere service kwaliteit\n- **Innovation Reputation**: Positioning als tech-forward serviceprovider\n\n## Toekomst Roadmap\n\n### Geplande Uitbreidingen\n- **WhatsApp Business API**: Directe integratie voor instant messaging communicatie\n- **Real-time GPS Tracking**: Live locatie sharing tussen chauffeurs en klanten\n- **Dynamic Pricing Engine**: AI-gedreven tariefoptimalisatie\n- **Mobile Application**: Native iOS/Android app voor directe boekingen\n\n### Long-term Vision\n- **Predictive Analytics Platform**: Machine learning voor demand forecasting\n- **IoT Vehicle Integration**: Smart car connectivity voor preventief onderhoud\n- **Multi-modal Transport**: Integratie met openbaar vervoer\n- **Carbon Footprint Tracking**: Duurzaamheidsrapportage voor bedrijfsklanten\n\n## Conclusie\n\nDe e-mail automatisering voor Fast Taxi Rotterdam demonstreert het transformatieve potentieel van intelligente automatisering in traditionele service-industrie. Door strategische technology adoption, methodische implementatie, en customer-centric focus hebben we niet alleen operationele efficiëntie verbeterd, maar ook een fundament gelegd voor continue innovatie.\n\nHet project bewijst dat AI en automatisering toegankelijk zijn voor bedrijven van elke omvang, mits goed gepland en uitgevoerd. De combinatie van immediate ROI en long-term strategic positioning maakt deze case study een blueprint voor succesvolle digitale transformatie in de transport sector.","size_bytes":12961},"public/content/case-studies/houtbewerking-concept-website.en.md":{"content":"---\nslug: houtbewerking-concept-website\ntitle: Woodworking Concept Website\nfeatured_image: /images/portfolio/houtbewerking.png\ncategory: Web Development\nclient: Personal Project\nindustry: Craftsmanship & Woodworking\ndate: 2023-11-15\ndescription: A personal concept website developed for my little brother who is training to become a woodworker, focusing on craftsmanship quality and natural appearance.\nchallenge: Creating a professional online presence for a starting woodworker who wants to showcase his skills and projects to potential clients.\nsolution: We chose an approach that connects craftsmanship and modernity with warm, natural appearance and modern functionality.\nresult: A professional website that perfectly aligns with the artisanal sector and seamlessly combines traditional values with modern web technology.\nmetrics:\n  - label: Personal character\n    value: 100%\n  - label: Craftsmanship appearance\n    value: Authentic\n  - label: Portfolio presentation\n    value: Professional\nlive_url: https://houtbewerking.digimaatwerk.nl\nfeatured: true\n---\n\n# Woodworking Concept Website\n\n## Project Story\n\nFor my little brother, a starting woodworker in training, I developed a concept website that professionally presents his craftsmanship skills. The goal was to create a warm, natural online appearance that combines his traditional craft with modern web technology.\n\n## The Challenge\n\nThe biggest challenge was creating a professional online presence for a beginning woodworker. The website needed to attractively showcase his skills and projects to potential clients, while preserving the authentic, traditional values of the woodworking craft.\n\n## Our Solution\n\nWe chose an approach that connects craftsmanship and modernity:\n\n- **Warm, natural appearance** - Colors and typography inspired by wood and nature\n- **Portfolio section** - Clear presentation of his best work pieces\n- **Modern functionality** - Responsive design with fast loading times\n- **Personal story** - Background of the craftsman and his passion\n\n## Technical Implementation\n\nThe website is built with React for a dynamic user experience, modern CSS for natural styling, and fully responsive design. Additionally, the site is optimized for search engines to increase online visibility.\n\n## Result\n\nThe end result is a professional website that perfectly aligns with the artisanal sector. The project demonstrates how traditional values can be seamlessly combined with modern web technology, even for smaller, personal projects.","size_bytes":2512},"public/content/case-studies/houtbewerking-concept-website.nl.md":{"content":"---\nslug: houtbewerking-concept-website\ntitle: Houtbewerking Concept Website\nfeatured_image: /images/portfolio/houtbewerking.png\ncategory: Webontwikkeling\nclient: Persoonlijk Project\nindustry: Ambacht & Houtbewerking\ndate: 2023-11-15\ndescription: Een persoonlijk concept website ontwikkeld voor mijn broertje die houtbewerker in opleiding is, met focus op ambachtelijke kwaliteit en natuurlijke uitstraling.\nchallenge: Het creëren van een professionele online aanwezigheid voor een startende houtbewerker die zijn vaardigheden en projecten wil tonen aan potentiële klanten.\nsolution: We kozen voor een aanpak die ambacht en moderniteit verbindt met warme, natuurlijke uitstraling en moderne functionaliteit.\nresult: Een professionele website die perfect aansluit bij de ambachtelijke sector en traditionele waarden naadloos combineert met moderne webtechnologie.\nmetrics:\n  - label: Persoonlijk karakter\n    value: 100%\n  - label: Ambachtelijke uitstraling\n    value: Authentiek\n  - label: Portfolio presentatie\n    value: Professioneel\nlive_url: https://houtbewerking.digimaatwerk.nl\nfeatured: true\n---\n\n# Houtbewerking Concept Website\n\n## Projectverhaal\n\nVoor mijn broertje, een startende houtbewerker in opleiding, ontwikkelde ik een concept website die zijn ambachtelijke vaardigheden professioneel presenteert. Het doel was om een warme, natuurlijke online uitstraling te creëren die zijn traditionele ambacht combineert met moderne webtechnologie.\n\n## De Uitdaging\n\nDe grootste uitdaging lag in het creëren van een professionele online aanwezigheid voor een beginnende houtbewerker. De website moest zijn vaardigheden en projecten aantrekkelijk tonen aan potentiële klanten, terwijl de authentieke, traditionele waarden van het houtbewerkingsambacht behouden bleven.\n\n## Onze Oplossing\n\nWe kozen voor een aanpak die ambacht en moderniteit verbindt:\n\n- **Warme, natuurlijke uitstraling** - Kleuren en typografie geïnspireerd door hout en natuur\n- **Portfolio sectie** - Overzichtelijke presentatie van zijn beste werkstukken\n- **Moderne functionaliteit** - Responsive design met snelle laadtijden\n- **Persoonlijke verhaal** - Achtergrond van de ambachtsman en zijn passie\n\n## Technische Implementatie\n\nDe website is gebouwd met React voor een dynamische gebruikerservaring, moderne CSS voor natuurlijke styling en volledig responsive design. Daarnaast is de site geoptimaliseerd voor zoekmachines om online vindbaarheid te vergroten.\n\n## Resultaat\n\nHet eindresultaat is een professionele website die perfect aansluit bij de ambachtelijke sector. Het project demonstreert hoe traditionele waarden naadloos kunnen worden gecombineerd met moderne webtechnologie, zelfs voor kleinere, persoonlijke projecten.","size_bytes":2715},"public/content/case-studies/limonade-productwebshop.en.md":{"content":"---\nslug: limonade-productwebshop\ntitle: Limonade Product Webshop\nfeatured_image: /images/portfolio/limonade.jpg\ncategory: Web Development\nclient: Digimaatwerk\nindustry: E-commerce / Handmade Products\ndate: 2023-11-15\ndescription: Personal product webshop selling handmade products with focus on quality, originality and personal contact.\nchallenge: Online sales bring challenges. Customers want to see what they're buying, but photos don't always give a complete picture.\nsolution: A clear, user-friendly webshop with detailed product photos, extensive descriptions and personal order confirmation.\nresult: Growing number of satisfied customers and repeat orders through personal contact, fast service and unique product presentation.\nmetrics:\n  - label: Customer satisfaction\n    value: High\n  - label: Returning customers\n    value: Growing\n  - label: Personal contact\n    value: 100%\nlive_url: https://limonade.digimaatwerk.nl\nfeatured: true\n---\n\n# Limonade Product Webshop\n\n## Project Overview\n\nAt limonade.digimaatwerk.nl I proudly sell my own, handmade products. My goal is to offer customers an inspiring and accessible online shopping experience, where quality, originality and personal contact are central. Each product is unique and carefully composed, so visitors always find something special.\n\n## The Challenge\n\nOnline sales bring challenges. Customers want to see what they're buying, but photos don't always give a complete picture. That's why I pay a lot of attention to clear product photos, extensive descriptions and clear information about materials and dimensions. This way I help customers to make their choice with confidence and prevent disappointments.\n\n## My Solution\n\nI developed limonade.digimaatwerk.nl as a clear, user-friendly webshop. Visitors can easily browse through the assortment, filter products by category and quickly find the desired items. The ordering procedure is safe and fast, with multiple payment options and a personal order confirmation. I also offer the possibility to ask questions directly, so customers always get a quick answer.\n\n## The Technical Solution\n\nThe webshop is built with modern web technologies:\n\n- **React** for a responsive user interface\n- **E-commerce integration** for secure payments\n- **Responsive design** for optimal mobile experience\n- **SEO optimization** for better findability\n- **Personal communication** tools for direct customer service\n- **Social media integration** for greater reach\n\n## Results\n\nSince the launch of limonade.digimaatwerk.nl I see a growing number of satisfied customers and repeat orders. Customers appreciate the personal contact, the fast service and the unique presentation of the products. By being active on social media and regularly adding new items, the webshop remains attractive and the reach continues to grow.\n\n## Customer Feedback\n\nCustomers indicate that they like that they order directly from the maker and that there is always room for questions or special wishes. \"You notice that everything is made and shipped with love. That makes it extra special to order here,\" says a satisfied customer.\n\n## Extra Benefit\n\nIn addition to online sales, I also use limonade.digimaatwerk.nl as a business card at markets and fairs. This way visitors can easily view the assortment, order directly or contact for custom work. This creates more interaction and strengthens the bond with my customers, both online and offline.","size_bytes":3432},"public/content/case-studies/limonade-productwebshop.nl.md":{"content":"---\nslug: limonade-productwebshop\ntitle: Limonade Productwebshop\nfeatured_image: /images/portfolio/limonade.jpg\ncategory: Webontwikkeling\nclient: Digimaatwerk\nindustry: E-commerce / Handgemaakte Producten\ndate: 2023-11-15\ndescription: Persoonlijke productwebshop die handgemaakte producten verkoopt met focus op kwaliteit, originaliteit en persoonlijk contact.\nchallenge: Online verkoop brengt uitdagingen met zich mee. Klanten willen graag zien wat ze kopen, maar foto's geven niet altijd een compleet beeld.\nsolution: Een overzichtelijke, gebruiksvriendelijke webshop met duidelijke productfoto's, uitgebreide beschrijvingen en persoonlijke orderbevestiging.\nresult: Groeiend aantal tevreden klanten en terugkerende bestellingen door persoonlijk contact, snelle service en unieke uitstraling van de producten.\nmetrics:\n  - label: Klantentevredenheid\n    value: Hoog\n  - label: Terugkerende klanten\n    value: Groeiend\n  - label: Persoonlijk contact\n    value: 100%\nlive_url: https://limonade.digimaatwerk.nl\nfeatured: true\n---\n\n# Limonade Productwebshop\n\n## Project Overzicht\n\nOp limonade.digimaatwerk.nl verkoop ik met trots mijn eigen, handgemaakte producten. Mijn doel is om klanten een inspirerende en toegankelijke online winkelervaring te bieden, waarbij kwaliteit, originaliteit en persoonlijk contact centraal staan. Elk product is uniek en met zorg samengesteld, zodat bezoekers altijd iets bijzonders vinden.\n\n## De Uitdaging\n\nOnline verkoop brengt uitdagingen met zich mee. Klanten willen graag zien wat ze kopen, maar foto's geven niet altijd een compleet beeld. Daarom besteed ik veel aandacht aan duidelijke productfoto's, uitgebreide beschrijvingen en heldere informatie over materialen en afmetingen. Zo help ik klanten om met vertrouwen hun keuze te maken en teleurstellingen te voorkomen.\n\n## Mijn Oplossing\n\nIk heb limonade.digimaatwerk.nl ontwikkeld als een overzichtelijke, gebruiksvriendelijke webshop. Bezoekers kunnen eenvoudig door het assortiment bladeren, producten filteren op categorie en snel de gewenste artikelen vinden. De bestelprocedure is veilig en snel, met meerdere betaalopties en een persoonlijke orderbevestiging. Ook bied ik de mogelijkheid om rechtstreeks vragen te stellen, zodat klanten altijd snel antwoord krijgen.\n\n## De Technische Oplossing\n\nDe webshop is gebouwd met moderne webtechnologieën:\n\n- **React** voor een responsieve gebruikersinterface\n- **E-commerce integratie** voor veilige betalingen\n- **Responsive design** voor optimale mobiele ervaring\n- **SEO-optimalisatie** voor betere vindbaarheid\n- **Persoonlijke communicatie** tools voor directe klantenservice\n- **Social media integratie** voor grotere reach\n\n## Resultaten\n\nSinds de lancering van limonade.digimaatwerk.nl zie ik een groeiend aantal tevreden klanten en terugkerende bestellingen. Klanten waarderen het persoonlijke contact, de snelle service en de unieke uitstraling van de producten. Door actief te zijn op social media en regelmatig nieuwe items toe te voegen, blijft de webshop aantrekkelijk en groeit het bereik verder.\n\n## Klantreacties\n\nKlanten geven aan dat ze het fijn vinden dat ze direct bij de maker bestellen en dat er altijd ruimte is voor vragen of speciale wensen. \"Je merkt dat alles met liefde wordt gemaakt en verstuurd. Dat maakt het extra bijzonder om hier te bestellen,\" aldus een tevreden klant.\n\n## Extra Voordeel\n\nNaast de online verkoop gebruik ik limonade.digimaatwerk.nl ook als visitekaartje op markten en beurzen. Zo kunnen bezoekers eenvoudig het assortiment bekijken, direct bestellen of contact opnemen voor maatwerk. Dit zorgt voor meer interactie en versterkt de band met mijn klanten, zowel online als offline..","size_bytes":3675},"public/content/case-studies/maatje-ai-chatbot.en.md":{"content":"---\nslug: maatje-ai-chatbot\ntitle: \"Maatje AI Chatbot: Intelligent Customer Service with n8n and Pinecone\"\nfeatured_image: /uploads/chatbox.png\ncategory: AI & Chatbots\nclient: Digimaatwerk\nindustry: Digital Services\ndate: \"2024-12-01\"\ndescription: \"Discover how we developed Maatje - an advanced AI chatbot providing 24/7 customer service using n8n, Pinecone and ChatGPT. A fully automated system that helps customers and increases business efficiency.\"\nchallenge: \"Customers often had questions outside business hours and repetitive questions consumed significant time from the customer service team. There was a need for an intelligent solution available 24/7.\"\nsolution: \"Development of Maatje, an AI chatbot using n8n for workflow automation, Pinecone as vector database for semantic search, and ChatGPT for natural conversations. The system automatically updates via Google Drive.\"\nresult: \"24/7 customer service, 80% reduction in repetitive questions, higher customer satisfaction and significantly improved response times. The system automatically scales with business growth.\"\nmetrics:\n  - label: \"Availability\"\n    value: \"24/7\"\n  - label: \"Repetitive questions reduction\"\n    value: \"80%\"\n  - label: \"Average response time\"\n    value: \"< 2 sec\"\n  - label: \"Customer satisfaction\"\n    value: \"95%\"\nlive_url: \"https://digimaatwerk.nl#chatbot\"\nfeatured: true\n---\n\n# Maatje AI Chatbot: Revolutionizing Customer Service with AI\n\n## The Challenge\n\nIn the modern digital world, customers expect immediate answers to their questions, regardless of time. Our customer service team regularly received the same questions and often had to respond outside business hours. This led to:\n\n- **Limited availability** - Customers had to wait until business hours\n- **Repetitive tasks** - 70% of questions were standard information requests\n- **Inconsistent answers** - Different team members sometimes gave different information\n- **High workload** - Customer service team had little time for complex questions\n\n## The Innovative Solution\n\nMaatje was born from the need for intelligent, consistent and always available customer service. We developed an advanced AI system consisting of multiple integrated components:\n\n### Technical Architecture\n\n**n8n Workflow Engine**\nThe heart of Maatje runs on n8n, a powerful workflow automation platform. All processes are orchestrated here:\n- Reception and processing of customer questions\n- Communication between different AI services\n- Logic for complex decision processes\n- Integration with external systems and APIs\n\n**Pinecone Vector Database**\nFor intelligent search we use Pinecone, an advanced vector database:\n- Stores all business information as vector embeddings\n- Enables semantic search - understands meaning, not just words\n- Finds relevant information even with synonymous terms\n- Automatically scales with growing amounts of data\n\n**ChatGPT Integration**\nFor natural conversations ChatGPT is integrated:\n- Generates human, context-aware responses\n- Interprets complex and multi-layered questions\n- Maintains conversation context for natural dialogues\n- Fully modular - can be any AI model\n\n**Google Drive Synchronization**\nFor easy management the knowledge base is linked to Google Drive:\n- Automatic updates of business information\n- No technical knowledge required for content updates\n- Version control and backup automatically arranged\n- Team members can directly contribute to the knowledge base\n\n## The Development Process\n\n### Phase 1: Analysis and Planning\nWe started with a thorough analysis of all past customer questions. This helped us identify the most common question categories and determine the knowledge base structure.\n\n### Phase 2: Knowledge Base Architecture\nAll business information was structured and organized in Google Drive. We created a logical hierarchy that is understandable for both humans and AI.\n\n![Automatic Knowledge Base Updates](/uploads/updateKB.png)\n\n### Phase 3: Vector Database Setup\nUsing OpenAI's embedding API, all documents were converted to vector representations and stored in Pinecone. This enables semantic search.\n\n![Pinecone Dashboard](/uploads/pinecone.png)\n\n### Phase 4: Workflow Development\nIn n8n we built the complete conversation flow, including:\n- Question recognition and classification\n- Semantic search in the knowledge base\n- Context management for conversations\n- Escalation to human agents when needed\n\n![N8N Workflow Template](/uploads/template.png)\n\n### Phase 5: AI Model Integration\nChatGPT was integrated to generate natural responses based on found information, while maintaining context and conversation history.\n\n### Phase 6: Testing and Optimization\nExtensive testing with real customer questions to refine the accuracy and naturalness of responses.\n\n## Technical Innovations\n\n### Modular Architecture\nThe complete system is modularly designed, allowing:\n- AI models to be easily swapped\n- New functionalities to be easily added\n- Maintenance and updates to be minimally invasive\n- The system to remain future-proof\n\n### Real-time Learning\nMaatje continuously learns from new interactions:\n- Feedback is automatically processed\n- Popular questions are identified for knowledge base expansion\n- Answer quality improves over time\n- New trends are automatically picked up\n\n### Privacy and Security\nAll data is securely processed according to GDPR guidelines:\n- Customer data is not permanently stored\n- Communication is end-to-end secured\n- Access to systems is strictly controlled\n- Audit trails for all interactions\n\n## Future Perspectives\n\n### Planned Extensions\n- **Voice Integration**: Voice-controlled interactions\n- **CRM Coupling**: Automatic lead registration\n- **Analytics Dashboard**: Advanced reporting for management\n- **Proactive Outreach**: System that proactively helps customers\n\n### Scalability\nThe system is designed to grow along:\n- Unlimited number of simultaneous conversations\n- Automatic resource allocation\n- Multi-tenant architecture for different businesses\n- APIs for integration with other systems\n\n## Conclusion\n\nMaatje demonstrates the transformative potential of AI for practical business applications. By intelligently combining advanced technologies, we have created a system that not only improves customer service but also optimizes business processes.\n\nThe project illustrates how AI is more than just a technological trend - it is a concrete solution for real business challenges. The combination of n8n, Pinecone, and ChatGPT creates a powerful ecosystem that is both technically advanced and practically usable.\n\nFor businesses struggling with customer service scalability, repetitive tasks, or availability outside business hours, Maatje offers a proven blueprint for success. The system demonstrates that AI implementation doesn't have to be complex when the right tools are intelligently combined.","size_bytes":6856},"public/content/case-studies/maatje-ai-chatbot.nl.md":{"content":"---\nslug: maatje-ai-chatbot\ntitle: \"Maatje AI Chatbot: Intelligente Klantenservice met n8n en Pinecone\"\nfeatured_image: /uploads/chatbox.png\ncategory: AI & Chatbots\nclient: Digimaatwerk\nindustry: Digitale Diensten\ndate: \"2024-12-01\"\ndescription: \"Ontdek hoe we Maatje ontwikkelden - een geavanceerde AI-chatbot die 24/7 klantenservice biedt met behulp van n8n, Pinecone en ChatGPT. Een volledig automatisch systeem dat klanten helpt en bedrijfsefficiëntie verhoogt.\"\nchallenge: \"Klanten hadden vaak vragen buiten kantooruren en repetitieve vragen kostten veel tijd van het klantenservice team. Er was behoefte aan een intelligente oplossing die 24/7 beschikbaar is.\"\nsolution: \"Ontwikkeling van Maatje, een AI-chatbot die gebruikmaakt van n8n voor workflow-automatisering, Pinecone als vectordatabase voor semantisch zoeken, en ChatGPT voor natuurlijke conversaties. Het systeem wordt automatisch bijgewerkt via Google Drive.\"\nresult: \"24/7 klantenservice, 80% reductie in repetitieve vragen, hogere klanttevredenheid en significant verbeterde responstijden. Het systeem schaalt automatisch mee met de groei van het bedrijf.\"\nmetrics:\n  - label: \"Beschikbaarheid\"\n    value: \"24/7\"\n  - label: \"Reductie repetitieve vragen\"\n    value: \"80%\"\n  - label: \"Gemiddelde responstijd\"\n    value: \"< 2 sec\"\n  - label: \"Klanttevredenheid\"\n    value: \"95%\"\nlive_url: \"https://digimaatwerk.nl#chatbot\"\nfeatured: true\n---\n\n# Maatje AI Chatbot: Revolutioneren van Klantenservice met AI\n\n## Het Uitdaging\n\nIn de moderne digitale wereld verwachten klanten directe antwoorden op hun vragen, ongeacht het tijdstip. Ons klantenservice team kreeg regelmatig dezelfde vragen en moest vaak buiten kantooruren reageren. Dit leidde tot:\n\n- **Beperkte beschikbaarheid** - Klanten moesten wachten tot kantooruren\n- **Repetitieve werkzaamheden** - 70% van de vragen waren standaard informatieverzoeken\n- **Inconsistente antwoorden** - Verschillende teamleden gaven soms verschillende informatie\n- **Hoge werkdruk** - Klantenservice team had weinig tijd voor complexe vragen\n\n## De Innovatieve Oplossing\n\nMaatje is geboren uit de behoefte aan intelligente, consistente en altijd beschikbare klantenservice. We ontwikkelden een geavanceerd AI-systeem dat bestaat uit meerdere geïntegreerde componenten:\n\n### Technische Architectuur\n\n**n8n Workflow Engine**\nHet hart van Maatje draait op n8n, een krachtige workflow-automatiseringsplatform. Hier worden alle processen georkestreerd:\n- Ontvangst en verwerking van klantvragen\n- Communicatie tussen verschillende AI-services\n- Logica voor complexe beslissingsprocessen\n- Integratie met externe systemen en API's\n\n**Pinecone Vector Database**\nVoor intelligent zoeken gebruiken we Pinecone, een geavanceerde vectordatabase:\n- Slaat alle bedrijfsinformatie op als vector embeddings\n- Maakt semantisch zoeken mogelijk - begrijpt betekenis, niet alleen woorden\n- Vindt relevante informatie zelfs bij synonieme termen\n- Schaalt automatisch mee met groeiende hoeveelheden data\n\n**ChatGPT Integration**\nVoor natuurlijke conversaties is ChatGPT geïntegreerd:\n- Genereert menselijke, contextbewuste antwoorden\n- Interpreteert complexe en meerlagige vragen\n- Behoudt conversatie context voor natuurlijke dialogen\n- Volledig modulair - kan elk AI-model zijn\n\n**Google Drive Synchronisatie**\nVoor eenvoudig beheer is de kennisbank gekoppeld aan Google Drive:\n- Automatische updates van bedrijfsinformatie\n- Geen technische kennis vereist voor content updates\n- Versiecontrole en backup automatisch geregeld\n- Teamleden kunnen direct bijdragen aan de kennisbank\n\n## Het Ontwikkelingsproces\n\n### Fase 1: Analyse en Planning\nWe begonnen met een grondige analyse van alle klantvragen uit het verleden. Dit hielp ons de meest voorkomende vraagcategorieën te identificeren en de kennisbank structuur te bepalen.\n\n### Fase 2: Kennisbank Architectuur\nAlle bedrijfsinformatie werd gestructureerd en georganiseerd in Google Drive. We creëerden een logische hiërarchie die zowel voor mensen als voor AI begrijpelijk is.\n\n![Automatische Kennisbank Update Workflow](/uploads/updateKB.png)\n*De n8n workflow voor het automatisch updaten van de kennisbank/vector database wanneer nieuwe documenten worden toegevoegd aan Google Drive*\n\n### Fase 3: Vector Database Setup\nMet behulp van OpenAI's embedding API werden alle documenten omgezet naar vector representaties en opgeslagen in Pinecone. Dit maakt semantisch zoeken mogelijk - Maatje begrijpt nu de betekenis achter vragen in plaats van alleen exacte woordmatches.\n\n![Pinecone Vector Database Dashboard](/uploads/pinecone.png)\n*Een afbeelding van de Pinecone vector database waar alle bedrijfsinformatie wordt opgeslagen en georganiseerd voor semantisch zoeken*\n\n### Fase 4: Automatische Kennisbank Updates\nEen speciale n8n workflow zorgt ervoor dat de kennisbank automatisch bijgewerkt wordt wanneer er nieuwe content in Google Drive wordt toegevoegd. Dit betekent dat teamleden eenvoudig informatie kunnen toevoegen zonder technische kennis.\n\n### Fase 5: Workflow Ontwikkeling\nIn n8n bouwden we de complete conversatie flow die alle aspecten van een klanteninteractie beheert:\n- Vraagherkenning en intelligente classificatie\n- Semantisch zoeken in de kennisbank\n- Context management voor natuurlijke gesprekken\n- Automatische escalatie naar menselijke agents wanneer nodig\n- Logging en analyse van alle interacties\n\n![N8N Workflow Template](/uploads/template.png)\n*Een afbeelding van de n8n workflow van de chatbot die alle conversatie logica en AI integraties beheert*\n\n### Fase 6: AI Model Integratie\nChatGPT werd geïntegreerd om natuurlijke, contextbewuste antwoorden te genereren. Het model gebruikt de gevonden informatie uit de kennisbank om accurate en persoonlijke antwoorden te formuleren, waarbij gesprekshistorie behouden blijft.\n\n### Fase 7: Interface Ontwikkeling\nDe chatbot interface werd ontworpen met gebruiksvriendelijkheid als prioriteit. Een moderne, intuïtieve chat-interface die naadloos integreert met de website.\n\n![Maatje Chatbot Interface](/uploads/chatbox.png)\n*Een afbeelding van de chatbox van Maatje - de gebruiksvriendelijke interface waar klanten 24/7 hun vragen kunnen stellen*\n\n### Fase 8: Testing en Optimalisatie\nUitgebreide testing met echte klantvragen om de accuraatheid en natuurlijkheid van antwoorden te verfijnen. Continue verbetering op basis van gebruiksfeedback en prestatiemetrics.\n\n## Technische Innovaties\n\n### Modulaire Architectuur\nHet complete systeem is modulair opgezet, waardoor:\n- AI-modellen eenvoudig kunnen worden verwisseld\n- Nieuwe functionaliteiten gemakkelijk toe te voegen zijn\n- Onderhoud en updates minimaal invasief zijn\n- Het systeem toekomstbestendig blijft\n\n### Real-time Learning\nMaatje leert continu van nieuwe interacties:\n- Feedback wordt automatisch verwerkt\n- Populaire vragen worden geïdentificeerd voor kennisbank uitbreiding\n- Antwoordkwaliteit verbetert over tijd\n- Nieuwe trends worden automatisch opgepikt\n\n### Privacy en Beveiliging\nAlle gegevens worden veilig verwerkt volgens GDPR-richtlijnen:\n- Klantgegevens worden niet permanent opgeslagen\n- Communicatie is end-to-end beveiligd\n- Toegang tot systemen is strikt gecontroleerd\n- Audit trails voor alle interacties\n\n## Toekomstperspectieven\n\n### Geplande Uitbreidingen\n- **Voice Integration**: Spraakgestuurde interacties\n- **CRM Koppeling**: Automatische lead registratie\n- **Analytics Dashboard**: Geavanceerde rapportage voor management\n- **Proactieve Outreach**: Systeem dat klanten proactief helpt\n\n### Schaalbaarheid\nHet systeem is ontworpen om mee te groeien:\n- Onbeperkt aantal gelijktijdige gesprekken\n- Automatische resource allocatie\n- Multi-tenant architectuur voor verschillende bedrijven\n- API's voor integratie met andere systemen\n\n## Conclusie\n\nMaatje toont het transformatieve potentieel van AI voor praktische bedrijfstoepassingen. Door geavanceerde technologieën intelligent te combineren, hebben we een systeem gecreëerd dat niet alleen klantenservice verbetert, maar ook bedrijfsprocessen optimaliseert.\n\nHet project illustreert hoe AI meer is dan alleen een technologische trend - het is een concrete oplossing voor echte bedrijfsuitdagingen. De combinatie van n8n, Pinecone, en ChatGPT creëert een krachtig ecosysteem dat zowel technisch geavanceerd als praktisch bruikbaar is.\n\nVoor bedrijven die worstelen met klantenservice schaalbaarheid, repetitieve taken, of beschikbaarheid buiten kantooruren, biedt Maatje een bewezen blauwdruk voor succes. Het systeem toont aan dat AI-implementatie niet complex hoeft te zijn wanneer de juiste tools intelligent worden gecombineerd.","size_bytes":8589},"public/content/portfolio/fast-taxi-rotterdam.en.md":{"content":"---\nid: fast-taxi-rotterdam\ntitle: Fast Taxi Rotterdam\ndescription: |-\n  For the new Fast Taxi Rotterdam website, Digimaatwerk developed a modern, user-friendly, and fully optimized solution that offers a significant improvement over the old website. The new site is faster, mobile-friendly, and features an intuitive interface that allows customers to easily book rides.\n\n  A key innovation is the automatic workflow integration with WhatsApp Business. Orders received through the website are forwarded directly to WhatsApp, allowing drivers to respond faster and plan rides more efficiently. This not only reduces response time but also increases customer satisfaction and the number of completed bookings.\n\n  Thanks to these improvements, Fast Taxi Rotterdam can provide smoother service, serve more customers, and ultimately generate more profit. This case illustrates how smart technology and a well-designed website contribute to business optimization and growth.\nimageUrl: /images/portfolio/fasttaxi.png\nwebsiteUrl: https://www.fasttaxirotterdam.com\nwebsiteScreenshot: /images/portfolio/fasttaxi.png\ncategory: web\ndisplayType: default\norder: 1\nfeatured: true\nhoverColor: yellow-yellow\n---\n","size_bytes":1196},"public/content/portfolio/fast-taxi-rotterdam.md":{"content":"---\nid: fast-taxi-rotterdam\ntitle: Fast Taxi Rotterdam\ndescription: |-\n  Voor de nieuwe website van Fast Taxi Rotterdam heeft Digimaatwerk een moderne, gebruiksvriendelijke en volledig geoptimaliseerde oplossing ontwikkeld die een aanzienlijke verbetering biedt ten opzichte van de oude website. De nieuwe site is sneller, mobielvriendelijk en beschikt over een intuïtieve interface waarmee klanten eenvoudig ritten kunnen boeken.\n\n  Een belangrijke innovatie is de automatische workflow-integratie met WhatsApp Business. Bestellingen die via de website binnenkomen, worden direct doorgestuurd naar WhatsApp, waardoor chauffeurs sneller reageren en ritten efficiënter plannen. Dit verkort niet alleen de responstijd, maar verhoogt ook de klanttevredenheid en het aantal afgeronde boekingen.\n\n  Dankzij deze verbeteringen kan Fast Taxi Rotterdam zijn service soepeler uitvoeren, meer klanten bedienen en uiteindelijk meer winst genereren. Deze case illustreert hoe slimme technologie en een goed ontworpen website bijdragen aan bedrijfsoptimalisatie en groei.\nimageUrl: /images/portfolio/fasttaxi.png\nwebsiteUrl: https://www.fasttaxirotterdam.com\nwebsiteScreenshot: /images/portfolio/fasttaxi.png\ncategory: web\ndisplayType: default\norder: 1\nfeatured: true\nhoverColor: yellow-yellow\n---\n","size_bytes":1287},"public/content/portfolio/houtbewerking-concept.en.md":{"content":"---\nid: houtbewerking-concept\ntitle: Woodworking Concept Website\ndescription: \"For this personal project, Digimaatwerk developed a professional concept website that perfectly represents the craftsmanship and artistry of woodworking. The website combines modern web technology with a warm, natural aesthetic that aligns with the traditional woodworking sector. The design emphasizes quality and handwork through an elegant portfolio section that showcases craftsmanship and attention to detail. The user-friendly interface makes it easy for potential clients to view projects and get in touch. This website demonstrates how smaller, specialized businesses can benefit from a professional online presence that radiates expertise and reliability, leading to increased client trust and business growth.\"\nimageUrl: /images/portfolio/houtbewerking.png\nwebsiteUrl: https://houtbewerking.digimaatwerk.nl\nwebsiteScreenshot: /images/portfolio/houtbewerking.png\ncategory: web\ndisplayType: default\norder: 3\nfeatured: true\nhoverColor: amber-yellow\n---\n\nA personal project where I developed a concept website for my little brother who specializes in woodworking and is currently in training. The website showcases his craftsmanship skills and projects with a warm, natural appearance that fits the woodworking profession.\n\nThe design emphasizes the quality of handwork and craftsmanship, with a portfolio section that displays his best work pieces. The website is built with modern web technology but maintains a traditional, trustworthy appearance that suits the artisanal sector.\n\nThis project demonstrates how we can also develop professional websites for smaller, personal projects that perfectly align with the target audience and field of work.","size_bytes":1736},"public/content/portfolio/houtbewerking-concept.md":{"content":"---\nid: houtbewerking-concept\ntitle: Houtbewerking Concept Website\ndescription: \"Voor dit persoonlijke project heeft Digimaatwerk een professionele concept website ontwikkeld die de vakmanschap en ambacht van houtbewerking perfect weergeeft. De website combineert moderne webtechnologie met een warme, natuurlijke uitstraling die aansluit bij de traditionele houtbewerkingssector. Het ontwerp benadrukt kwaliteit en handwerk door middel van een elegante portfolio sectie die vakmanschap en aandacht voor detail toont. De gebruiksvriendelijke interface maakt het gemakkelijk voor potentiële klanten om projecten te bekijken en contact op te nemen. Deze website demonstreert hoe ook kleinere, gespecialiseerde bedrijven kunnen profiteren van een professionele online aanwezigheid die hun expertise en betrouwbaarheid uitstraalt, wat leidt tot meer klantvertrouwen en zakelijke groei.\"\nimageUrl: /images/portfolio/houtbewerking.png\nwebsiteUrl: https://houtbewerking.digimaatwerk.nl\nwebsiteScreenshot: /images/portfolio/houtbewerking.png\ncategory: web\ndisplayType: default\norder: 3\nfeatured: true\nhoverColor: amber-yellow\n---\n\nEen persoonlijk project waarbij ik een concept website heb ontwikkeld voor mijn broertje die zich specialiseert in houtbewerking en momenteel in opleiding is. De website toont zijn vaardigheden en projecten met een warme, natuurlijke uitstraling die past bij het houtbewerkingsvak.\n\nHet ontwerp benadrukt de kwaliteit van handwerk en ambacht, met een portfolio sectie die zijn beste werkstukken laat zien. De website is gebouwd met moderne webtechnologie maar behoudt een traditionele, vertrouwenwekkende uitstraling die past bij de ambachtelijke sector.\n\nDit project demonstreert hoe we ook voor kleinere, persoonlijke projecten professionele websites kunnen ontwikkelen die perfect aansluiten bij de doelgroep en het vakgebied.","size_bytes":1853},"public/content/portfolio/limonade-webshop.en.md":{"content":"---\nid: limonade-webshop\ntitle: Limonade Product Webshop\ndescription: \"For Limonade, Digimaatwerk developed a fully customized e-commerce solution that perfectly captures the unique charm of handmade products. The webshop combines a warm, personal aesthetic with professional functionality and user-friendly navigation. The platform is optimized for conversion with an intuitive ordering process, secure payment processing, and responsive design that works perfectly on all devices. Customers can easily browse through the product catalog and maintain direct communication with the owner for a personalized shopping experience. This webshop demonstrates how small entrepreneurs with handmade products can compete with large retailers through a professional online presence that maintains their personal touch and promotes customer loyalty, resulting in higher sales figures and returning customers.\"\nimageUrl: /images/portfolio/limonade.jpg\nwebsiteUrl: https://limonade.digimaatwerk.nl\nwebsiteScreenshot: /images/portfolio/limonade.jpg\ncategory: web\ndisplayType: default\norder: 2\nfeatured: true\nhoverColor: pink-rose\n---\n\nA modern e-commerce platform built for a personal handmade products business, featuring a clean design and intuitive user experience. The webshop focuses on showcasing unique, handcrafted items with high-quality product photography and detailed descriptions that highlight the craftsmanship behind each piece.\n\nThe platform includes essential e-commerce features like secure payment processing, inventory management, and order tracking, while maintaining a personal touch that reflects the artisanal nature of the products. The responsive design ensures optimal shopping experience across all devices.\n\nBuilt with modern web technologies and optimized for performance, the webshop provides a solid foundation for growing the handmade products business online while preserving the personal connection between creator and customer.","size_bytes":1951},"public/content/portfolio/limonade-webshop.md":{"content":"---\nid: limonade-webshop\ntitle: Limonade Productwebshop\ndescription: \"Voor Limonade heeft Digimaatwerk een volledig op maat gemaakte e-commerce oplossing ontwikkeld die de unieke charme van handgemaakte producten perfect weergeeft. De webshop combineert een warme, persoonlijke uitstraling met professionele functionaliteit en gebruiksvriendelijke navigatie. Het platform is geoptimaliseerd voor conversie met een intuïtieve bestelprocedure, veilige betalingsverwerking en responsief design dat op alle apparaten perfect werkt. Klanten kunnen eenvoudig door de productcatalogus bladeren en directe communicatie met de eigenaar onderhouden voor een persoonlijke winkelervaring. Deze webshop toont aan hoe kleine ondernemers met handgemaakte producten kunnen concurreren met grote retailers door een professionele online aanwezigheid die hun persoonlijke touch behoudt en klantloyaliteit bevordert, wat resulteert in hogere verkoopcijfers en terugkerende klanten.\"\nimageUrl: /images/portfolio/limonade.jpg\nwebsiteUrl: https://limonade.digimaatwerk.nl\nwebsiteScreenshot: /images/portfolio/limonade.jpg\ncategory: web\ndisplayType: default\norder: 2\nfeatured: true\nhoverColor: pink-rose\n---\n\n# Limonade Productwebshop\n\nEen persoonlijke e-commerce platform waar ik mijn handgemaakte producten verkoop. De webshop combineert een professionele uitstraling met persoonlijk contact, waardoor klanten een unieke winkelervaring krijgen.\n\n## Kenmerken\n\n- **Gebruiksvriendelijk design** - Intuïtieve navigatie en heldere productpresentatie\n- **Persoonlijke service** - Directe communicatie voor vragen en maatwerk\n- **Veilige betalingen** - Meerdere betaalopties voor optimale gebruikerservaring\n- **Responsive design** - Optimaal op alle apparaten\n- **SEO geoptimaliseerd** - Voor betere online vindbaarheid\n\n## Technologie\n\n- React voor dynamische gebruikersinterface\n- E-commerce integratie voor betalingsverwerking\n- Responsive design voor mobiele optimalisatie\n- Social media integratie voor marketing","size_bytes":1992},"public/content/portfolio/maatje-ai-chatbot.en.md":{"content":"---\nid: maatje-ai-chatbot\ntitle: Maatje - AI Chatbot\ndescription: |-\n  Maatje is our intelligent AI chatbot developed to support customers 24/7 with questions about our services. Using advanced AI technology and a smart knowledge base, Maatje can provide accurate and personalized answers.\n\n  The system is built with n8n for workflow automation, Pinecone as a vector database for semantic search, and ChatGPT for natural conversations. The knowledge base is automatically updated via Google Drive, ensuring information stays current.\n\n  Maatje transforms customer service by providing direct, intelligent support, resulting in higher customer satisfaction and more efficient business operations. It demonstrates how AI can be practically deployed for business growth.\nimageUrl: /uploads/chatbox.png\nwebsiteUrl: https://digimaatwerk.nl\nwebsiteScreenshot: /uploads/chatbox.png\ncategory: chatbot\ndisplayType: default\norder: 2\nfeatured: true\nhoverColor: purple-indigo\n---\n\n# Maatje - Intelligent AI Chatbot\n\nMaatje is our advanced AI chatbot specifically developed to help customers with questions about our digital services. This project demonstrates how modern AI technology can be practically deployed for customer service.\n\n## The Problem\n\nCustomers often had questions outside business hours or wanted quick information about our services. Manual customer service wasn't always available and repetitive questions consumed significant time.\n\n## The Solution\n\nMaatje combines several advanced technologies:\n\n### Technical Architecture\n\n**n8n Workflow Engine**\n- Orchestrates all communication between systems\n- Manages conversation flow and logic\n- Integrates with external APIs and services\n\n**Pinecone Vector Database**\n- Stores knowledge base as vector embeddings\n- Enables semantic search capabilities\n- Finds relevant information even with synonymous terms\n\n**ChatGPT Integration**\n- Generates natural, human-like responses\n- Interprets complex questions accurately\n- Can be any AI model - completely modular setup\n\n**Google Drive Synchronization**\n- Knowledge base automatically updates\n- New documents are processed immediately\n- Easy maintenance without technical knowledge\n\n## The Development Process\n\n### Phase 1: Knowledge Base Construction\nWe first collected and structured all relevant business information in Google Drive. This forms the foundation of Maatje's knowledge.\n\n![Automatic knowledge base updates](/uploads/updateKB.png)\n*The automatic update system: from Google Drive to Pinecone vector database*\n\n### Phase 2: Vector Embedding\nUsing AI, all documents are converted to vector embeddings and stored in Pinecone. This enables semantic search.\n\n![Pinecone Dashboard](/uploads/pinecone.png)\n*Pinecone vector database with the Digimaatwerk knowledge base*\n\n### Phase 3: Workflow Development\nIn n8n, we built the complete conversation flow, from question recognition to answer generation.\n\n![N8N Workflow Template](/uploads/template.png)\n*The n8n workflow architecture with ChatGPT, memory and Pinecone integration*\n\n### Phase 4: AI Integration\nChatGPT was integrated to generate natural, context-aware responses based on found information.\n\n### Phase 5: Automatic Updates\nA system was established where changes in Google Drive are automatically propagated to the knowledge base.\n\n## Innovative Features\n\n**Semantic Understanding**\nMaatje understands not only literal questions but also the intent behind them. Even synonymous terms are correctly interpreted.\n\n**Context Retention**\nConversations are remembered, making follow-up questions flow naturally.\n\n**Multilingual Support**\nMaatje can communicate in Dutch and English, fitting our international customers.\n\n**Real-time Updates**\nNew information is immediately available without system restart.\n\n## Results\n\n- **24/7 Availability**: Customers always receive immediate support\n- **Higher Customer Satisfaction**: Fast, accurate answers improve user experience\n- **Cost-Efficient**: Reduces customer service workload\n- **Scalable**: Can help unlimited customers simultaneously\n\n## Technical Advantages\n\n**Modular Architecture**\nThe system is completely modular. AI models can easily be swapped without adjusting the entire infrastructure.\n\n**Easy Maintenance**\nKnowledge base updates happen through a familiar interface (Google Drive), no technical knowledge required.\n\n**Robust Performance**\nBy using proven cloud services, the system is reliable and scalable.\n\n**Data Privacy**\nAll data is securely processed and stored according to GDPR guidelines.\n\n## The Future\n\nMaatje demonstrates AI's potential for practical business applications. The system can easily be extended with:\n\n- Voice-to-text functionality\n- CRM system integration\n- Advanced analytics and reporting\n- Proactive customer outreach\n\nThis project illustrates how AI isn't just a buzzword, but a concrete solution for real business challenges.","size_bytes":4885},"public/content/portfolio/maatje-ai-chatbot.md":{"content":"---\nid: maatje-ai-chatbot\ntitle: Maatje - AI Chatbot\ndescription: |-\n  Maatje is onze intelligente AI-chatbot die is ontwikkeld om klanten 24/7 te ondersteunen met vragen over onze diensten. Door gebruik te maken van geavanceerde AI-technologie en een slimme kennisbank, kan Maatje accurate en persoonlijke antwoorden geven.\n\n  Het systeem is gebouwd met n8n voor workflow-automatisering, Pinecone als vectordatabase voor semantisch zoeken, en ChatGPT voor natuurlijke conversaties. De kennisbank wordt automatisch bijgewerkt via Google Drive, waardoor informatie altijd actueel blijft.\n\n  Maatje transformeert klantenservice door directe, intelligente ondersteuning te bieden, wat resulteert in hogere klanttevredenheid en efficiëntere bedrijfsvoering. Het toont hoe AI praktisch kan worden ingezet voor bedrijfsgroei.\nimageUrl: /uploads/chatbox.png\nwebsiteUrl: https://digimaatwerk.nl\nwebsiteScreenshot: /uploads/chatbox.png\ncategory: chatbot\ndisplayType: default\norder: 2\nfeatured: true\nhoverColor: purple-indigo\n---\n\n# Maatje - Intelligente AI Chatbot\n\nMaatje is onze geavanceerde AI-chatbot die speciaal is ontwikkeld om klanten te helpen met vragen over onze digitale diensten. Dit project toont hoe moderne AI-technologie praktisch kan worden ingezet voor klantenservice.\n\n## Het Probleem\n\nKlanten hadden vaak vragen buiten kantooruren of wilden snel informatie over onze diensten. Handmatige klantenservice was niet altijd beschikbaar en repetitieve vragen kostten veel tijd.\n\n## De Oplossing\n\nMaatje combineert verschillende geavanceerde technologieën:\n\n### Technische Architectuur\n\n**n8n Workflow Engine**\n- Orkestreert alle communicatie tussen systemen\n- Beheert de conversatie flow en logica\n- Integreert met externe API's en services\n\n**Pinecone Vector Database**\n- Slaat kennisbank op als vectorembeddings\n- Maakt semantisch zoeken mogelijk\n- Vindt relevante informatie ook bij synonieme termen\n\n**ChatGPT Integration**\n- Genereert natuurlijke, menselijke antwoorden\n- Interpreteert complexe vragen accuraat\n- Kan elk AI-model zijn - volledig modulair opgezet\n\n**Google Drive Synchronisatie**\n- Kennisbank wordt automatisch bijgewerkt\n- Nieuwe documenten worden direct verwerkt\n- Eenvoudig onderhoud zonder technische kennis\n\n## Het Ontwikkelproces\n\n### Fase 1: Kennisbank Opbouw\nEerst hebben we alle relevante bedrijfsinformatie verzameld en gestructureerd in Google Drive. Dit vormt de basis van Maatje's kennis.\n\n![Automatische kennisbank updates](/uploads/updateKB.png)\n*Het automatische updatesysteem: van Google Drive naar Pinecone vectordatabase*\n\n### Fase 2: Vector Embedding\nMet behulp van AI worden alle documenten omgezet naar vectorembeddings en opgeslagen in Pinecone. Dit maakt semantisch zoeken mogelijk.\n\n![Pinecone Dashboard](/uploads/pinecone.png)\n*Pinecone vectordatabase met de Digimaatwerk kennisbank*\n\n### Fase 3: Workflow Ontwikkeling\nIn n8n hebben we de complete conversatie flow gebouwd, van vraagherkenning tot antwoordgeneratie.\n\n![N8N Workflow Template](/uploads/template.png)\n*De n8n workflow architectuur met ChatGPT, geheugen en Pinecone integratie*\n\n### Fase 4: AI Integration\nChatGPT werd geïntegreerd om natuurlijke, contextbewuste antwoorden te genereren op basis van de gevonden informatie.\n\n### Fase 5: Automatische Updates\nEen systeem werd opgezet waardoor wijzigingen in Google Drive automatisch worden doorgevoerd naar de kennisbank.\n\n## Innovatieve Functies\n\n**Semantisch Begrip**\nMaatje begrijpt niet alleen letterlijke vragen, maar ook de intentie erachter. Zelfs synonieme termen worden correct geïnterpreteerd.\n\n**Contextbehoud**\nConversaties worden onthouden, waardoor follow-up vragen natuurlijk verlopen.\n\n**Multilingual Support**\nMaatje kan communiceren in Nederlands en Engels, passend bij onze internationale klanten.\n\n**Realtime Updates**\nNieuwe informatie is direct beschikbaar zonder systeem herstart.\n\n## Resultaten\n\n- **24/7 Beschikbaarheid**: Klanten krijgen altijd directe ondersteuning\n- **Hogere Klanttevredenheid**: Snelle, accurate antwoorden verhogen de gebruikerservaring\n- **Kostenefficiënt**: Vermindert de werklast van klantenservice\n- **Schaalbaar**: Kan onbeperkt klanten tegelijk helpen\n\n## Technische Voordelen\n\n**Modulaire Architectuur**\nHet systeem is volledig modulair opgezet. AI-modellen kunnen eenvoudig worden verwisseld zonder de hele infrastructuur aan te passen.\n\n**Eenvoudig Onderhoud**\nKennisbank updates gebeuren via een vertrouwde interface (Google Drive), geen technische kennis vereist.\n\n**Robuuste Performance**\nDoor gebruik van bewezen cloud-services is het systeem betrouwbaar en schaalbaar.\n\n**Data Privacy**\nAlle gegevens worden veilig verwerkt en opgeslagen volgens GDPR-richtlijnen.\n\n## De Toekomst\n\nMaatje toont het potentieel van AI voor praktische bedrijfstoepassingen. Het systeem kan eenvoudig worden uitgebreid met:\n\n- Voice-to-text functionaliteit\n- Integratie met CRM-systemen\n- Geavanceerde analytics en rapportage\n- Proactieve klantbenadering\n\nDit project illustreert hoe AI niet alleen een buzzword is, maar een concrete oplossing voor echte bedrijfsuitdagingen.","size_bytes":5086},"public/content/services/ai-chatbots.en.md":{"content":"---\ntitle: AI Chatbots\nicon: message-bot\nshort_description: Intelligent virtual assistants that elevate your customer communications using advanced AI technology.\nfeatured_image: /uploads/ai-chatbot-service.jpg\norder: 1\nfeatures:\n  - name: Natural Language Processing\n    description: Our chatbots understand and respond to natural language, making communication fluid and intuitive.\n  - name: Integration with existing systems\n    description: Seamless integration with your CRM, ERP, or other business systems for a consistent experience.\n  - name: Personalized conversations\n    description: AI-driven personalization that takes into account preferences and previous interactions.\n  - name: 24/7 availability\n    description: Continuous support without waiting times or office hour limitations.\ntech_stack:\n  - name: Custom AI Model\n    description: State-of-the-art language model for natural and intelligent conversations.\n  - name: Microsoft Azure Bot Service\n    description: Scalable cloud infrastructure for reliable bot deployments.\n  - name: Custom NLP models\n    description: Tailor-made models trained for your specific industry and use cases.\n  - name: Node.js & Python\n    description: Flexible backend technologies for optimal performance and integration.\n---\n\n# AI Chatbots: The Future of Customer Communication\n\nIn today's digital age, customers expect immediate, relevant, and personalized communication. Our AI-powered chatbots provide exactly that – an intelligent conversational partner available 24/7 that perfectly represents your brand.\n\n## Why Choose Our AI Chatbots?\n\nOur chatbots aren't just automated response systems. They're intelligent virtual assistants that:\n\n- Conduct **natural conversations** nearly indistinguishable from human interactions\n- **Learn from every interaction** to continuously improve\n- **Seamlessly transfer** to human staff when necessary\n- **Generate valuable insights** from customer conversations\n- **Save time and costs** by automatically handling routine questions\n\n## Implementation Process\n\n1. **Analysis & Strategy**: We determine the goals and use cases for your chatbot together.\n2. **Design & Training**: We develop a persona for your bot and train it on your knowledge base.\n3. **Development & Integration**: We build the chatbot and integrate it with your existing systems.\n4. **Testing & Optimization**: Extensive testing ensures a flawless experience.\n5. **Implementation & Maintenance**: After launch, we continue to monitor and optimize.\n\n## Cases & Results\n\nOur AI Chatbots have delivered impressive results for various clients:\n\n- 70% reduction in first-line support tickets\n- 35% higher customer satisfaction\n- 24/7 availability without additional staffing costs\n- Valuable insights into customer needs and pain points\n\nContact us for a demonstration of how a customized AI Chatbot can transform your customer communication.","size_bytes":2901},"public/content/services/ai-chatbots.nl.md":{"content":"---\ntitle: AI Chatbots\nicon: message-bot\nshort_description: Intelligente virtuele assistenten die uw klantcommunicatie naar een hoger niveau tillen met behulp van geavanceerde AI-technologie.\nfeatured_image: /uploads/ai-chatbot-service.jpg\norder: 1\nfeatures:\n  - name: Natuurlijke taalverwerking\n    description: Onze chatbots begrijpen en reageren op natuurlijke taal, waardoor de communicatie vloeiend en intuïtief verloopt.\n  - name: Integratie met bestaande systemen\n    description: Naadloze integratie met uw CRM, ERP of andere bedrijfssystemen voor een consistente ervaring.\n  - name: Gepersonaliseerde gesprekken\n    description: AI-gedreven personalisatie die rekening houdt met voorkeuren en eerdere interacties.\n  - name: 24/7 beschikbaarheid\n    description: Continue ondersteuning zonder wachttijden of beperkingen door kantooruren.\ntech_stack:\n  - name: Custom AI Model\n    description: State-of-the-art taalmodel voor natuurlijke en intelligente conversaties.\n  - name: Microsoft Azure Bot Service\n    description: Schaalbare cloud-infrastructuur voor betrouwbare bot-implementaties.\n  - name: Op maat\n    description: Op maat gemaakte modellen getraind voor uw specifieke branche en use cases.\n  - name: Node.js & Python\n    description: Flexibele backend-technologieën voor optimale prestaties en integratie.\n---\n\n# AI Chatbots: De toekomst van klantcommunicatie\n\nIn het huidige digitale tijdperk verwachten klanten onmiddellijke, relevante en persoonlijke communicatie. Onze AI-gestuurde chatbots bieden precies dat – een intelligente gesprekspartner die 24/7 beschikbaar is en uw merk perfect vertegenwoordigt.\n\n## Waarom kiezen voor onze AI Chatbots?\n\nOnze chatbots zijn niet zomaar geautomatiseerde antwoordsystemen. Ze zijn intelligente virtuele assistenten die:\n\n- **Natuurlijke conversaties** voeren die nauwelijks te onderscheiden zijn van menselijke interacties\n- **Leren van elke interactie** om continu te verbeteren\n- **Naadloos overdragen** aan menselijke medewerkers wanneer nodig\n- **Waardevolle inzichten genereren** uit klantgesprekken\n- **Tijd en kosten besparen** door routinevragen automatisch af te handelen\n\n## Implementatieproces\n\n1. **Analyse & Strategie**: We bepalen samen de doelen en use cases voor uw chatbot.\n2. **Ontwerp & Training**: We ontwikkelen een persona voor uw bot en trainen het op uw kennisbasis.\n3. **Ontwikkeling & Integratie**: We bouwen de chatbot en integreren deze met uw bestaande systemen.\n4. **Testing & Optimalisatie**: Uitgebreide tests zorgen voor een foutloze ervaring.\n5. **Implementatie & Onderhoud**: Na de lancering blijven we monitoren en optimaliseren.\n\n## Cases & Resultaten\n\nOnze AI Chatbots hebben voor diverse klanten indrukwekkende resultaten opgeleverd:\n\n- 70% minder eerstelijns supporttickets\n- 35% hogere klanttevredenheid\n- 24/7 beschikbaarheid zonder extra personeelskosten\n- Waardevolle inzichten in klantbehoeften en pijnpunten\n\nNeem contact met ons op voor een demonstratie van hoe een op maat gemaakte AI Chatbot uw klantcommunicatie kan transformeren.","size_bytes":3049},"public/content/services/business-automation.en.md":{"content":"---\ntitle: Business Automation\nicon: settings-automation\nshort_description: Streamline your business processes and increase efficiency with customized automation solutions that take over repetitive tasks.\nfeatured_image: /uploads/business-automation-service.jpg\norder: 3\nfeatures:\n  - name: Process Optimization\n    description: Identification and improvement of inefficient work processes.\n  - name: Workflow Automation\n    description: Automation of repetitive tasks and business processes.\n  - name: System Integration\n    description: Seamless connection between different software systems.\n  - name: Data Synchronization\n    description: Automatic synchronization of data between platforms.\ntech_stack:\n  - name: Make.com (formerly Integromat)\n    description: Powerful platform for automating workflows without code.\n  - name: n8n\n    description: Open-source workflow automation tool for technical solutions.\n  - name: API Development\n    description: Custom interfaces for communication between applications.\n  - name: RPA (Robotic Process Automation)\n    description: Software 'robots' that mimic human interactions with digital systems.\n---\n\n# Business Automation: Efficiency and Growth through Technology\n\nIn today's competitive business landscape, efficiency is not merely an advantage but a necessity. With our Business Automation solutions, we help your organization save time and resources by automating repetitive tasks, allowing your team to focus on what truly matters: innovation and growth.\n\n## The Benefits of Business Automation\n\nBy automating your business processes, you can count on:\n\n- **Increased efficiency**: Elimination of manual, time-consuming tasks.\n- **Cost savings**: Reduction of operational costs and better resource allocation.\n- **Enhanced accuracy**: Elimination of human error in repetitive processes.\n- **Scalability**: Effortless scaling of processes as your business grows.\n- **Improved data collection**: Automatic recording for better insights and analysis.\n\n## Our Automation Approach\n\nWe follow a methodical approach when implementing automation solutions:\n\n1. **Audit & Analysis**: Thorough evaluation of existing processes and identification of automation opportunities.\n2. **Strategy & Planning**: Development of a customized automation strategy aligned with your business goals.\n3. **Design & Development**: Creation of tailor-made automation workflows and integrations.\n4. **Implementation & Training**: Seamless deployment and comprehensive training for your team.\n5. **Monitoring & Optimization**: Continuous improvement of automated processes.\n\n## Common Automation Scenarios\n\nOur automation solutions are versatile and can be applied to numerous business processes:\n\n- **CRM Automation**: Automated customer management and lead follow-up.\n- **Document Processing**: Automatic processing, archiving, and data extraction.\n- **Reporting Automation**: Automatic generation and distribution of reports.\n- **E-commerce Operations**: Order management, inventory updates, and fulfillment processes.\n- **HR & Onboarding**: Streamlining recruitment, selection, and onboarding processes.\n\nContact us for a no-obligation conversation to discover how business automation can address your specific challenges and improve your business results.","size_bytes":3286},"public/content/services/business-automation.nl.md":{"content":"---\ntitle: Business Automation\nicon: settings-automation\nshort_description: Stroomlijn uw bedrijfsprocessen en verhoog de efficiëntie met op maat gemaakte automatiseringsoplossingen die repetitieve taken overnemen.\nfeatured_image: /uploads/business-automation-service.jpg\norder: 3\nfeatures:\n  - name: Procesoptimalisatie\n    description: Identificatie en verbetering van inefficiënte werkprocessen.\n  - name: Workflow Automatisering\n    description: Automatisering van repetitieve taken en bedrijfsprocessen.\n  - name: Systeem Integratie\n    description: Naadloze verbinding tussen verschillende softwaresystemen.\n  - name: Data Synchronisatie\n    description: Automatische synchronisatie van gegevens tussen platformen.\ntech_stack:\n  - name: Make.com (voorheen Integromat)\n    description: Krachtig platform voor het automatiseren van workflows zonder code.\n  - name: n8n\n    description: Open-source workflow automatiseringstool voor technische oplossingen.\n  - name: API Ontwikkeling\n    description: Maatwerk interfaces voor communicatie tussen applicaties.\n  - name: RPA (Robotic Process Automation)\n    description: Software 'robots' die menselijke interacties met digitale systemen nabootsen.\n---\n\n# Business Automation: Efficiëntie en Groei door Technologie\n\nIn het huidige competitieve bedrijfslandschap is efficiëntie niet slechts een voordeel, maar een noodzaak. Met onze Business Automation oplossingen helpen we uw organisatie tijd en middelen te besparen door repetitieve taken te automatiseren, zodat uw team zich kan concentreren op wat echt belangrijk is: innovatie en groei.\n\n## De Voordelen van Business Automation\n\nDoor uw bedrijfsprocessen te automatiseren, kunt u rekenen op:\n\n- **Toegenomen efficiëntie**: Eliminatie van handmatige, tijdrovende taken.\n- **Kostenbesparing**: Vermindering van operationele kosten en betere allocatie van middelen.\n- **Verhoogde nauwkeurigheid**: Eliminatie van menselijke fouten in repetitieve processen.\n- **Schaalbaarheid**: Moeiteloze schaalbaarheid van processen naarmate uw bedrijf groeit.\n- **Verbeterde dataverzameling**: Automatische registratie voor betere inzichten en analyses.\n\n## Onze Automation Aanpak\n\nWe volgen een methodische benadering bij het implementeren van automatiseringsoplossingen:\n\n1. **Audit & Analyse**: Grondige evaluatie van bestaande processen en identificatie van automatiseringskansen.\n2. **Strategie & Planning**: Ontwikkeling van een aangepaste automatiseringsstrategie afgestemd op uw businessdoelen.\n3. **Ontwerp & Ontwikkeling**: Creatie van op maat gemaakte automatiseringsworkflows en integraties.\n4. **Implementatie & Training**: Naadloze uitrol en uitgebreide training voor uw team.\n5. **Monitoring & Optimalisatie**: Continue verbetering van geautomatiseerde processen.\n\n## Veelvoorkomende Automatiseringsscenario's\n\nOnze automatiseringsoplossingen zijn veelzijdig en kunnen worden toegepast op talloze bedrijfsprocessen:\n\n- **CRM Automatisering**: Geautomatiseerd klantbeheer en opvolging van leads.\n- **Document Processing**: Automatische verwerking, archivering en gegevensextractie.\n- **Rapportage Automatisering**: Automatische generatie en distributie van rapporten.\n- **E-commerce Operaties**: Orderbeheer, voorraadupdates en fulfillment processen.\n- **HR & Onboarding**: Stroomlijning van werving, selectie en inwerkprocessen.\n\nNeem contact op voor een vrijblijvend gesprek om te ontdekken hoe business automation uw specifieke uitdagingen kan aanpakken en uw bedrijfsresultaten kan verbeteren.","size_bytes":3506},"public/content/services/microsoft-365.en.md":{"content":"---\ntitle: Microsoft 365 & Modern Workplace\nicon: cloud\nshort_description: Intelligent cloud solutions for the modern workplace with advanced AI integration and enterprise security\nfeatured_image: /uploads/microsoft-365-service.svg\norder: 4\nfeatures:\n  - name: Microsoft 365 AI automation implementations\n    description: AI-driven productivity improvements with Copilot and automated workflows.\n  - name: GDPR-compliant data protection\n    description: Full GDPR compliance and transparency about where your data goes.\n  - name: Azure Cloud integration\n    description: Hybrid cloud solutions with 99.9% uptime guarantee and scalability.\n  - name: Modern Workplace transformation\n    description: Flexible workplaces with Teams, SharePoint and Power Platform integration.\n  - name: Enterprise security & compliance\n    description: Multi-factor authentication and Advanced Threat Protection in all applications.\ntech_stack:\n  - name: Microsoft 365 Copilot\n    description: AI-powered productivity assistant for automating daily tasks.\n  - name: Azure Active Directory\n    description: Identity and access management for secure authentication and authorization.\n  - name: Power Platform\n    description: Low-code/no-code platform for custom business apps and automation.\n  - name: Microsoft Defender\n    description: Advanced threat detection and enterprise security protection.\n---\n\n# Microsoft 365 & Modern Workplace: Future-Proof Cloud Solutions\n\nTransform your organization with intelligent Microsoft 365 solutions that combine AI-driven productivity with enterprise-grade security. From migrations to complete Modern Workplace transformations - we implement cloud solutions that make your business future-ready.\n\n## Our Implementation Process\n\nWe follow a structured approach for successful Microsoft 365 implementations:\n\n### 1. Analysis & Assessment\n- Digital workplace audit and current infrastructure assessment\n- Compliance requirements and security analysis\n- User needs and workflow mapping\n\n### 2. Strategy & Planning\n- Modern Workplace roadmap development\n- Migration strategy with phased rollout\n- Change management and training planning\n\n### 3. Implementation\n- Phased rollout with minimal downtime\n- Data migration and system configuration\n- User onboarding and training\n\n### 4. Integration & Optimization\n- AI-agents configuration and workflow automation\n- Custom Power Platform solutions\n- Teams and SharePoint optimization\n\n### 5. Support & Management\n- 24/7 monitoring and proactive maintenance\n- Continuous optimization and updates\n- Helpdesk and user support\n\n## What We Offer\n\n**AI-Driven Productivity**\nMicrosoft 365 Copilot implementation for automated document generation, intelligent data analysis and workflow optimization.\n\n**Enterprise Security**\nComplete security implementation with Microsoft Defender, multi-factor authentication and Advanced Threat Protection for all applications.\n\n**Compliance & Governance**\nGDPR-compliant setup with Microsoft Purview, data loss prevention and comprehensive audit capabilities.\n\n**Modern Collaboration**\nTeams, SharePoint Online and Power Platform configuration for seamless collaboration and process automation.\n\n## Technical Capabilities\n\nWe work with the latest Microsoft cloud technologies:\n\n- **Microsoft 365 Copilot**: AI assistants for productivity enhancement\n- **Azure Active Directory**: Centralized identity management and security\n- **Power Platform**: Custom business applications and automation\n- **Microsoft Defender**: Advanced threat protection\n- **SharePoint Online**: Document management and collaboration\n- **Azure Arc**: Hybrid cloud management and governance\n\n## Why Choose Our Microsoft 365 Services?\n\n- **Proven Expertise**: Microsoft Trained with extensive experience\n- **Holistic Approach**: Complete workplace transformation, not just technical implementation\n- **AI-Focus**: Maximum utilization of Microsoft 365 Copilot and AI capabilities\n- **Security-First**: Enterprise-grade security from day one\n- **Minimal Downtime**: Phased migrations with business continuity guarantee\n- **Continuous Support**: 24/7 monitoring and proactive management\n\nDiscover how Microsoft 365 can transform your organization into a modern, AI-driven workplace that maximizes productivity and is future-ready.","size_bytes":4288},"public/content/services/microsoft-365.nl.md":{"content":"---\ntitle: Microsoft 365 & Modern Workplace\nicon: cloud\nshort_description: Intelligente cloud oplossingen voor de moderne werkplek met geavanceerde AI-integratie en enterprise-security\nfeatured_image: /uploads/microsoft-365-service.svg\norder: 4\nfeatures:\n  - name: Microsoft 365 AI automatiserings implementaties\n    description: AI-gedreven productiviteitsverbetering met Copilot en geautomatiseerde workflows.\n  - name: GDPR-compliant gegevensbescherming\n    description: Volledige AVG-compliance en duidelijkheid waar uw data naartoe gaat.\n  - name: Azure Cloud integratie\n    description: Hybride cloudoplossingen met 99.9% uptime garantie en schaalbaarheid.\n  - name: Modern Workplace transformatie\n    description: Flexibele werkplekken met Teams, SharePoint en Power Platform integratie.\n  - name: Enterprise security & compliance\n    description: Multi-factor authenticatie en Advanced Threat Protection in alle applicaties.\ntech_stack:\n  - name: Microsoft 365 Copilot\n    description: AI-gedreven productiviteitsassistent voor automatisering van dagelijkse taken.\n  - name: Azure Active Directory\n    description: Identiteits- en toegangsbeheer voor veilige authenticatie en autorisatie.\n  - name: Power Platform\n    description: Low-code/no-code platform voor custom business apps en automatisering.\n  - name: Microsoft Defender\n    description: Geavanceerde bedreigingendetectie en enterprise-beveiliging.\n---\n\n# Microsoft 365 & Modern Workplace: Toekomstbestendige Cloudoplossingen\n\nTransformeer uw organisatie met intelligente Microsoft 365 oplossingen die AI-gedreven productiviteit combineren met enterprise-grade beveiliging. Van migraties tot complete Modern Workplace transformaties - wij implementeren cloudoplossingen die uw bedrijf toekomstbestendig maken.\n\n## Ons Implementatieproces\n\nWe volgen een gestructureerde aanpak voor succesvolle Microsoft 365 implementaties:\n\n### 1. Analyse & Assessment\n- Digitale workplace audit en huidige infrastructuur beoordeling\n- Compliance-vereisten en security-analyse\n- Gebruikersbehoeften en workflow-mapping\n\n### 2. Strategie & Planning\n- Modern Workplace roadmap ontwikkeling\n- Migratiestrategie met gefaseerde uitrol\n- Change management en training planning\n\n### 3. Implementatie\n- Gefaseerde uitrol met minimale downtime\n- Data migratie en systeem configuratie\n- Gebruikers onboarding en training\n\n### 4. Integratie & Optimalisatie\n- AI-agents configuratie en workflow-automatisering\n- Custom Power Platform oplossingen\n- Teams en SharePoint optimalisatie\n\n### 5. Support & Beheer\n- 24/7 monitoring en proactief onderhoud\n- Continue optimalisatie en updates\n- Helpdesk en gebruikersondersteuning\n\n## Wat We Bieden\n\n**AI-Gedreven Productiviteit**\nMicrosoft 365 Copilot implementatie voor geautomatiseerde documentgeneratie, intelligente data-analyse en workflow-optimalisatie.\n\n**Enterprise Security**\nComplete beveiligingsimplementatie met Microsoft Defender, multi-factor authenticatie en Advanced Threat Protection voor alle applicaties.\n\n**Compliance & Governance**\nGDPR-compliant setup met Microsoft Purview, data loss prevention en uitgebreide audit capabilities.\n\n**Modern Collaboration**\nTeams, SharePoint Online en Power Platform configuratie voor naadloze samenwerking en procesautomatisering.\n\n## Technische Capabilities\n\nWe werken met de nieuwste Microsoft cloud-technologieën:\n\n- **Microsoft 365 Copilot**: AI-assistenten voor productiviteitsverbetering\n- **Azure Active Directory**: Centraal identiteitsbeheer en security\n- **Power Platform**: Custom business applications en automatisering\n- **Microsoft Defender**: Geavanceerde threat protection\n- **SharePoint Online**: Document management en collaboration\n- **Azure Arc**: Hybride cloud management en governance\n\n## Waarom Kiezen voor Onze Microsoft 365 Services?\n\n- **Bewezen Expertise**: Microsoft Opgeleid met uitgebreide ervaring\n- **Holistische Aanpak**: Complete workplace transformatie, niet alleen technische implementatie\n- **AI-Focus**: Maximale benutting van Microsoft 365 Copilot en AI-capabilities\n- **Security-First**: Enterprise-grade beveiliging vanaf dag één\n- **Minimale Downtime**: Gefaseerde migraties met business continuity garantie\n- **Continue Ondersteuning**: 24/7 monitoring en proactief beheer\n\nOntdek hoe Microsoft 365 uw organisatie kan transformeren naar een moderne, AI-gedreven werkplek die productiviteit maximaliseert en toekomstbestendig is.","size_bytes":4411},"public/content/services/web-development.en.md":{"content":"---\ntitle: Web Development\nicon: code\nshort_description: Modern, professional websites and web applications tailored for your business, with a focus on user-friendliness, performance, and conversion.\nfeatured_image: /uploads/web-development-service.jpg\norder: 2\nfeatures:\n  - name: Responsive Design\n    description: Websites that work perfectly on every device, from desktop to mobile.\n  - name: Optimal Performance\n    description: Fast loading times and smooth interactions for a better user experience.\n  - name: SEO-friendly\n    description: Built with best practices for search engine optimization.\n  - name: Scalable Architecture\n    description: Future-proof solutions that can grow with your business.\ntech_stack:\n  - name: React & Next.js\n    description: Modern frontend technologies for interactive user experiences.\n  - name: Node.js & Express\n    description: Powerful backend solutions for stable and secure applications.\n  - name: TypeScript\n    description: Type-safe code for more robust applications and fewer bugs.\n  - name: PostgreSQL & MongoDB\n    description: Flexible database solutions suited to your specific needs.\n---\n\n# Web Development: Digital Solutions that Propel Your Business Forward\n\nIn today's digital landscape, your website is often the first point of contact with potential customers. At Digimaatwerk, we build websites that not only look good but are also purposeful, technically excellent, and deliver measurable results.\n\n## Our Web Development Approach\n\nFor every web development project, your business goal is central. We follow a proven process:\n\n- **Strategic Planning**: We start by understanding your goals, target audience, and competition.\n- **UX/UI Design**: Creation of intuitive, attractive user experiences that strengthen your brand.\n- **Development**: Building with modern, future-proof technologies.\n- **Testing & Optimization**: Rigorous testing for functionality, user experience, and performance.\n- **Launch & Support**: Seamless implementation and continuous support.\n\n## Why Choose Our Web Development Services?\n\n- **Business-focused**: Focus on concrete business objectives and ROI.\n- **Customized**: Solutions precisely fitting your specific needs.\n- **Future-proof**: Use of the latest technologies and best practices.\n- **User-centered**: Websites that your visitors enjoy using and return to.\n- **Full Control**: Content management systems that make it easy for you to make updates.\n\n## Types of Web Development Projects\n\nWe have experience with various types of web projects:\n\n1. **Business Websites**: Professional presentation of your organization.\n2. **E-commerce Platforms**: Online stores with advanced functionalities.\n3. **Web Applications**: Powerful tools that improve business processes.\n4. **Customer Portals**: Secure environments for customer interactions.\n5. **Progressive Web Apps**: Hybrid solutions between websites and native apps.\n\nContact us for a no-obligation conversation about how we can elevate your digital presence.","size_bytes":3010},"public/content/services/web-development.nl.md":{"content":"---\ntitle: Web Development\nicon: code\nshort_description: Moderne, professionele websites en webapplicaties op maat voor uw bedrijf, met focus op gebruiksvriendelijkheid, prestaties en conversie.\nfeatured_image: /uploads/web-development-service.jpg\norder: 2\nfeatures:\n  - name: Responsive Design\n    description: Websites die perfect werken op elk apparaat, van desktop tot mobiel.\n  - name: Optimale Prestaties\n    description: Snelle laadtijden en soepele interacties voor een betere gebruikerservaring.\n  - name: SEO-vriendelijk\n    description: Gebouwd met de beste praktijken voor zoekmachineoptimalisatie.\n  - name: Schaalbare Architectuur\n    description: Toekomstbestendige oplossingen die kunnen meegroeien met uw bedrijf.\ntech_stack:\n  - name: React & Next.js\n    description: Moderne frontend-technologieën voor interactieve gebruikerservaringen.\n  - name: Node.js & Express\n    description: Krachtige backend-oplossingen voor stabiele en veilige applicaties.\n  - name: TypeScript\n    description: Typeveilige code voor robuustere applicaties en minder bugs.\n  - name: PostgreSQL & MongoDB\n    description: Flexibele database-oplossingen passend bij uw specifieke behoeften.\n---\n\n# Web Development: Digitale Oplossingen die Uw Bedrijf Vooruit Helpen\n\nIn het huidige digitale landschap is uw website vaak het eerste contactpunt met potentiële klanten. Bij Digimaatwerk bouwen we niet alleen websites die er goed uitzien, maar die ook doelgericht zijn, technisch excellent, en meetbare resultaten opleveren.\n\n## Onze Web Development Aanpak\n\nBij elk web development project staat uw bedrijfsdoel centraal. We volgen een bewezen proces:\n\n- **Strategische Planning**: We beginnen met het begrijpen van uw doelen, doelgroep en concurrentie.\n- **UX/UI Design**: Creatie van intuïtieve, aantrekkelijke gebruikerservaringen die uw merk versterken.\n- **Development**: Bouwen met moderne, toekomstbestendige technologieën.\n- **Testen & Optimalisatie**: Rigoureus testen op functionaliteit, gebruikerservaring en prestaties.\n- **Lancering & Ondersteuning**: Probleemloze implementatie en continue ondersteuning.\n\n## Waarom Kiezen voor Onze Web Development Services?\n\n- **Businessgericht**: Focus op concrete bedrijfsdoelstellingen en ROI.\n- **Maatwerk**: Oplossingen precies passend bij uw specifieke behoeften.\n- **Toekomstbestendig**: Gebruik van de nieuwste technologieën en best practices.\n- **Gebruikersgericht**: Websites die uw bezoekers graag gebruiken en terugkeren.\n- **Volledig Beheer**: Content management systemen waarmee u eenvoudig updates kunt maken.\n\n## Soorten Web Development Projecten\n\nWe hebben ervaring met diverse soorten webprojecten:\n\n1. **Bedrijfswebsites**: Professionele presentatie van uw organisatie.\n2. **E-commerce Platforms**: Online winkels met geavanceerde functionaliteiten.\n3. **Web Applicaties**: Krachtige tools die bedrijfsprocessen verbeteren.\n4. **Customer Portals**: Veilige omgevingen voor klantinteracties.\n5. **Progressive Web Apps**: Hybride oplossingen tussen websites en native apps.\n\nNeem contact met ons op voor een vrijblijvend gesprek over hoe we uw digitale aanwezigheid naar een hoger niveau kunnen tillen.","size_bytes":3164},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1405},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2609},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1877},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"import * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10466},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":315},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4879},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7246},"client/src/components/ui/dialog.tsx":{"content":"import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3835},"client/src/components/ui/drawer.tsx":{"content":"import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3007},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7361},"client/src/components/ui/form.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4085},"client/src/components/ui/hover-card.tsx":{"content":"import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1184},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":845},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"import * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":7974},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5046},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1230},"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":777},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"import { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1709},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5615},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"import * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4267},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        if (setOpenProp) {\n          return setOpenProp?.(\n            typeof value === \"function\" ? value(open) : value\n          )\n        }\n\n        _setOpen(value)\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${open}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full text-sidebar-foreground has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23337},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":772},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1739},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1435},"client/src/components/ui/tooltip.tsx":{"content":"import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1145},"client/src/pages/legal/GooglePrivacyPolicy.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\n\nconst GooglePrivacyPolicy = () => {\n  const { language } = useLanguage();\n\n  return (\n    <div className=\"min-h-screen bg-primary pt-28 pb-16\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-secondary/80 backdrop-blur-md rounded-2xl p-8 shadow-lg\"\n        >\n          <h1 className=\"text-3xl font-header font-bold mb-8 text-center\">\n            {language === 'nl' ? 'Google Privacybeleid' : 'Google Privacy Policy'}\n          </h1>\n\n          {language === 'nl' ? (\n            // Dutch version\n            <div className=\"prose prose-invert max-w-none prose-headings:font-header prose-p:text-foreground/80\">\n              <h2 className=\"text-2xl font-bold mt-8 mb-4\">Privacybeleid van Google</h2>\n              <p>\n                Ons contactformulier maakt gebruik van Google reCAPTCHA om spam te voorkomen. \n                Uw gebruik van reCAPTCHA is onderworpen aan het \n                <a href=\"https://policies.google.com/privacy\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-accent hover:underline mx-1\">\n                  Privacybeleid van Google\n                </a> \n                en de \n                <a href=\"https://policies.google.com/terms\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-accent hover:underline mx-1\">\n                  Servicevoorwaarden van Google\n                </a>.\n              </p>\n              \n              <p>\n                Door gebruik te maken van ons contactformulier, stemt u in met het verzamelen en verwerken \n                van gegevens door Google, zoals beschreven in hun privacybeleid.\n              </p>\n              \n              <p>\n                Google reCAPTCHA verzamelt hardwaregegevens, software- en apparaatinformatie, en andere details\n                om te bepalen of het formulier wordt ingevuld door een mens of door een geautomatiseerd systeem.\n              </p>\n              \n              <p>\n                Voor volledige informatie over de gegevens die Google verzamelt en hoe deze worden verwerkt, \n                raden wij u aan het actuele Privacybeleid van Google te lezen via de bovenstaande link.\n              </p>\n            </div>\n          ) : (\n            // English version\n            <div className=\"prose prose-invert max-w-none prose-headings:font-header prose-p:text-foreground/80\">\n              <h2 className=\"text-2xl font-bold mt-8 mb-4\">Google Privacy Policy</h2>\n              <p>\n                Our contact form uses Google reCAPTCHA to prevent spam. Your use of reCAPTCHA is subject to the\n                <a href=\"https://policies.google.com/privacy\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-accent hover:underline mx-1\">\n                  Google Privacy Policy\n                </a> \n                and \n                <a href=\"https://policies.google.com/terms\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-accent hover:underline mx-1\">\n                  Google Terms of Service\n                </a>.\n              </p>\n              \n              <p>\n                By using our contact form, you consent to the collection and processing of data by Google \n                as described in their privacy policy.\n              </p>\n              \n              <p>\n                Google reCAPTCHA collects hardware data, software and device information, and other details \n                to determine whether the form is being filled out by a human or by an automated system.\n              </p>\n              \n              <p>\n                For complete information about the data Google collects and how it is processed, \n                we recommend reading Google's current Privacy Policy via the link above.\n              </p>\n            </div>\n          )}\n\n          <div className=\"mt-8 flex justify-center\">\n            <a \n              href=\"/\" \n              className=\"px-6 py-2 bg-accent text-primary font-medium rounded-lg transition-colors hover:bg-accent/90\"\n            >\n              {language === 'nl' ? 'Terug naar Home' : 'Back to Home'}\n            </a>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default GooglePrivacyPolicy;","size_bytes":4431},"client/src/pages/legal/PrivacyPolicy.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\n\nconst PrivacyPolicy = () => {\n  const { language } = useLanguage();\n\n  return (\n    <div className=\"min-h-screen bg-primary pt-28 pb-16\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-secondary/80 backdrop-blur-md rounded-2xl p-8 shadow-lg\"\n        >\n          <h1 className=\"text-3xl font-header font-bold mb-8 text-center\">\n            {language === 'nl' ? 'Privacybeleid' : 'Privacy Policy'}\n          </h1>\n\n          {language === 'nl' ? (\n            // Dutch version\n            <div className=\"prose prose-invert max-w-none prose-headings:font-header prose-p:text-foreground/80\">\n              <h2 className=\"text-2xl font-bold mt-8 mb-4\">Uw privacy bij Digimaatwerk</h2>\n              <p>\n                Digimaatwerk respecteert uw privacy en verwerkt uw gegevens in overeenstemming met de Algemene \n                Verordening Gegevensbescherming (AVG). In dit privacybeleid leggen wij uit welke persoonlijke \n                gegevens wij verwerken, waarom we dat doen en hoe we uw gegevens beschermen.\n              </p>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Welke gegevens verwerken wij?</h3>\n              <p>Wij kunnen de volgende gegevens verwerken:</p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li>Naam</li>\n                <li>E-mailadres</li>\n                <li>Telefoonnummer</li>\n                <li>IP-adres</li>\n                <li>Browsinggedrag (cookies)</li>\n                <li>Projectinformatie die u verstrekt via onze formulieren</li>\n              </ul>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Waarom verwerken wij uw gegevens?</h3>\n              <p>Wij verwerken uw gegevens voor de volgende doeleinden:</p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li>Om contact met u op te nemen over uw projectaanvraag</li>\n                <li>Voor het leveren van onze diensten, zoals webontwikkeling en automatisering</li>\n                <li>Voor het verbeteren van onze website en diensten</li>\n                <li>Om te voldoen aan wettelijke verplichtingen</li>\n              </ul>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Wie heeft toegang tot uw gegevens?</h3>\n              <p>\n                Uw gegevens worden alleen gedeeld met derden indien noodzakelijk voor het uitvoeren van onze diensten, \n                zoals hostingproviders of betalingsverwerkers. Wij zorgen ervoor dat deze partijen voldoen aan de AVG.\n              </p>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Hoe lang bewaren wij uw gegevens?</h3>\n              <p>\n                Uw gegevens worden bewaard zolang als nodig is om de bovengenoemde doeleinden te bereiken. \n                Wij verwijderen uw gegevens zodra deze niet meer nodig zijn.\n              </p>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Uw rechten</h3>\n              <p>U heeft het recht om:</p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li>Uw gegevens in te zien</li>\n                <li>Uw gegevens te wijzigen of te verwijderen</li>\n                <li>Bezwaar te maken tegen verwerking</li>\n                <li>Uw toestemming in te trekken</li>\n              </ul>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Cookies</h3>\n              <p>\n                Onze website gebruikt cookies om uw ervaring te verbeteren. Wij onderscheiden de volgende soorten cookies:\n              </p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li><strong>Noodzakelijke cookies:</strong> Essentieel voor het functioneren van de website</li>\n                <li><strong>Analytische cookies:</strong> Helpen ons begrijpen hoe bezoekers de website gebruiken</li>\n                <li><strong>Marketing cookies:</strong> Gebruikt voor het tonen van relevante advertenties</li>\n                <li><strong>Voorkeurscookies:</strong> Onthouden uw voorkeuren en instellingen</li>\n              </ul>\n              <p>\n                U kunt uw cookie-voorkeuren beheren via de cookie-instellingen die verschijnen bij uw eerste bezoek aan onze website.\n              </p>\n\n              <p>\n                Voor vragen of verzoeken kunt u contact opnemen via{' '}\n                <a href=\"mailto:info@digimaatwerk.nl\" className=\"text-accent hover:underline\">\n                  info@digimaatwerk.nl\n                </a>\n                .\n              </p>\n            </div>\n          ) : (\n            // English version\n            <div className=\"prose prose-invert max-w-none prose-headings:font-header prose-p:text-foreground/80\">\n              <h2 className=\"text-2xl font-bold mt-8 mb-4\">Your Privacy at Digimaatwerk</h2>\n              <p>\n                Digimaatwerk respects your privacy and processes your data in accordance with the General \n                Data Protection Regulation (GDPR). This privacy policy explains what personal data we process, \n                why we do so, and how we protect your data.\n              </p>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">What data do we process?</h3>\n              <p>We may process the following data:</p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li>Name</li>\n                <li>Email address</li>\n                <li>Phone number</li>\n                <li>IP address</li>\n                <li>Browsing behavior (cookies)</li>\n                <li>Project information provided through our forms</li>\n              </ul>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Why do we process your data?</h3>\n              <p>We process your data for the following purposes:</p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li>To contact you regarding your project inquiry</li>\n                <li>To deliver our services, such as web development and automation</li>\n                <li>To improve our website and services</li>\n                <li>To comply with legal obligations</li>\n              </ul>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Who has access to your data?</h3>\n              <p>\n                Your data will only be shared with third parties if necessary to perform our services, \n                such as hosting providers or payment processors. We ensure these parties comply with GDPR.\n              </p>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">How long do we retain your data?</h3>\n              <p>\n                Your data is retained for as long as necessary to achieve the aforementioned purposes. \n                We delete your data when it is no longer needed.\n              </p>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Your rights</h3>\n              <p>You have the right to:</p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li>Access your data</li>\n                <li>Modify or delete your data</li>\n                <li>Object to processing</li>\n                <li>Withdraw your consent</li>\n              </ul>\n\n              <h3 className=\"text-xl font-bold mt-6 mb-2\">Cookies</h3>\n              <p>\n                Our website uses cookies to improve your experience. We distinguish between the following types of cookies:\n              </p>\n              <ul className=\"list-disc pl-6 mb-4\">\n                <li><strong>Necessary cookies:</strong> Essential for the website to function</li>\n                <li><strong>Analytics cookies:</strong> Help us understand how visitors use the website</li>\n                <li><strong>Marketing cookies:</strong> Used to show relevant advertisements</li>\n                <li><strong>Preference cookies:</strong> Remember your preferences and settings</li>\n              </ul>\n              <p>\n                You can manage your cookie preferences through the cookie settings that appear when you first visit our website.\n              </p>\n\n              <p>\n                For questions or requests, please contact us at{' '}\n                <a href=\"mailto:info@digimaatwerk.nl\" className=\"text-accent hover:underline\">\n                  info@digimaatwerk.nl\n                </a>\n                .\n              </p>\n            </div>\n          )}\n\n          <div className=\"mt-8 flex justify-center\">\n            <a \n              href=\"/\" \n              className=\"px-6 py-2 bg-accent text-primary font-medium rounded-lg transition-colors hover:bg-accent/90\"\n            >\n              {language === 'nl' ? 'Terug naar Home' : 'Back to Home'}\n            </a>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrivacyPolicy;","size_bytes":8893},"client/src/pages/legal/TermsOfService.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useLanguage } from '@/lib/languageContext';\n\nconst TermsOfService = () => {\n  const { language } = useLanguage();\n\n  return (\n    <div className=\"min-h-screen bg-primary pt-28 pb-16\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-secondary/80 backdrop-blur-md rounded-2xl p-8 shadow-lg\"\n        >\n          <h1 className=\"text-3xl font-header font-bold mb-8 text-center\">\n            {language === 'nl' ? 'Algemene Voorwaarden' : 'Terms of Service'}\n          </h1>\n\n          {language === 'nl' ? (\n            // Dutch version\n            <div className=\"prose prose-invert max-w-none prose-headings:font-header prose-p:text-foreground/80\">\n              <h2 className=\"text-2xl font-bold mt-8 mb-4\">Algemene voorwaarden van Digimaatwerk</h2>\n              \n              <p>\n                Door gebruik te maken van onze website en diensten gaat u akkoord met deze algemene voorwaarden. \n                Deze voorwaarden regelen het gebruik van onze website, de levering van diensten en uw rechten als klant.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">1. Definities</h3>\n              <p>\n                In deze algemene voorwaarden wordt verstaan onder:<br />\n                <strong>Digimaatwerk:</strong> de onderneming gevestigd te Amsterdam, ingeschreven bij de Kamer van Koophandel.<br />\n                <strong>Klant:</strong> de natuurlijke persoon of rechtspersoon die een overeenkomst aangaat met Digimaatwerk.<br />\n                <strong>Diensten:</strong> alle diensten die door Digimaatwerk worden aangeboden, waaronder webontwikkeling, \n                chatbot-implementatie en workflowautomatisering.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">2. Toepasselijkheid</h3>\n              <p>\n                Deze algemene voorwaarden zijn van toepassing op alle aanbiedingen, overeenkomsten en leveringen \n                van Digimaatwerk, tenzij uitdrukkelijk schriftelijk anders is overeengekomen.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">3. Offertes en aanbiedingen</h3>\n              <p>\n                Alle offertes en aanbiedingen van Digimaatwerk zijn vrijblijvend, tenzij in de offerte een termijn \n                voor aanvaarding is gesteld. Een offerte of aanbieding vervalt indien het product waarop de offerte \n                of de aanbieding betrekking heeft in de tussentijd niet meer beschikbaar is.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">4. Uitvoering van de overeenkomst</h3>\n              <p>\n                Digimaatwerk zal de overeenkomst naar beste inzicht en vermogen en overeenkomstig de eisen van goed \n                vakmanschap uitvoeren. Digimaatwerk heeft het recht bepaalde werkzaamheden te laten verrichten door derden.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">5. Betaling en incassokosten</h3>\n              <p>\n                Betaling dient steeds te geschieden binnen 14 dagen na factuurdatum. Indien de klant in gebreke blijft in de \n                tijdige betaling van een factuur, dan is de klant van rechtswege in verzuim.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">6. Intellectuele eigendom</h3>\n              <p>\n                Digimaatwerk behoudt zich de rechten en bevoegdheden voor die hem toekomen op grond van de Auteurswet en \n                andere intellectuele wet- en regelgeving. Digimaatwerk heeft het recht de door de uitvoering van een \n                overeenkomst aan zijn zijde toegenomen kennis ook voor andere doeleinden te gebruiken.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">7. Aansprakelijkheid</h3>\n              <p>\n                Indien Digimaatwerk aansprakelijk mocht zijn, dan is deze aansprakelijkheid beperkt tot hetgeen in deze \n                bepaling is geregeld. Digimaatwerk is niet aansprakelijk voor schade, van welke aard ook, ontstaan doordat \n                Digimaatwerk is uitgegaan van door of namens de klant verstrekte onjuiste en/of onvolledige gegevens.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">8. Toepasselijk recht en geschillen</h3>\n              <p>\n                Op alle rechtsbetrekkingen waarbij Digimaatwerk partij is, is uitsluitend het Nederlands recht van toepassing. \n                De rechter in de vestigingsplaats van Digimaatwerk is bij uitsluiting bevoegd van geschillen kennis te nemen.\n              </p>\n              \n              <p className=\"mt-8\">\n                Voor vragen over onze algemene voorwaarden kunt u contact opnemen via{' '}\n                <a href=\"mailto:info@digimaatwerk.nl\" className=\"text-accent hover:underline\">\n                  info@digimaatwerk.nl\n                </a>\n                .\n              </p>\n            </div>\n          ) : (\n            // English version\n            <div className=\"prose prose-invert max-w-none prose-headings:font-header prose-p:text-foreground/80\">\n              <h2 className=\"text-2xl font-bold mt-8 mb-4\">Terms and Conditions of Digimaatwerk</h2>\n              \n              <p>\n                By using our website and services, you agree to these terms and conditions. \n                These terms govern the use of our website, the delivery of services, and your rights as a customer.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">1. Definitions</h3>\n              <p>\n                In these terms and conditions:<br />\n                <strong>Digimaatwerk:</strong> the company located in Amsterdam, registered with the Chamber of Commerce.<br />\n                <strong>Customer:</strong> the natural person or legal entity that enters into an agreement with Digimaatwerk.<br />\n                <strong>Services:</strong> all services offered by Digimaatwerk, including web development, \n                chatbot implementation, and workflow automation.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">2. Applicability</h3>\n              <p>\n                These terms and conditions apply to all offers, agreements, and deliveries \n                by Digimaatwerk, unless explicitly agreed otherwise in writing.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">3. Quotes and offers</h3>\n              <p>\n                All quotes and offers from Digimaatwerk are non-binding, unless a deadline \n                for acceptance has been set in the offer. A quote or offer expires if the product \n                to which the quote or offer relates is no longer available.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">4. Execution of the agreement</h3>\n              <p>\n                Digimaatwerk will execute the agreement to the best of its knowledge and ability and in accordance \n                with the requirements of good workmanship. Digimaatwerk has the right to have certain work performed by third parties.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">5. Payment and collection costs</h3>\n              <p>\n                Payment must always be made within 14 days of the invoice date. If the customer fails to make \n                timely payment of an invoice, the customer is legally in default.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">6. Intellectual property</h3>\n              <p>\n                Digimaatwerk reserves the rights and powers that accrue to it under the Copyright Act and \n                other intellectual property laws and regulations. Digimaatwerk has the right to use the knowledge \n                gained through the execution of an agreement for other purposes.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">7. Liability</h3>\n              <p>\n                If Digimaatwerk is liable, this liability is limited to what is regulated in this provision. \n                Digimaatwerk is not liable for damage of any kind resulting from Digimaatwerk relying on \n                incorrect and/or incomplete information provided by or on behalf of the customer.\n              </p>\n              \n              <h3 className=\"text-xl font-bold mt-6 mb-2\">8. Applicable law and disputes</h3>\n              <p>\n                Dutch law exclusively applies to all legal relationships to which Digimaatwerk is a party. \n                The court in Digimaatwerk's place of business has exclusive jurisdiction to hear disputes.\n              </p>\n              \n              <p className=\"mt-8\">\n                For questions about our terms and conditions, please contact us at{' '}\n                <a href=\"mailto:info@digimaatwerk.nl\" className=\"text-accent hover:underline\">\n                  info@digimaatwerk.nl\n                </a>\n                .\n              </p>\n            </div>\n          )}\n\n          <div className=\"mt-8 flex justify-center\">\n            <a \n              href=\"/\" \n              className=\"px-6 py-2 bg-accent text-primary font-medium rounded-lg transition-colors hover:bg-accent/90\"\n            >\n              {language === 'nl' ? 'Terug naar Home' : 'Back to Home'}\n            </a>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default TermsOfService;","size_bytes":9827}}}